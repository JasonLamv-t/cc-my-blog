{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/zhaoo/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/js/color-mode.js","path":"js/color-mode.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/icons/apple-touch-icon.png","path":"images/icons/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/icons/favicon-144x144.png","path":"images/icons/favicon-144x144.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/icons/favicon-16x16.png","path":"images/icons/favicon-16x16.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/icons/favicon-32x32.png","path":"images/icons/favicon-32x32.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/icons/zhaoo-logo.png","path":"images/icons/zhaoo-logo.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/theme/cloud.png","path":"images/theme/cloud.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/theme/loading.gif","path":"images/theme/loading.gif","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/theme/panda.jpg","path":"images/theme/panda.jpg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/theme/post-image.jpg","path":"images/theme/post-image.jpg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/theme/welcome-image.jpg","path":"images/theme/welcome-image.jpg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/daovoice/daovoice.js","path":"lib/daovoice/daovoice.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/fancybox/fancybox.css","path":"lib/fancybox/fancybox.css","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/fancybox/fancybox.js","path":"lib/fancybox/fancybox.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/gitalk/gitalk.css","path":"lib/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/gitalk/gitalk.js","path":"lib/gitalk/gitalk.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/highlight/a11y-dark.css","path":"lib/highlight/a11y-dark.css","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/highlight/highlight.js","path":"lib/highlight/highlight.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/lazyload/lazyload.js","path":"lib/lazyload/lazyload.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/jquery/jquery.js","path":"lib/jquery/jquery.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/pjax/pjax.js","path":"lib/pjax/pjax.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/qrcode/qrcode.js","path":"lib/qrcode/qrcode.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/my_first_blog.md","hash":"0ab440d5fe3036c1e7df47ef2f83d1e2eb018604","modified":1621444350198},{"_id":"source/.DS_Store","hash":"20475d28cdaa05ac50200d12652278b71c6cfeef","modified":1623820216755},{"_id":"source/categories/index.md","hash":"446c750191f2469ed043a321d231555b96006e56","modified":1621325782735},{"_id":"source/galleries/index.md","hash":"84a2c45e2d0b3547d0004caf56ad40be0c4f74b8","modified":1621325638881},{"_id":"source/about/index.md","hash":"dba2c0454b3c74953126951271ab718b97e67ba3","modified":1621340068614},{"_id":"source/_data/galleries.json","hash":"2b8bd59e5dbda5512b6a7458b2d3936e7ae23c5a","modified":1621217920000},{"_id":"source/tags/index.md","hash":"1e409e934d1393e0b25ed88a98ebbab2b01e1cff","modified":1621325764489},{"_id":"source/galleries/记事/index.md","hash":"487e5b5267f2a83fd35ce179a57e3d54e8e2b870","modified":1621217920000},{"_id":"source/galleries/深圳日记/index.md","hash":"ed9640b8192a9a9ce4771a33a8c2671d408fbb80","modified":1621217920000},{"_id":"source/galleries/colorful/index.md","hash":"d825ba0a41ff7ef253356a14bac6bfaf02135435","modified":1621217920000},{"_id":"themes/zhaoo/.gitignore","hash":"7d65523f2a5afb69d76824dd1dfa62a34faa3197","modified":1621217920000},{"_id":"themes/zhaoo/LICENSE","hash":"74f4b502cb5e62d3c947bc4fd16bed695d8bf65b","modified":1621217920000},{"_id":"themes/zhaoo/README.md","hash":"edfe090d2d2e4c67809bdcae9f2f26a390ff8a84","modified":1621217920000},{"_id":"themes/zhaoo/README_EN.md","hash":"37752da20ce4967080464b568d0de3719aa9c29d","modified":1621217920000},{"_id":"themes/zhaoo/_config.yml","hash":"adb7cc132c135e0ef28ef32ba480c0363205b5ab","modified":1623913434368},{"_id":"themes/zhaoo/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1621217920000},{"_id":"themes/zhaoo/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1621217920000},{"_id":"themes/zhaoo/languages/default.yml","hash":"1b2b75ca9ff3bfeddb596239889b584cdfcecc32","modified":1621217920000},{"_id":"themes/zhaoo/languages/it.yml","hash":"6ae71000ed039f56572143ffe90da17b95d1a66f","modified":1621217920000},{"_id":"themes/zhaoo/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1621217920000},{"_id":"themes/zhaoo/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1621217920000},{"_id":"themes/zhaoo/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1621217920000},{"_id":"themes/zhaoo/languages/zh-CN.yml","hash":"ccbba6315760755926f5abfe1b98c225a6650581","modified":1621217920000},{"_id":"themes/zhaoo/layout/archive.ejs","hash":"438069ea52e71a9fd8c96ff58007ec6c91e352a7","modified":1621217920000},{"_id":"themes/zhaoo/layout/gallery.ejs","hash":"a379c8607ae2fdd450198e437ba8125ac1435654","modified":1621217920000},{"_id":"themes/zhaoo/layout/category.ejs","hash":"ca4af3683e3d3daf9282c76b0749c2b1a89399ac","modified":1621217920000},{"_id":"themes/zhaoo/layout/galleries.ejs","hash":"633645da14268042d77538e819ff2091cea311ca","modified":1621217920000},{"_id":"themes/zhaoo/layout/index.ejs","hash":"0e6282054062e1391be29bb473487a808f13828c","modified":1621217920000},{"_id":"themes/zhaoo/layout/post.ejs","hash":"747038a8b2d33bce35b2f68d3e50bdfa28c4f36c","modified":1621217920000},{"_id":"themes/zhaoo/layout/layout.ejs","hash":"4b559e7859d72d3e962b18198cbb30ec126c84b5","modified":1621217920000},{"_id":"themes/zhaoo/layout/categories.ejs","hash":"e7ed9fa6a6abd02af212a8bf04fc600d008f4abd","modified":1621217920000},{"_id":"themes/zhaoo/layout/pure.ejs","hash":"1ffc46cb8d2a976a329bd6e8292ca8114467f833","modified":1621217920000},{"_id":"themes/zhaoo/layout/tags.ejs","hash":"937f6400f7b47baa4aca025786dcd67151355cc1","modified":1621217920000},{"_id":"themes/zhaoo/layout/tag.ejs","hash":"91a8ffd62866427d6e04884fc4fc806b8c261770","modified":1621217920000},{"_id":"themes/zhaoo/scripts/caption.js","hash":"651928cc462943be90036c33262d3d25aa3e7ea0","modified":1621217920000},{"_id":"themes/zhaoo/scripts/carrier.js","hash":"10c3cde9ec17e1ced6ad871e7f5af409cbc51e6e","modified":1621217920000},{"_id":"themes/zhaoo/scripts/lazyload.js","hash":"ccf0c3d84fc2edf085c43e204410cf4d3c6b2baa","modified":1621217920000},{"_id":"themes/zhaoo/scripts/entry.js","hash":"c0c69f1c184c7a2e29dbaaa45a93b8948c241932","modified":1621217920000},{"_id":"themes/zhaoo/scripts/merge-config.js","hash":"35aac2f51a883d4d7bbe2b3b273b47f4db670952","modified":1621217920000},{"_id":"themes/zhaoo/scripts/post-image.js","hash":"82f5d9d5d9fe9d7de886d87fe20cea360d0df8d9","modified":1621217920000},{"_id":"themes/zhaoo/scripts/title.js","hash":"b62b21cd09717564ef883c901deb5451b3000dbd","modified":1621217920000},{"_id":"themes/zhaoo/source/css/style.styl","hash":"91077c8a71c5827bdc5875309e3837e48a290ffd","modified":1621217920000},{"_id":"themes/zhaoo/source/js/color-mode.js","hash":"33cd307624e32035ea4544c9a6a4676ef9f70beb","modified":1621217920000},{"_id":"themes/zhaoo/source/js/script.js","hash":"6d73d31593faf80f5b778cf994f2dfea37820166","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/head.ejs","hash":"c6fd6be80cd4e81a93f6086659c731d57fbe128b","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/_data/galleries.json","hash":"2b8bd59e5dbda5512b6a7458b2d3936e7ae23c5a","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/script.ejs","hash":"53ab7c5c07e0de759bd207485f40aa1291b31f32","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/_data/local_images.json","hash":"9a5ba1814709361cd141121e803f8953ef32d7fb","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/_posts/hexo-theme-zhaoo-doc.md","hash":"6855f6440f4cdac0540afbd4900f9ab2175a0d5a","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/_posts/hexo-theme-zhaoo.md","hash":"b52814eaf58dca925001beb2f911bb5e377e69a9","modified":1621217920000},{"_id":"themes/zhaoo/source/js/utils.js","hash":"359461693c5a1c8f9fb159c2dfb78051d0b351e1","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/galleries/index.md","hash":"83876d965236601bc871f6619f7d1f6e1357c945","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/about/index.md","hash":"e9cf4e1b773da337befbacca42eeffc5f76e2ad5","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/categories/index.md","hash":"108d69d9b70c1b66531b8de5e89d809f9fad26a6","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/tags/index.md","hash":"176a9920c6ed25f1f2d12940b7733da45b0966d4","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/comments/changyan.ejs","hash":"d762068b8c036ae7e83a2df9d36cd43dca46d5a4","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/comments/gitalk.ejs","hash":"8748a63003dc954df1b0a47f3d45ff191e714f3d","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/plugins/analytics.ejs","hash":"367d6fb80be4ce480c78bf63f2fbd2d28dedd0a3","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/comments/valine.ejs","hash":"8f6ce8eb608f0c7c9ce482fd1f8aad7efa175f8c","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/plugins/daovoice.ejs","hash":"f49d99f040979c44b7abad5136786c2535a8db46","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/plugins/visitors.ejs","hash":"a905c55cde044e835e077ad33527950d41be4ff4","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/plugins/seo.ejs","hash":"7aa361277db60df8195b651fdfbc95ec5f5a4daa","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/fab.ejs","hash":"c5e472b2611e8f307d6a7ef51b0ca452fed9e870","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/loading.ejs","hash":"81680b42a796d4d500eda9c5d87d8e80e4b938b2","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/footer.ejs","hash":"59dab61fa47add0fa174e49507659eb2e18d4de8","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/menu.ejs","hash":"c4106f65b24355895399ebae328bc8bb8f622d6a","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/navbar.ejs","hash":"d6886ca04c922bd32068ae3540a75463bdf42a99","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/paginator.ejs","hash":"174723904a7a0b6088c411233266a5d35b8affe7","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/header.ejs","hash":"62ae2fac8dc5d6cba29ebe777b9d06e6d954a45b","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/search.ejs","hash":"3e2f18d6b785cee85667655f1d27e9858447a3d8","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/scrollbar.ejs","hash":"dabbb31935dd1e67bf735665b35d41db8eee67c6","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/index/post.ejs","hash":"4de44a27558cf1058a5fe2bb65fb2e27f593af76","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/index/item.ejs","hash":"93caf17e4e412965c91d201fbfdba802ba75af00","modified":1621503309532},{"_id":"themes/zhaoo/layout/_partial/post/comments.ejs","hash":"505e0724ccf8aa467e219e9f1fc86ca62479ec18","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/index/preview.ejs","hash":"fc78346e7a00d1584fe8b0dc1b229a481c7a056a","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/post/article.ejs","hash":"96c9ea2ad0d686f676f71fd27190533e04f86999","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/post/head.ejs","hash":"d87a7aa0552a3f60597fc67b24a14d618c140fae","modified":1621444504921},{"_id":"themes/zhaoo/layout/_partial/post/copyright.ejs","hash":"3c16a6499867c7fb773505ea2d877b3bbfdf81b0","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/post/donate.ejs","hash":"e64e1a6e537ea56888baf9be98324baa9c39b49f","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/post/tag.ejs","hash":"6b94a9ccb03624e6ce7cbbc827e45bc4bfca8a4a","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/post/nav.ejs","hash":"9a59b60fdba3100d91c9f527bae75ac0e9cb8bd5","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/post/toc.ejs","hash":"bbb947334a5275cee6b834b5c216ddc6699d68c7","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_base/color-mode.styl","hash":"c9406b019d35cf119eab5068a6fa0bfe1f700e83","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_base/reset.styl","hash":"be64ad3469e427e9b7000e763034fb94984a8eeb","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_base/zui.styl","hash":"84c080d668427a3a64b8c930333c714783730414","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/pages.styl","hash":"c4e4af922ee697c44295ab1072e350d4587b120f","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_variables/variables.styl","hash":"0b91826477db4d06f24686287b130482dc966f02","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/fab.styl","hash":"d622768341395248224d07537afeb88be6af8a9f","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/footer.styl","hash":"06a0f3acc8947842889e06986025169063c72eac","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/header.styl","hash":"d9286ca8729e35d3b29ca6cb27ec2ccae562c040","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/common.styl","hash":"dc725d10a7a161654e498875d3a507ffe18dba7e","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/menu.styl","hash":"46f897c3cb3fea7c409d179cdcca7a63dd82bcd4","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/navbar.styl","hash":"4e7fbb1c5fd25b280d88a70eec465de8ac0a4ab4","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/paginator.styl","hash":"bafe156fce40a01f2fa38bc2bbb38dc92239cabd","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/preview.styl","hash":"b5427785cfee20fcc400e55e964dab3312584726","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/scrollbar.styl","hash":"aca6a15c54cf34ddbf99075d0c13d458cfc11828","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/search.styl","hash":"e9f96afd0947d83deda8cf6bfb938125a203b3d3","modified":1621217920000},{"_id":"themes/zhaoo/source/images/icons/apple-touch-icon.png","hash":"c1d16404a57db24e985204e7b2b97fa45d5fea0b","modified":1621217920000},{"_id":"themes/zhaoo/source/images/icons/favicon-144x144.png","hash":"e54f440ff564f1235f9c399e2cd435dd502ceb84","modified":1621217920000},{"_id":"themes/zhaoo/source/images/icons/favicon-32x32.png","hash":"7b095984bd7d07e10fa9b0df8347a933eba8537c","modified":1621217920000},{"_id":"themes/zhaoo/source/images/icons/favicon-16x16.png","hash":"86cc7a07ccf09deff3de7b0ef2f82daa282a8b8e","modified":1621217920000},{"_id":"themes/zhaoo/source/images/theme/loading.gif","hash":"db91090dd60098086993953f88c37a332eea70d7","modified":1621217920000},{"_id":"themes/zhaoo/source/images/icons/zhaoo-logo.png","hash":"50f9f5de4207847bba6aecc4c21d21d79f0001fb","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/fancybox/fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/gitalk/.DS_Store","hash":"d0c74f5f99535ad14eaec93484abb4ff8dbca277","modified":1621317807187},{"_id":"themes/zhaoo/source/lib/gitalk/gitalk.css","hash":"99f6725b386bdb0f52d15b0dd7877eaf1ad4c918","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/highlight/a11y-dark.css","hash":"9f0c935216015dd88251a6c366bdd00abfe65982","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/pjax/pjax.js","hash":"0ced78e5c97127948f5bfbfbb80c4fce5c0f671e","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/lazyload/lazyload.js","hash":"338318e930487b2791a7bcf53ad4601630cc41e2","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/highlight/highlight.js","hash":"a52ef27b8a21963326b05ef06f6ee104b8b94e7e","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/qrcode/qrcode.js","hash":"f424bd339870510d1160d1c5da5d698aedbb452e","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/galleries/记事/index.md","hash":"487e5b5267f2a83fd35ce179a57e3d54e8e2b870","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/_archive/archive.styl","hash":"9a680e104a6418997e093303bb93f9097553d049","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/_category/categories.styl","hash":"66f983e15ebca02d95342d00234981fa6c04825d","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/galleries/colorful/index.md","hash":"d825ba0a41ff7ef253356a14bac6bfaf02135435","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/_gallery/galleries.styl","hash":"9b66eab92e001637242aa9057edd07731ed94a3d","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/_index/index.styl","hash":"985026645db9065f5b76192faeb2abafe8098d42","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/_gallery/gallery.styl","hash":"4f1975a81247e226d63c50b9500278d969e6257a","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/_post/article.styl","hash":"5108130c6f413959e8b82c3c84d4c62688e338f5","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/_post/toc.styl","hash":"fc0c97ec7d9e98b79493cdd26452f4bb5defab08","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/galleries/深圳日记/index.md","hash":"ed9640b8192a9a9ce4771a33a8c2671d408fbb80","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/_tag/tags.styl","hash":"0ca5f9f71dab35247cf3b1318b2995a7e9058426","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/fancybox/fancybox.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/jquery/jquery.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1621217920000},{"_id":"themes/zhaoo/source/images/theme/cloud.png","hash":"fdf44a91026ad999dca2f0a42213aabebd783c98","modified":1621217920000},{"_id":"themes/zhaoo/source/images/theme/post-image.jpg","hash":"7fb1947508a411177829cedac8d5922671cac2b0","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/gitalk/gitalk.js","hash":"266500948447c95aeea95ef6760f192afc96fd5e","modified":1621217920000},{"_id":"themes/zhaoo/source/images/theme/panda.jpg","hash":"8010e2d52d9be56683ad8c9c8c71b2166730d4ef","modified":1615867952000},{"_id":"themes/zhaoo/screenshots/menu.png","hash":"0f4220734a52953636a5273d64a03c8b01ec6098","modified":1621217920000},{"_id":"themes/zhaoo/source/images/theme/welcome-image.jpg","hash":"79e9c9e83a6d8a0bb627e645b770dd2628cd546e","modified":1621217920000},{"_id":"themes/zhaoo/screenshots/galleries.png","hash":"8ba5a26c7932d5ef456cc799bbc00c5f468e54cc","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/daovoice/daovoice.js","hash":"180375e6fc5a5a71810b5e83109c0ce1533bbc5a","modified":1621217920000},{"_id":"themes/zhaoo/screenshots/article.png","hash":"74706d28c479a20f77c1bd4454879cabf8784ca6","modified":1621217920000},{"_id":"themes/zhaoo/screenshots/index.png","hash":"a95df16106c813b92f14071bac3d38bc53a1bc00","modified":1621217920000},{"_id":"themes/zhaoo/screenshots/preview.png","hash":"2b4271a275b9ff8318d00ab04504a109ec931fe7","modified":1621217920000},{"_id":"public/search.xml","hash":"30626c8db241bc857145f084a72aeaf655cf1037","modified":1623913463573},{"_id":"public/about/index.html","hash":"53625bd05b230668bdd3380cefcff7fb7aa2fc9f","modified":1621503000596},{"_id":"public/galleries/index.html","hash":"1a7f99f86038ae4a12a3c338714958f365ad1467","modified":1621503000596},{"_id":"public/categories/index.html","hash":"2ec324c505c11c8ddc0c3f4a6db9eff263da60c7","modified":1621503000596},{"_id":"public/galleries/记事/index.html","hash":"7a0d54289d3243c27adabb1859eadc3d8759b78c","modified":1621503000596},{"_id":"public/galleries/深圳日记/index.html","hash":"de159851c7456683f30811ca55bf4e6a1ce3d46d","modified":1621503000596},{"_id":"public/tags/index.html","hash":"6f44e6bf7508a012a875ebde58ece7977ff5d2e1","modified":1623913463573},{"_id":"public/galleries/colorful/index.html","hash":"84944df40d0aac151f581e472b11eef9bc020ec5","modified":1621503000596},{"_id":"public/2021/05/19/my_first_blog/index.html","hash":"018111578b4f4e0e119765f407e098f38b7e87ec","modified":1623913463573},{"_id":"public/archives/index.html","hash":"6b10bd2833db287c6dbf2f5bf8b8f59f547d5d61","modified":1623913463573},{"_id":"public/archives/2021/index.html","hash":"d783add353ad763836dd76554483aa9b2dfc42c4","modified":1623913463573},{"_id":"public/archives/2021/05/index.html","hash":"17b4c42c7c6214480cf91722536e52312aedec95","modified":1623913463573},{"_id":"public/categories/博客/index.html","hash":"af61757c93a20806790bccdf76e37668a1d91e38","modified":1621503000596},{"_id":"public/index.html","hash":"8cad9027d2f8fb15503170586064915261fa7435","modified":1623913463573},{"_id":"public/images/icons/apple-touch-icon.png","hash":"c1d16404a57db24e985204e7b2b97fa45d5fea0b","modified":1621503000596},{"_id":"public/images/icons/favicon-16x16.png","hash":"86cc7a07ccf09deff3de7b0ef2f82daa282a8b8e","modified":1621503000596},{"_id":"public/images/icons/favicon-32x32.png","hash":"7b095984bd7d07e10fa9b0df8347a933eba8537c","modified":1621503000596},{"_id":"public/images/icons/favicon-144x144.png","hash":"e54f440ff564f1235f9c399e2cd435dd502ceb84","modified":1621503000596},{"_id":"public/images/icons/zhaoo-logo.png","hash":"50f9f5de4207847bba6aecc4c21d21d79f0001fb","modified":1621503000596},{"_id":"public/images/theme/loading.gif","hash":"db91090dd60098086993953f88c37a332eea70d7","modified":1621503000596},{"_id":"public/images/theme/cloud.png","hash":"fdf44a91026ad999dca2f0a42213aabebd783c98","modified":1621503000596},{"_id":"public/images/theme/post-image.jpg","hash":"7fb1947508a411177829cedac8d5922671cac2b0","modified":1621503000596},{"_id":"public/js/color-mode.js","hash":"33cd307624e32035ea4544c9a6a4676ef9f70beb","modified":1621503000596},{"_id":"public/js/utils.js","hash":"359461693c5a1c8f9fb159c2dfb78051d0b351e1","modified":1621503000596},{"_id":"public/lib/fancybox/fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1621503000596},{"_id":"public/lib/highlight/a11y-dark.css","hash":"9f0c935216015dd88251a6c366bdd00abfe65982","modified":1621503000596},{"_id":"public/lib/lazyload/lazyload.js","hash":"338318e930487b2791a7bcf53ad4601630cc41e2","modified":1621503000596},{"_id":"public/lib/pjax/pjax.js","hash":"0ced78e5c97127948f5bfbfbb80c4fce5c0f671e","modified":1621503000596},{"_id":"public/lib/qrcode/qrcode.js","hash":"f424bd339870510d1160d1c5da5d698aedbb452e","modified":1621503000596},{"_id":"public/css/style.css","hash":"db9f8f4c182639a81aa9d63da3c9162066b0b61b","modified":1621503000596},{"_id":"public/images/theme/panda.jpg","hash":"8010e2d52d9be56683ad8c9c8c71b2166730d4ef","modified":1621503000596},{"_id":"public/js/script.js","hash":"6d73d31593faf80f5b778cf994f2dfea37820166","modified":1621503000596},{"_id":"public/lib/gitalk/gitalk.css","hash":"99f6725b386bdb0f52d15b0dd7877eaf1ad4c918","modified":1621503000596},{"_id":"public/images/theme/welcome-image.jpg","hash":"79e9c9e83a6d8a0bb627e645b770dd2628cd546e","modified":1621503000596},{"_id":"public/lib/highlight/highlight.js","hash":"a52ef27b8a21963326b05ef06f6ee104b8b94e7e","modified":1621503000596},{"_id":"public/lib/fancybox/fancybox.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1621503000596},{"_id":"public/lib/jquery/jquery.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1621503000596},{"_id":"public/lib/gitalk/gitalk.js","hash":"266500948447c95aeea95ef6760f192afc96fd5e","modified":1621503000596},{"_id":"public/lib/daovoice/daovoice.js","hash":"180375e6fc5a5a71810b5e83109c0ce1533bbc5a","modified":1621503000596},{"_id":"source/_posts/webmonitor.md","hash":"142dc4bf6e4d4239b163a6fbfcaaae49d730a155","modified":1623912934630},{"_id":"public/archives/2021/06/index.html","hash":"e1d17f9a83aeda2631361e692fa721f483468ea2","modified":1623913463573},{"_id":"public/tags/Node/index.html","hash":"bc40cc9d7d14ab7a95ce69f7fc3350513b3398c8","modified":1623913463573},{"_id":"public/2021/06/16/webmonitor/index.html","hash":"3dd36b9dafdc0753c6b1a1d6cb630621dc479583","modified":1623913463573}],"Category":[{"name":"博客","_id":"ckovq4z3t00034i4a2v2q72yo"}],"Data":[{"_id":"galleries","data":[{"name":"colorful","cover":"/images/theme/post-image.jpg","description":"君未看花时，花与君同寂；君来看花日，花色一时明。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"记事","cover":"/images/theme/post-image.jpg","description":"翻开随身携带的记事本，写着许多事都是关于你。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"深圳日记","cover":"/images/theme/post-image.jpg","description":"斑马斑马，你不要睡着啦，我只是个匆忙的旅人啊。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]}]}],"Page":[{"title":"关于","type":"about","layout":"about","toc":false,"copyright":false,"image":"https://tva1.sinaimg.cn/large/008i3skNgy1gqmuc4z63rj31hc0u0hdv.jpg","_content":"\n## Me\n\n**JasonLamv-t**\n啥都不懂的程序猿，毕业于松山湖帝国理工\n\n## Work\n\n**伊山万瑞科技  · 深圳**\n产品经理「兼职」 [2019.5-2021-2]「兼职」\n\n## Project\n\n[adnmb-premade](https://github.com/JasonLamv-t/adnmb-premade)\n一个匿名开黑系统\n\n","source":"about/index.md","raw":"---\ntitle: 关于\ntype: \"about\"\nlayout: \"about\"\ntoc: false\ncopyright: false\nimage: https://tva1.sinaimg.cn/large/008i3skNgy1gqmuc4z63rj31hc0u0hdv.jpg\n---\n\n## Me\n\n**JasonLamv-t**\n啥都不懂的程序猿，毕业于松山湖帝国理工\n\n## Work\n\n**伊山万瑞科技  · 深圳**\n产品经理「兼职」 [2019.5-2021-2]「兼职」\n\n## Project\n\n[adnmb-premade](https://github.com/JasonLamv-t/adnmb-premade)\n一个匿名开黑系统\n\n","date":"2021-05-18T12:14:28.633Z","updated":"2021-05-18T12:14:28.614Z","path":"about/index.html","comments":1,"_id":"ckovq4z3n00004i4a76765c0l","content":"<h2 id=\"Me\"><a href=\"#Me\" class=\"headerlink\" title=\"Me\"></a>Me</h2><p><strong>JasonLamv-t</strong><br>&#x5565;&#x90FD;&#x4E0D;&#x61C2;&#x7684;&#x7A0B;&#x5E8F;&#x733F;&#xFF0C;&#x6BD5;&#x4E1A;&#x4E8E;&#x677E;&#x5C71;&#x6E56;&#x5E1D;&#x56FD;&#x7406;&#x5DE5;</p>\n<h2 id=\"Work\"><a href=\"#Work\" class=\"headerlink\" title=\"Work\"></a>Work</h2><p><strong>&#x4F0A;&#x5C71;&#x4E07;&#x745E;&#x79D1;&#x6280;  &#xB7; &#x6DF1;&#x5733;</strong><br>&#x4EA7;&#x54C1;&#x7ECF;&#x7406;&#x300C;&#x517C;&#x804C;&#x300D; [2019.5-2021-2]&#x300C;&#x517C;&#x804C;&#x300D;</p>\n<h2 id=\"Project\"><a href=\"#Project\" class=\"headerlink\" title=\"Project\"></a>Project</h2><p><a href=\"https://github.com/JasonLamv-t/adnmb-premade\">adnmb-premade</a><br>&#x4E00;&#x4E2A;&#x533F;&#x540D;&#x5F00;&#x9ED1;&#x7CFB;&#x7EDF;</p>\n","site":{"data":{"galleries":[{"name":"colorful","cover":"/images/theme/post-image.jpg","description":"君未看花时，花与君同寂；君来看花日，花色一时明。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"记事","cover":"/images/theme/post-image.jpg","description":"翻开随身携带的记事本，写着许多事都是关于你。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"深圳日记","cover":"/images/theme/post-image.jpg","description":"斑马斑马，你不要睡着啦，我只是个匆忙的旅人啊。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]}]}},"excerpt":"","more":"<h2 id=\"Me\"><a href=\"#Me\" class=\"headerlink\" title=\"Me\"></a>Me</h2><p><strong>JasonLamv-t</strong><br>啥都不懂的程序猿，毕业于松山湖帝国理工</p>\n<h2 id=\"Work\"><a href=\"#Work\" class=\"headerlink\" title=\"Work\"></a>Work</h2><p><strong>伊山万瑞科技  · 深圳</strong><br>产品经理「兼职」 [2019.5-2021-2]「兼职」</p>\n<h2 id=\"Project\"><a href=\"#Project\" class=\"headerlink\" title=\"Project\"></a>Project</h2><p><a href=\"https://github.com/JasonLamv-t/adnmb-premade\">adnmb-premade</a><br>一个匿名开黑系统</p>\n"},{"title":"相册","layout":"galleries","_content":"","source":"galleries/index.md","raw":"---\ntitle: 相册\nlayout: 'galleries'\n---\n","date":"2021-05-18T08:13:58.881Z","updated":"2021-05-18T08:13:58.881Z","path":"galleries/index.html","comments":1,"_id":"ckovq4z3s00024i4a1afrbr0a","content":"","site":{"data":{"galleries":[{"name":"colorful","cover":"/images/theme/post-image.jpg","description":"君未看花时，花与君同寂；君来看花日，花色一时明。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"记事","cover":"/images/theme/post-image.jpg","description":"翻开随身携带的记事本，写着许多事都是关于你。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"深圳日记","cover":"/images/theme/post-image.jpg","description":"斑马斑马，你不要睡着啦，我只是个匆忙的旅人啊。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]}]}},"excerpt":"","more":""},{"title":"categories","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ntype: 'categories'\nlayout: 'categories'\n---\n","date":"2021-05-18T08:16:22.735Z","updated":"2021-05-18T08:16:22.735Z","path":"categories/index.html","comments":1,"_id":"ckovq4z3v00044i4abdmk6qwf","content":"","site":{"data":{"galleries":[{"name":"colorful","cover":"/images/theme/post-image.jpg","description":"君未看花时，花与君同寂；君来看花日，花色一时明。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"记事","cover":"/images/theme/post-image.jpg","description":"翻开随身携带的记事本，写着许多事都是关于你。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"深圳日记","cover":"/images/theme/post-image.jpg","description":"斑马斑马，你不要睡着啦，我只是个匆忙的旅人啊。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]}]}},"excerpt":"","more":""},{"title":"记事","layout":"gallery","_content":"","source":"galleries/记事/index.md","raw":"---\ntitle: 记事\nlayout: \"gallery\"\n---","date":"2021-05-18T08:07:35.665Z","updated":"2021-05-17T02:18:40.000Z","path":"galleries/记事/index.html","comments":1,"_id":"ckovq4z3w00054i4a0c1i2n9i","content":"","site":{"data":{"galleries":[{"name":"colorful","cover":"/images/theme/post-image.jpg","description":"君未看花时，花与君同寂；君来看花日，花色一时明。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"记事","cover":"/images/theme/post-image.jpg","description":"翻开随身携带的记事本，写着许多事都是关于你。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"深圳日记","cover":"/images/theme/post-image.jpg","description":"斑马斑马，你不要睡着啦，我只是个匆忙的旅人啊。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]}]}},"excerpt":"","more":""},{"title":"标签","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ntype: 'tags'\nlayout: 'tags'\n---\n","date":"2021-05-18T08:16:04.489Z","updated":"2021-05-18T08:16:04.489Z","path":"tags/index.html","comments":1,"_id":"ckovq4z3w00064i4a9szfd6fa","content":"","site":{"data":{"galleries":[{"name":"colorful","cover":"/images/theme/post-image.jpg","description":"君未看花时，花与君同寂；君来看花日，花色一时明。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"记事","cover":"/images/theme/post-image.jpg","description":"翻开随身携带的记事本，写着许多事都是关于你。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"深圳日记","cover":"/images/theme/post-image.jpg","description":"斑马斑马，你不要睡着啦，我只是个匆忙的旅人啊。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]}]}},"excerpt":"","more":""},{"title":"深圳日记","layout":"gallery","_content":"","source":"galleries/深圳日记/index.md","raw":"---\ntitle: 深圳日记\nlayout: \"gallery\"\n---","date":"2021-05-18T08:07:35.660Z","updated":"2021-05-17T02:18:40.000Z","path":"galleries/深圳日记/index.html","comments":1,"_id":"ckovq4z3x00074i4ae9oeg917","content":"","site":{"data":{"galleries":[{"name":"colorful","cover":"/images/theme/post-image.jpg","description":"君未看花时，花与君同寂；君来看花日，花色一时明。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"记事","cover":"/images/theme/post-image.jpg","description":"翻开随身携带的记事本，写着许多事都是关于你。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"深圳日记","cover":"/images/theme/post-image.jpg","description":"斑马斑马，你不要睡着啦，我只是个匆忙的旅人啊。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]}]}},"excerpt":"","more":""},{"title":"colorful","layout":"gallery","_content":"","source":"galleries/colorful/index.md","raw":"---\ntitle: colorful\nlayout: \"gallery\"\n---","date":"2021-05-18T08:07:35.366Z","updated":"2021-05-17T02:18:40.000Z","path":"galleries/colorful/index.html","comments":1,"_id":"ckovq4z3y00084i4a60xuamu6","content":"","site":{"data":{"galleries":[{"name":"colorful","cover":"/images/theme/post-image.jpg","description":"君未看花时，花与君同寂；君来看花日，花色一时明。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"记事","cover":"/images/theme/post-image.jpg","description":"翻开随身携带的记事本，写着许多事都是关于你。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"深圳日记","cover":"/images/theme/post-image.jpg","description":"斑马斑马，你不要睡着啦，我只是个匆忙的旅人啊。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]}]}},"excerpt":"","more":""}],"Post":[{"title":"WebMonitor-CLI Node Commander命令行工具实战","date":"2021-06-16T03:39:32.000Z","keywords":"node, commander, inquirer, chalk, Command line tool","_content":"\n# WebMonitor-CLI Node Commander命令行工具实战\n\n开始之前，先放上\n源码与使用说明：[JasonLamv-t/WebMonitor](https://github.com/JasonLamv-t/WebMonitor)\n\n参考文档：\n基础框架：[commander.js中文文档](https://github.com/tj/commander.js/blob/master/Readme_zh-CN.md)\n交互式命令行工具：[inquirer](https://www.npmjs.com/package/inquirer)\n控制台输出样式：[chalk](https://www.npmjs.com/package/chalk)\nnode Jquery实现：[cheerio中文文档](https://github.com/cheeriojs/cheerio/wiki/Chinese-README)\n\n## 功能设计\n\n- 本地运行\n- ~~远程运行~~\n- ~~每日自动运行~~\n- ~~任务管理~~\n- 微信推送消息\n- ~~邮件提醒~~\n- ~~短信提醒~~\n\n## 开发\n\n### 项目的初始化与目录结构\n\n项目使用了yarn作为包和依赖管理器，当然，你可以根据喜好执行`yarn init`或`npm init`来初始化项目\n以下是本项目的结构，你自己的项目当然可以不同，有条理即可:\n\n```\nWebMonitor\n├── README.md\n├── bin\t\t\t\t\t\t\t\t\n│   ├── app.js        // 程序入口文件\n│   ├── config.js     // 配置命令子文件\n│   └── run.js        // 运行命令子文件\n├── package.json\n├── plugins\n│   ├── notify.js     // 通知处理器\n│   ├── theme.js      // 主题设置\n│   └── validator.js  // 数据验证器和处理器\n├── test.html\n├── yarn.lock\t\t\t\n└── node_modules\n```\n\n### 安装项目所需依赖\n\n执行`yarn add commander inquirer chalk cheerio axios`，当然`npm`也行\n\n### 程序入口\n\n#### 定义程序的根命令和入口\n\n创建一个app.js文件或者index.js文件，在根目录或其他定义的目录均可，以下示例均以本项目为参考：[/bin/app.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/app.js)\n\n```javascript\n#! /usr/bin/env node\n// 指定脚本解析执行器，所有命令脚本文件都是必须的\n\nconst { Command } = require('commander')\nconst program = new Command()\n\nprogram\n  .version('1.1.0')\n  .command('run', 'run a monitor process immediately', { executableFile: 'run' }).alias('r')\n  .command('config', 'config',{ executableFile: 'config' }).alias('c')\n  // .command('子命令', '命令描述', { executableFile: '子命令文件路径' }).alias('命令别称')\n\nprogram.parse(process.argv)  // 无论子命令还是根命令都需要执行program.parse方法，参数详见commander文档\n```\n\n```\n$ node bin/app.js -V\n1.1.0\n```\n\n#### 连接到本地依赖\n\npackage.json中添加以下项\n\n```json\n...\n\"bin\": {\n    \"webmonitor\": \"./bin/app.js\",\n    \"wmcli\": \"./bin/app.js\"\n  },\n...\n```\n\n执行`yarn link`\n\n```\n$ yarn link\nyarn link v1.22.10\nsuccess Registered \"webmonitor-cli\".\ninfo You can now run `yarn link \"webmonitor-cli\"` in the projects where you want to use this package and it will be used instead.\n✨  Done in 0.05s.\n$ webmonitor -V\n1.1.0\n$ wmcli --version\n1.1.0\n```\n\n到这一步，就完成了一个根命令的入口定义并能在命令行中调用，这将方便我们后面的调试\n\n### 特定输出主题定义\n\n创建一个主题文件/plugins/theme.js，用于定义一些特定输出的主题，你可以根据自己喜好修改\n\n```javascript\nconst chalk = require('chalk')\nconst error = chalk.bgRedBright.white\nconst warning = chalk.keyword('orange')\nconst info = chalk.yellowBright\n\nconsole.log(error('error test'))\nconsole.log(warning('warning test'))\nconsole.log(info('info test'))\n\nmodule.exports = {\n  error, warning, info\n}\n```\n\n### 子命令\n\n#### config命令\n\n[/bin/config.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/config.js)\n\n```javascript\n#! /usr/bin/env node\n\nconst inquirer = require('inquirer')\nconst fs = require('fs')\nconst os = require('os')\nconst { Command } = require('commander')\nconst program = new Command()  // 同样适用new Command对象创建子命令实例\nconst { error, warning, info } = require('../plugins/theme')\n\nprogram\n// .option('-p --path <absolue path>', 'config file path')\n\nprogram.parse(process.argv)  // 无论子命令还是根命令都需要执行program.parse方法，参数详见commander文档\nconst options = program.opts()  // 通过执行program.opts方法获取全部参数对象\n\n// 定义提示列表，对应对象属性详见inquirer文档\nconst promptList = [{\n  type: 'input',  // 输入类型\n  message: '请输入Server酱的SCKEY:',  // 提示消息\n  name: 'server_sckey'  // 变量亩\n}]\n\n// 执行inquirer.prompt方法显示提示\n// 需要注意的是，一旦执行此方法会按顺序显示传入列表的所有提示并获取输入\n// 显然，这是一个异步操作，复杂的表单需要多次按照表单逻辑调用inquirer.prompt方法来实现\ninquirer.prompt(promptList).then(answers => {\n  const configDirPath = os.homedir() + '/.webmonitor/'  // 获取用户目录绝对路径拼接配置文件夹路径\n  let config = {}\n  // 判断配置文件路径是否存在，不存在则创建路径\n  if (fs.existsSync(configDirPath + 'config.json')) {\n    const rawdata = fs.readFileSync(configDirPath + 'config.json')\n    config = JSON.parse(rawdata)\n  } else if (!fs.existsSync(configDirPath)) fs.mkdirSync(configDirPath)\n\n  config.server_sckey = answers.server_sckey // 读入输入\n\n  // 保存到配置文件\n  fs.writeFileSync(configDirPath + 'config.json', JSON.stringify(config), { flag: 'w+' })\n  console.log(info(`Config file save as ${configDirPath}config.json`))\n})\n\n```\n\n#### run命令参数定义\n\n[/bin/run.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/run.js)\n\n```javascript\nprogram\n  .usage('-u <target url> [options]')  // 输出：命令 + usage内容\n  .requiredOption('-u --url <url>', 'monitoring target', validator.isUrl)\n  // 必须参数，第三个参数为验证和处理函数，返回验证处理后的值，详见参数处理\n  .option('-l, --log', 'log mode', false)\n  // 此处第三个参数为默认值，无输入变量，即第一个参数无 <any> 的，检测到该参数则对应值为true，否则为undefined，所以设置了默认值为false\n  .option('-i, --interval <delay>', 'the interval between initiating a web request in seconds', validator.isInt, 60)\n  // 此处第三个参数为验证函数，第四个参数为默认值\n  .option('-D, --debug', 'debug mode', false)\n  .option('-d, --daemon', 'monitor whether to continue after the change of the web page is detected', false)\n  .addOption(new Option('-M, --mode <operation mode>', 'currently local only').choices(['local']).default('local'))\n  // 自定义参数，使用new Option方法创建，choices要求输入值在枚举范围内，default设置默认值，其他方法commander.js文档并无说明，但是可以通过查看Option方法定义代码找到对应接口\n  .addOption(new Option('-m, --method <request method>', 'current get only').choices(['get']).default('get'))\n  .option('-r, --retry <retry time>', 'retry times limit', validator.isInt, 5)\n  .option('-w, --wechat', 'enable Wechat push notification')\n\nprogram.parse(process.argv)\n\nconst options = program.opts()\t// 解析获取参数对象\nif (options.debug) console.log('options: ', options)  // 如果是调试模式则打印全部参数\n```\n\n#### 实现逻辑\n\n获取网页内容，并进行比较\n由于网页源码可能发生动态改变，因此我们使用cheerio对网页内容进行解析，获取网页的显示进行比较，同时方便后续对自定义监测内容的升级。\n\n#### 获取网页内容\n\n[/bin/run.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/run.js)\n\n```javascript\nconst getRes = async () => {\n  return new Promise((resolve, reject) => {\n    axios[options.method](options.url)\n      .then(r => {\n        const $ = cheerio.load(r.data)\n        if (options.debug) console.log($.text())\n        resolve($.text())\n      }).catch(e => {\n        if (e.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.log(error('Error! Request error. StatusCode:', e.response.status))\n          if (options.debug || options.log) {\n            console.log('Response Data:', e.response.data)\n            console.log('Response Header:', e.response.headers)\n          }\n        } else if (e.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n          console.log(error('The request was made but no response was received'))\n          if (options.debug || options.log) console.log('Request:', e.request)\n          else console.log(warning('add \\'-l\\' flag for more info'))\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log('Error', e.message)\n        }\n        if (options.debug) console.log(e.config)\n        reject(e)\n      })\n  })\n}\n```\n\n#### 主函数\n\n```javascript\nconst main = async () => {\n  // 如果配置了微信推送，读取配置并构建通知方法\n  if (options.wechat) options.wechat = await notify.wechat()\n  if (!options.wechat) return -1 // 检查是否构建通知方法成功\n\n  let requestCount = 0, retryCount = 0\n  let origin = await getRes()  // 获取初始页面\n    .then(r => { return r })\n    .catch(e => {\n      console.log(e)\n      return false\n    })\n\n  console.log(origin)\n\n  if (!origin) return { code: -1, message: 'Failed to request a web page for the first time.' }\n  console.log('The request for the web page is successful. Start monitoring.')\n\t\n  // 构建定时循环\n  let pro = setInterval(async () => {\n    // 获取新的页面内容\n    let newWeb = await getRes().then(r => {\n      requestCount++\n      retryCount = 0\n      return r\n    }).catch(e => {\n      retryCount++\n      return false\n    })\n\n    // The web page has not changed and is in log mode\n    if (newWeb && newWeb == origin && options.log) console.log(`Request ${requestCount} times. The web page remains unchanged.`)\n    else if (newWeb && newWeb != origin) {\n      console.log(info('The web page has changed!'))\n      if (options.wechat) options.wechat()  // 调用微信通知\n      if (!options.daemon) {  // 非守护模式则退出\n        console.log('process exit')\n        clearInterval(pro)\n      } else origin = newWeb\n    }\n    else if (!newWeb && retryCount <= options.retry) console.log(warning(`Request fail, retry for ${retryCount} times`))\n    else if (!newWeb && retryCount > options.retry) {\n      console.log(error('The number of retries exceeds the limit! Process exit.'))\n      clearInterval(pro)\n    }\n  }, 1000 * options.interval)\n}\n\nmain()\n```\n\n### 其他\n\n#### 微信通知\n\n[/plugins/notify.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/plugins/notify.js)\n\n```javascript\nconst wechat = async () => {\n  const configDirPath = os.homedir() + '/.webmonitor/'\n  let config = {}\n  if (fs.existsSync(configDirPath + 'config.json')) {\n    const rawdata = fs.readFileSync(configDirPath + 'config.json')\n    config = JSON.parse(rawdata)\n  }\n\n  if (!config.server_sckey) {\n    console.log(error('Error: server酱 SCKEY no configured.'))\n    console.log(info('please run \\'wmcli config\\' to config SCKEY'))\n    console.log('process exit.')\n    return false\n  }\n\n  const promptList = [{\n    type: 'input',\n    message: '请输入通知消息标题:',\n    name: 'title'\n  }, {\n    type: 'input',\n    message: '请输入通知消息内容:',\n    name: 'content'\n  },]\n\n  return await inquirer.prompt(promptList).then(answers => {\n    return function () {\n      axios.get(`https://sc.ftqq.com/${config.server_sckey}.send`, {\n        params: {\n          text: answers.title,\n          desp: answers.content\n        }\n      })\n    }\n  })\n}\n```\n\n#### 参数处理验证器\n\n[/plugins/validator.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/plugins/validator.js)\n\n```javascript\nconst { InvalidOptionArgumentError } = require('commander')  // commander自带的异常\n\nfunction isUrl(url) {\n  const r = new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$', 'g')\n  if (!r.test(url)) throw new InvalidOptionArgumentError('Not a legitimate URL.')  // 抛出异常\n  return url\n}\n\nfunction isInt(value, dummyPrevious) {\n  // parseInt takes a string and a radix\n  const parsedValue = parseInt(value, 10)\n  if (isNaN(parsedValue)) throw new InvalidOptionArgumentError('Not a number.')\n  return parsedValue\n}\n```\n\n## 发布\n\n1. 到[npm官网](https://www.npmjs.com/)注册一个账户\n2. 执行`npm login`并输入注册信息进行登陆\n3. 修改`package.json`或重新执行`yarn init`或者`npm init`补全信息\n4. 执行`npm publish`\n\n","source":"_posts/webmonitor.md","raw":"---\ntitle: WebMonitor-CLI Node Commander命令行工具实战\ndate: 2021-06-16 11:39:32\ntags: [Node]\nkeywords: node, commander, inquirer, chalk, Command line tool \n---\n\n# WebMonitor-CLI Node Commander命令行工具实战\n\n开始之前，先放上\n源码与使用说明：[JasonLamv-t/WebMonitor](https://github.com/JasonLamv-t/WebMonitor)\n\n参考文档：\n基础框架：[commander.js中文文档](https://github.com/tj/commander.js/blob/master/Readme_zh-CN.md)\n交互式命令行工具：[inquirer](https://www.npmjs.com/package/inquirer)\n控制台输出样式：[chalk](https://www.npmjs.com/package/chalk)\nnode Jquery实现：[cheerio中文文档](https://github.com/cheeriojs/cheerio/wiki/Chinese-README)\n\n## 功能设计\n\n- 本地运行\n- ~~远程运行~~\n- ~~每日自动运行~~\n- ~~任务管理~~\n- 微信推送消息\n- ~~邮件提醒~~\n- ~~短信提醒~~\n\n## 开发\n\n### 项目的初始化与目录结构\n\n项目使用了yarn作为包和依赖管理器，当然，你可以根据喜好执行`yarn init`或`npm init`来初始化项目\n以下是本项目的结构，你自己的项目当然可以不同，有条理即可:\n\n```\nWebMonitor\n├── README.md\n├── bin\t\t\t\t\t\t\t\t\n│   ├── app.js        // 程序入口文件\n│   ├── config.js     // 配置命令子文件\n│   └── run.js        // 运行命令子文件\n├── package.json\n├── plugins\n│   ├── notify.js     // 通知处理器\n│   ├── theme.js      // 主题设置\n│   └── validator.js  // 数据验证器和处理器\n├── test.html\n├── yarn.lock\t\t\t\n└── node_modules\n```\n\n### 安装项目所需依赖\n\n执行`yarn add commander inquirer chalk cheerio axios`，当然`npm`也行\n\n### 程序入口\n\n#### 定义程序的根命令和入口\n\n创建一个app.js文件或者index.js文件，在根目录或其他定义的目录均可，以下示例均以本项目为参考：[/bin/app.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/app.js)\n\n```javascript\n#! /usr/bin/env node\n// 指定脚本解析执行器，所有命令脚本文件都是必须的\n\nconst { Command } = require('commander')\nconst program = new Command()\n\nprogram\n  .version('1.1.0')\n  .command('run', 'run a monitor process immediately', { executableFile: 'run' }).alias('r')\n  .command('config', 'config',{ executableFile: 'config' }).alias('c')\n  // .command('子命令', '命令描述', { executableFile: '子命令文件路径' }).alias('命令别称')\n\nprogram.parse(process.argv)  // 无论子命令还是根命令都需要执行program.parse方法，参数详见commander文档\n```\n\n```\n$ node bin/app.js -V\n1.1.0\n```\n\n#### 连接到本地依赖\n\npackage.json中添加以下项\n\n```json\n...\n\"bin\": {\n    \"webmonitor\": \"./bin/app.js\",\n    \"wmcli\": \"./bin/app.js\"\n  },\n...\n```\n\n执行`yarn link`\n\n```\n$ yarn link\nyarn link v1.22.10\nsuccess Registered \"webmonitor-cli\".\ninfo You can now run `yarn link \"webmonitor-cli\"` in the projects where you want to use this package and it will be used instead.\n✨  Done in 0.05s.\n$ webmonitor -V\n1.1.0\n$ wmcli --version\n1.1.0\n```\n\n到这一步，就完成了一个根命令的入口定义并能在命令行中调用，这将方便我们后面的调试\n\n### 特定输出主题定义\n\n创建一个主题文件/plugins/theme.js，用于定义一些特定输出的主题，你可以根据自己喜好修改\n\n```javascript\nconst chalk = require('chalk')\nconst error = chalk.bgRedBright.white\nconst warning = chalk.keyword('orange')\nconst info = chalk.yellowBright\n\nconsole.log(error('error test'))\nconsole.log(warning('warning test'))\nconsole.log(info('info test'))\n\nmodule.exports = {\n  error, warning, info\n}\n```\n\n### 子命令\n\n#### config命令\n\n[/bin/config.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/config.js)\n\n```javascript\n#! /usr/bin/env node\n\nconst inquirer = require('inquirer')\nconst fs = require('fs')\nconst os = require('os')\nconst { Command } = require('commander')\nconst program = new Command()  // 同样适用new Command对象创建子命令实例\nconst { error, warning, info } = require('../plugins/theme')\n\nprogram\n// .option('-p --path <absolue path>', 'config file path')\n\nprogram.parse(process.argv)  // 无论子命令还是根命令都需要执行program.parse方法，参数详见commander文档\nconst options = program.opts()  // 通过执行program.opts方法获取全部参数对象\n\n// 定义提示列表，对应对象属性详见inquirer文档\nconst promptList = [{\n  type: 'input',  // 输入类型\n  message: '请输入Server酱的SCKEY:',  // 提示消息\n  name: 'server_sckey'  // 变量亩\n}]\n\n// 执行inquirer.prompt方法显示提示\n// 需要注意的是，一旦执行此方法会按顺序显示传入列表的所有提示并获取输入\n// 显然，这是一个异步操作，复杂的表单需要多次按照表单逻辑调用inquirer.prompt方法来实现\ninquirer.prompt(promptList).then(answers => {\n  const configDirPath = os.homedir() + '/.webmonitor/'  // 获取用户目录绝对路径拼接配置文件夹路径\n  let config = {}\n  // 判断配置文件路径是否存在，不存在则创建路径\n  if (fs.existsSync(configDirPath + 'config.json')) {\n    const rawdata = fs.readFileSync(configDirPath + 'config.json')\n    config = JSON.parse(rawdata)\n  } else if (!fs.existsSync(configDirPath)) fs.mkdirSync(configDirPath)\n\n  config.server_sckey = answers.server_sckey // 读入输入\n\n  // 保存到配置文件\n  fs.writeFileSync(configDirPath + 'config.json', JSON.stringify(config), { flag: 'w+' })\n  console.log(info(`Config file save as ${configDirPath}config.json`))\n})\n\n```\n\n#### run命令参数定义\n\n[/bin/run.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/run.js)\n\n```javascript\nprogram\n  .usage('-u <target url> [options]')  // 输出：命令 + usage内容\n  .requiredOption('-u --url <url>', 'monitoring target', validator.isUrl)\n  // 必须参数，第三个参数为验证和处理函数，返回验证处理后的值，详见参数处理\n  .option('-l, --log', 'log mode', false)\n  // 此处第三个参数为默认值，无输入变量，即第一个参数无 <any> 的，检测到该参数则对应值为true，否则为undefined，所以设置了默认值为false\n  .option('-i, --interval <delay>', 'the interval between initiating a web request in seconds', validator.isInt, 60)\n  // 此处第三个参数为验证函数，第四个参数为默认值\n  .option('-D, --debug', 'debug mode', false)\n  .option('-d, --daemon', 'monitor whether to continue after the change of the web page is detected', false)\n  .addOption(new Option('-M, --mode <operation mode>', 'currently local only').choices(['local']).default('local'))\n  // 自定义参数，使用new Option方法创建，choices要求输入值在枚举范围内，default设置默认值，其他方法commander.js文档并无说明，但是可以通过查看Option方法定义代码找到对应接口\n  .addOption(new Option('-m, --method <request method>', 'current get only').choices(['get']).default('get'))\n  .option('-r, --retry <retry time>', 'retry times limit', validator.isInt, 5)\n  .option('-w, --wechat', 'enable Wechat push notification')\n\nprogram.parse(process.argv)\n\nconst options = program.opts()\t// 解析获取参数对象\nif (options.debug) console.log('options: ', options)  // 如果是调试模式则打印全部参数\n```\n\n#### 实现逻辑\n\n获取网页内容，并进行比较\n由于网页源码可能发生动态改变，因此我们使用cheerio对网页内容进行解析，获取网页的显示进行比较，同时方便后续对自定义监测内容的升级。\n\n#### 获取网页内容\n\n[/bin/run.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/run.js)\n\n```javascript\nconst getRes = async () => {\n  return new Promise((resolve, reject) => {\n    axios[options.method](options.url)\n      .then(r => {\n        const $ = cheerio.load(r.data)\n        if (options.debug) console.log($.text())\n        resolve($.text())\n      }).catch(e => {\n        if (e.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.log(error('Error! Request error. StatusCode:', e.response.status))\n          if (options.debug || options.log) {\n            console.log('Response Data:', e.response.data)\n            console.log('Response Header:', e.response.headers)\n          }\n        } else if (e.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n          console.log(error('The request was made but no response was received'))\n          if (options.debug || options.log) console.log('Request:', e.request)\n          else console.log(warning('add \\'-l\\' flag for more info'))\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log('Error', e.message)\n        }\n        if (options.debug) console.log(e.config)\n        reject(e)\n      })\n  })\n}\n```\n\n#### 主函数\n\n```javascript\nconst main = async () => {\n  // 如果配置了微信推送，读取配置并构建通知方法\n  if (options.wechat) options.wechat = await notify.wechat()\n  if (!options.wechat) return -1 // 检查是否构建通知方法成功\n\n  let requestCount = 0, retryCount = 0\n  let origin = await getRes()  // 获取初始页面\n    .then(r => { return r })\n    .catch(e => {\n      console.log(e)\n      return false\n    })\n\n  console.log(origin)\n\n  if (!origin) return { code: -1, message: 'Failed to request a web page for the first time.' }\n  console.log('The request for the web page is successful. Start monitoring.')\n\t\n  // 构建定时循环\n  let pro = setInterval(async () => {\n    // 获取新的页面内容\n    let newWeb = await getRes().then(r => {\n      requestCount++\n      retryCount = 0\n      return r\n    }).catch(e => {\n      retryCount++\n      return false\n    })\n\n    // The web page has not changed and is in log mode\n    if (newWeb && newWeb == origin && options.log) console.log(`Request ${requestCount} times. The web page remains unchanged.`)\n    else if (newWeb && newWeb != origin) {\n      console.log(info('The web page has changed!'))\n      if (options.wechat) options.wechat()  // 调用微信通知\n      if (!options.daemon) {  // 非守护模式则退出\n        console.log('process exit')\n        clearInterval(pro)\n      } else origin = newWeb\n    }\n    else if (!newWeb && retryCount <= options.retry) console.log(warning(`Request fail, retry for ${retryCount} times`))\n    else if (!newWeb && retryCount > options.retry) {\n      console.log(error('The number of retries exceeds the limit! Process exit.'))\n      clearInterval(pro)\n    }\n  }, 1000 * options.interval)\n}\n\nmain()\n```\n\n### 其他\n\n#### 微信通知\n\n[/plugins/notify.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/plugins/notify.js)\n\n```javascript\nconst wechat = async () => {\n  const configDirPath = os.homedir() + '/.webmonitor/'\n  let config = {}\n  if (fs.existsSync(configDirPath + 'config.json')) {\n    const rawdata = fs.readFileSync(configDirPath + 'config.json')\n    config = JSON.parse(rawdata)\n  }\n\n  if (!config.server_sckey) {\n    console.log(error('Error: server酱 SCKEY no configured.'))\n    console.log(info('please run \\'wmcli config\\' to config SCKEY'))\n    console.log('process exit.')\n    return false\n  }\n\n  const promptList = [{\n    type: 'input',\n    message: '请输入通知消息标题:',\n    name: 'title'\n  }, {\n    type: 'input',\n    message: '请输入通知消息内容:',\n    name: 'content'\n  },]\n\n  return await inquirer.prompt(promptList).then(answers => {\n    return function () {\n      axios.get(`https://sc.ftqq.com/${config.server_sckey}.send`, {\n        params: {\n          text: answers.title,\n          desp: answers.content\n        }\n      })\n    }\n  })\n}\n```\n\n#### 参数处理验证器\n\n[/plugins/validator.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/plugins/validator.js)\n\n```javascript\nconst { InvalidOptionArgumentError } = require('commander')  // commander自带的异常\n\nfunction isUrl(url) {\n  const r = new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$', 'g')\n  if (!r.test(url)) throw new InvalidOptionArgumentError('Not a legitimate URL.')  // 抛出异常\n  return url\n}\n\nfunction isInt(value, dummyPrevious) {\n  // parseInt takes a string and a radix\n  const parsedValue = parseInt(value, 10)\n  if (isNaN(parsedValue)) throw new InvalidOptionArgumentError('Not a number.')\n  return parsedValue\n}\n```\n\n## 发布\n\n1. 到[npm官网](https://www.npmjs.com/)注册一个账户\n2. 执行`npm login`并输入注册信息进行登陆\n3. 修改`package.json`或重新执行`yarn init`或者`npm init`补全信息\n4. 执行`npm publish`\n\n","slug":"webmonitor","published":1,"updated":"2021-06-17T06:55:34.630Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckq0jxt0w00005s4a24jd6545","content":"<h1 id=\"WebMonitor-CLI-Node-Commander&#x547D;&#x4EE4;&#x884C;&#x5DE5;&#x5177;&#x5B9E;&#x6218;\"><a href=\"#WebMonitor-CLI-Node-Commander&#x547D;&#x4EE4;&#x884C;&#x5DE5;&#x5177;&#x5B9E;&#x6218;\" class=\"headerlink\" title=\"WebMonitor-CLI Node Commander&#x547D;&#x4EE4;&#x884C;&#x5DE5;&#x5177;&#x5B9E;&#x6218;\"></a>WebMonitor-CLI Node Commander&#x547D;&#x4EE4;&#x884C;&#x5DE5;&#x5177;&#x5B9E;&#x6218;</h1><p>&#x5F00;&#x59CB;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x653E;&#x4E0A;<br>&#x6E90;&#x7801;&#x4E0E;&#x4F7F;&#x7528;&#x8BF4;&#x660E;&#xFF1A;<a href=\"https://github.com/JasonLamv-t/WebMonitor\">JasonLamv-t/WebMonitor</a></p>\n<p>&#x53C2;&#x8003;&#x6587;&#x6863;&#xFF1A;<br>&#x57FA;&#x7840;&#x6846;&#x67B6;&#xFF1A;<a href=\"https://github.com/tj/commander.js/blob/master/Readme_zh-CN.md\">commander.js&#x4E2D;&#x6587;&#x6587;&#x6863;</a><br>&#x4EA4;&#x4E92;&#x5F0F;&#x547D;&#x4EE4;&#x884C;&#x5DE5;&#x5177;&#xFF1A;<a href=\"https://www.npmjs.com/package/inquirer\">inquirer</a><br>&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#x6837;&#x5F0F;&#xFF1A;<a href=\"https://www.npmjs.com/package/chalk\">chalk</a><br>node Jquery&#x5B9E;&#x73B0;&#xFF1A;<a href=\"https://github.com/cheeriojs/cheerio/wiki/Chinese-README\">cheerio&#x4E2D;&#x6587;&#x6587;&#x6863;</a></p>\n<h2 id=\"&#x529F;&#x80FD;&#x8BBE;&#x8BA1;\"><a href=\"#&#x529F;&#x80FD;&#x8BBE;&#x8BA1;\" class=\"headerlink\" title=\"&#x529F;&#x80FD;&#x8BBE;&#x8BA1;\"></a>&#x529F;&#x80FD;&#x8BBE;&#x8BA1;</h2><ul>\n<li>&#x672C;&#x5730;&#x8FD0;&#x884C;</li>\n<li><del>&#x8FDC;&#x7A0B;&#x8FD0;&#x884C;</del></li>\n<li><del>&#x6BCF;&#x65E5;&#x81EA;&#x52A8;&#x8FD0;&#x884C;</del></li>\n<li><del>&#x4EFB;&#x52A1;&#x7BA1;&#x7406;</del></li>\n<li>&#x5FAE;&#x4FE1;&#x63A8;&#x9001;&#x6D88;&#x606F;</li>\n<li><del>&#x90AE;&#x4EF6;&#x63D0;&#x9192;</del></li>\n<li><del>&#x77ED;&#x4FE1;&#x63D0;&#x9192;</del></li>\n</ul>\n<h2 id=\"&#x5F00;&#x53D1;\"><a href=\"#&#x5F00;&#x53D1;\" class=\"headerlink\" title=\"&#x5F00;&#x53D1;\"></a>&#x5F00;&#x53D1;</h2><h3 id=\"&#x9879;&#x76EE;&#x7684;&#x521D;&#x59CB;&#x5316;&#x4E0E;&#x76EE;&#x5F55;&#x7ED3;&#x6784;\"><a href=\"#&#x9879;&#x76EE;&#x7684;&#x521D;&#x59CB;&#x5316;&#x4E0E;&#x76EE;&#x5F55;&#x7ED3;&#x6784;\" class=\"headerlink\" title=\"&#x9879;&#x76EE;&#x7684;&#x521D;&#x59CB;&#x5316;&#x4E0E;&#x76EE;&#x5F55;&#x7ED3;&#x6784;\"></a>&#x9879;&#x76EE;&#x7684;&#x521D;&#x59CB;&#x5316;&#x4E0E;&#x76EE;&#x5F55;&#x7ED3;&#x6784;</h3><p>&#x9879;&#x76EE;&#x4F7F;&#x7528;&#x4E86;yarn&#x4F5C;&#x4E3A;&#x5305;&#x548C;&#x4F9D;&#x8D56;&#x7BA1;&#x7406;&#x5668;&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x559C;&#x597D;&#x6267;&#x884C;<code>yarn init</code>&#x6216;<code>npm init</code>&#x6765;&#x521D;&#x59CB;&#x5316;&#x9879;&#x76EE;<br>&#x4EE5;&#x4E0B;&#x662F;&#x672C;&#x9879;&#x76EE;&#x7684;&#x7ED3;&#x6784;&#xFF0C;&#x4F60;&#x81EA;&#x5DF1;&#x7684;&#x9879;&#x76EE;&#x5F53;&#x7136;&#x53EF;&#x4EE5;&#x4E0D;&#x540C;&#xFF0C;&#x6709;&#x6761;&#x7406;&#x5373;&#x53EF;:</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">WebMonitor<br>&#x251C;&#x2500;&#x2500; README<span class=\"hljs-selector-class\">.md</span><br>&#x251C;&#x2500;&#x2500; bin\t\t\t\t\t\t\t\t<br>&#x2502;   &#x251C;&#x2500;&#x2500; app<span class=\"hljs-selector-class\">.js</span>        <span class=\"hljs-comment\">// &#x7A0B;&#x5E8F;&#x5165;&#x53E3;&#x6587;&#x4EF6;</span><br>&#x2502;   &#x251C;&#x2500;&#x2500; config<span class=\"hljs-selector-class\">.js</span>     <span class=\"hljs-comment\">// &#x914D;&#x7F6E;&#x547D;&#x4EE4;&#x5B50;&#x6587;&#x4EF6;</span><br>&#x2502;   &#x2514;&#x2500;&#x2500; run<span class=\"hljs-selector-class\">.js</span>        <span class=\"hljs-comment\">// &#x8FD0;&#x884C;&#x547D;&#x4EE4;&#x5B50;&#x6587;&#x4EF6;</span><br>&#x251C;&#x2500;&#x2500; package<span class=\"hljs-selector-class\">.json</span><br>&#x251C;&#x2500;&#x2500; plugins<br>&#x2502;   &#x251C;&#x2500;&#x2500; notify<span class=\"hljs-selector-class\">.js</span>     <span class=\"hljs-comment\">// &#x901A;&#x77E5;&#x5904;&#x7406;&#x5668;</span><br>&#x2502;   &#x251C;&#x2500;&#x2500; theme<span class=\"hljs-selector-class\">.js</span>      <span class=\"hljs-comment\">// &#x4E3B;&#x9898;&#x8BBE;&#x7F6E;</span><br>&#x2502;   &#x2514;&#x2500;&#x2500; validator<span class=\"hljs-selector-class\">.js</span>  <span class=\"hljs-comment\">// &#x6570;&#x636E;&#x9A8C;&#x8BC1;&#x5668;&#x548C;&#x5904;&#x7406;&#x5668;</span><br>&#x251C;&#x2500;&#x2500; test<span class=\"hljs-selector-class\">.html</span><br>&#x251C;&#x2500;&#x2500; yarn<span class=\"hljs-selector-class\">.lock</span>\t\t\t<br>&#x2514;&#x2500;&#x2500; node_modules<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"&#x5B89;&#x88C5;&#x9879;&#x76EE;&#x6240;&#x9700;&#x4F9D;&#x8D56;\"><a href=\"#&#x5B89;&#x88C5;&#x9879;&#x76EE;&#x6240;&#x9700;&#x4F9D;&#x8D56;\" class=\"headerlink\" title=\"&#x5B89;&#x88C5;&#x9879;&#x76EE;&#x6240;&#x9700;&#x4F9D;&#x8D56;\"></a>&#x5B89;&#x88C5;&#x9879;&#x76EE;&#x6240;&#x9700;&#x4F9D;&#x8D56;</h3><p>&#x6267;&#x884C;<code>yarn add commander inquirer chalk cheerio axios</code>&#xFF0C;&#x5F53;&#x7136;<code>npm</code>&#x4E5F;&#x884C;</p>\n<h3 id=\"&#x7A0B;&#x5E8F;&#x5165;&#x53E3;\"><a href=\"#&#x7A0B;&#x5E8F;&#x5165;&#x53E3;\" class=\"headerlink\" title=\"&#x7A0B;&#x5E8F;&#x5165;&#x53E3;\"></a>&#x7A0B;&#x5E8F;&#x5165;&#x53E3;</h3><h4 id=\"&#x5B9A;&#x4E49;&#x7A0B;&#x5E8F;&#x7684;&#x6839;&#x547D;&#x4EE4;&#x548C;&#x5165;&#x53E3;\"><a href=\"#&#x5B9A;&#x4E49;&#x7A0B;&#x5E8F;&#x7684;&#x6839;&#x547D;&#x4EE4;&#x548C;&#x5165;&#x53E3;\" class=\"headerlink\" title=\"&#x5B9A;&#x4E49;&#x7A0B;&#x5E8F;&#x7684;&#x6839;&#x547D;&#x4EE4;&#x548C;&#x5165;&#x53E3;\"></a>&#x5B9A;&#x4E49;&#x7A0B;&#x5E8F;&#x7684;&#x6839;&#x547D;&#x4EE4;&#x548C;&#x5165;&#x53E3;</h4><p>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;app.js&#x6587;&#x4EF6;&#x6216;&#x8005;index.js&#x6587;&#x4EF6;&#xFF0C;&#x5728;&#x6839;&#x76EE;&#x5F55;&#x6216;&#x5176;&#x4ED6;&#x5B9A;&#x4E49;&#x7684;&#x76EE;&#x5F55;&#x5747;&#x53EF;&#xFF0C;&#x4EE5;&#x4E0B;&#x793A;&#x4F8B;&#x5747;&#x4EE5;&#x672C;&#x9879;&#x76EE;&#x4E3A;&#x53C2;&#x8003;&#xFF1A;<a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/app.js\">/bin/app.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-meta\">#! /usr/bin/env node</span><br><span class=\"hljs-comment\">// &#x6307;&#x5B9A;&#x811A;&#x672C;&#x89E3;&#x6790;&#x6267;&#x884C;&#x5668;&#xFF0C;&#x6240;&#x6709;&#x547D;&#x4EE4;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x90FD;&#x662F;&#x5FC5;&#x987B;&#x7684;</span><br><br><span class=\"hljs-keyword\">const</span> { Command } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;commander&apos;</span>)<br><span class=\"hljs-keyword\">const</span> program = <span class=\"hljs-keyword\">new</span> Command()<br><br>program<br>  .version(<span class=\"hljs-string\">&apos;1.1.0&apos;</span>)<br>  .command(<span class=\"hljs-string\">&apos;run&apos;</span>, <span class=\"hljs-string\">&apos;run a monitor process immediately&apos;</span>, { <span class=\"hljs-attr\">executableFile</span>: <span class=\"hljs-string\">&apos;run&apos;</span> }).alias(<span class=\"hljs-string\">&apos;r&apos;</span>)<br>  .command(<span class=\"hljs-string\">&apos;config&apos;</span>, <span class=\"hljs-string\">&apos;config&apos;</span>,{ <span class=\"hljs-attr\">executableFile</span>: <span class=\"hljs-string\">&apos;config&apos;</span> }).alias(<span class=\"hljs-string\">&apos;c&apos;</span>)<br>  <span class=\"hljs-comment\">// .command(&apos;&#x5B50;&#x547D;&#x4EE4;&apos;, &apos;&#x547D;&#x4EE4;&#x63CF;&#x8FF0;&apos;, { executableFile: &apos;&#x5B50;&#x547D;&#x4EE4;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&apos; }).alias(&apos;&#x547D;&#x4EE4;&#x522B;&#x79F0;&apos;)</span><br><br>program.parse(process.argv)  <span class=\"hljs-comment\">// &#x65E0;&#x8BBA;&#x5B50;&#x547D;&#x4EE4;&#x8FD8;&#x662F;&#x6839;&#x547D;&#x4EE4;&#x90FD;&#x9700;&#x8981;&#x6267;&#x884C;program.parse&#x65B9;&#x6CD5;&#xFF0C;&#x53C2;&#x6570;&#x8BE6;&#x89C1;commander&#x6587;&#x6863;</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">$ <span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">bin</span>/app.js -V<br><span class=\"hljs-number\">1.1</span>.<span class=\"hljs-number\">0</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"&#x8FDE;&#x63A5;&#x5230;&#x672C;&#x5730;&#x4F9D;&#x8D56;\"><a href=\"#&#x8FDE;&#x63A5;&#x5230;&#x672C;&#x5730;&#x4F9D;&#x8D56;\" class=\"headerlink\" title=\"&#x8FDE;&#x63A5;&#x5230;&#x672C;&#x5730;&#x4F9D;&#x8D56;\"></a>&#x8FDE;&#x63A5;&#x5230;&#x672C;&#x5730;&#x4F9D;&#x8D56;</h4><p>package.json&#x4E2D;&#x6DFB;&#x52A0;&#x4EE5;&#x4E0B;&#x9879;</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">...<br><span class=\"hljs-string\">&quot;bin&quot;</span>: {<br>    <span class=\"hljs-attr\">&quot;webmonitor&quot;</span>: <span class=\"hljs-string\">&quot;./bin/app.js&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;wmcli&quot;</span>: <span class=\"hljs-string\">&quot;./bin/app.js&quot;</span><br>  },<br>...<br></code></pre></td></tr></table></figure>\n\n<p>&#x6267;&#x884C;<code>yarn link</code></p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs subunit\">$ yarn link<br>yarn link v1.22.10<br><span class=\"hljs-keyword\">success </span>Registered &quot;webmonitor-cli&quot;.<br>info You can now run `yarn link &quot;webmonitor-cli&quot;` in the projects where you want to use this package and it will be used instead.<br>&#x2728;  Done in 0.05s.<br>$ webmonitor -V<br>1.1.0<br>$ wmcli --version<br>1.1.0<br></code></pre></td></tr></table></figure>\n\n<p>&#x5230;&#x8FD9;&#x4E00;&#x6B65;&#xFF0C;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x6839;&#x547D;&#x4EE4;&#x7684;&#x5165;&#x53E3;&#x5B9A;&#x4E49;&#x5E76;&#x80FD;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x8C03;&#x7528;&#xFF0C;&#x8FD9;&#x5C06;&#x65B9;&#x4FBF;&#x6211;&#x4EEC;&#x540E;&#x9762;&#x7684;&#x8C03;&#x8BD5;</p>\n<h3 id=\"&#x7279;&#x5B9A;&#x8F93;&#x51FA;&#x4E3B;&#x9898;&#x5B9A;&#x4E49;\"><a href=\"#&#x7279;&#x5B9A;&#x8F93;&#x51FA;&#x4E3B;&#x9898;&#x5B9A;&#x4E49;\" class=\"headerlink\" title=\"&#x7279;&#x5B9A;&#x8F93;&#x51FA;&#x4E3B;&#x9898;&#x5B9A;&#x4E49;\"></a>&#x7279;&#x5B9A;&#x8F93;&#x51FA;&#x4E3B;&#x9898;&#x5B9A;&#x4E49;</h3><p>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4E3B;&#x9898;&#x6587;&#x4EF6;/plugins/theme.js&#xFF0C;&#x7528;&#x4E8E;&#x5B9A;&#x4E49;&#x4E00;&#x4E9B;&#x7279;&#x5B9A;&#x8F93;&#x51FA;&#x7684;&#x4E3B;&#x9898;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x559C;&#x597D;&#x4FEE;&#x6539;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> chalk = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;chalk&apos;</span>)<br><span class=\"hljs-keyword\">const</span> error = chalk.bgRedBright.white<br><span class=\"hljs-keyword\">const</span> warning = chalk.keyword(<span class=\"hljs-string\">&apos;orange&apos;</span>)<br><span class=\"hljs-keyword\">const</span> info = chalk.yellowBright<br><br><span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&apos;error test&apos;</span>))<br><span class=\"hljs-built_in\">console</span>.log(warning(<span class=\"hljs-string\">&apos;warning test&apos;</span>))<br><span class=\"hljs-built_in\">console</span>.log(info(<span class=\"hljs-string\">&apos;info test&apos;</span>))<br><br><span class=\"hljs-built_in\">module</span>.exports = {<br>  error, warning, info<br>}<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"&#x5B50;&#x547D;&#x4EE4;\"><a href=\"#&#x5B50;&#x547D;&#x4EE4;\" class=\"headerlink\" title=\"&#x5B50;&#x547D;&#x4EE4;\"></a>&#x5B50;&#x547D;&#x4EE4;</h3><h4 id=\"config&#x547D;&#x4EE4;\"><a href=\"#config&#x547D;&#x4EE4;\" class=\"headerlink\" title=\"config&#x547D;&#x4EE4;\"></a>config&#x547D;&#x4EE4;</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/config.js\">/bin/config.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-meta\">#! /usr/bin/env node</span><br><br><span class=\"hljs-keyword\">const</span> inquirer = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;inquirer&apos;</span>)<br><span class=\"hljs-keyword\">const</span> fs = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;fs&apos;</span>)<br><span class=\"hljs-keyword\">const</span> os = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;os&apos;</span>)<br><span class=\"hljs-keyword\">const</span> { Command } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;commander&apos;</span>)<br><span class=\"hljs-keyword\">const</span> program = <span class=\"hljs-keyword\">new</span> Command()  <span class=\"hljs-comment\">// &#x540C;&#x6837;&#x9002;&#x7528;new Command&#x5BF9;&#x8C61;&#x521B;&#x5EFA;&#x5B50;&#x547D;&#x4EE4;&#x5B9E;&#x4F8B;</span><br><span class=\"hljs-keyword\">const</span> { error, warning, info } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;../plugins/theme&apos;</span>)<br><br>program<br><span class=\"hljs-comment\">// .option(&apos;-p --path &lt;absolue path&gt;&apos;, &apos;config file path&apos;)</span><br><br>program.parse(process.argv)  <span class=\"hljs-comment\">// &#x65E0;&#x8BBA;&#x5B50;&#x547D;&#x4EE4;&#x8FD8;&#x662F;&#x6839;&#x547D;&#x4EE4;&#x90FD;&#x9700;&#x8981;&#x6267;&#x884C;program.parse&#x65B9;&#x6CD5;&#xFF0C;&#x53C2;&#x6570;&#x8BE6;&#x89C1;commander&#x6587;&#x6863;</span><br><span class=\"hljs-keyword\">const</span> options = program.opts()  <span class=\"hljs-comment\">// &#x901A;&#x8FC7;&#x6267;&#x884C;program.opts&#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x5168;&#x90E8;&#x53C2;&#x6570;&#x5BF9;&#x8C61;</span><br><br><span class=\"hljs-comment\">// &#x5B9A;&#x4E49;&#x63D0;&#x793A;&#x5217;&#x8868;&#xFF0C;&#x5BF9;&#x5E94;&#x5BF9;&#x8C61;&#x5C5E;&#x6027;&#x8BE6;&#x89C1;inquirer&#x6587;&#x6863;</span><br><span class=\"hljs-keyword\">const</span> promptList = [{<br>  <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&apos;input&apos;</span>,  <span class=\"hljs-comment\">// &#x8F93;&#x5165;&#x7C7B;&#x578B;</span><br>  <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&apos;&#x8BF7;&#x8F93;&#x5165;Server&#x9171;&#x7684;SCKEY:&apos;</span>,  <span class=\"hljs-comment\">// &#x63D0;&#x793A;&#x6D88;&#x606F;</span><br>  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&apos;server_sckey&apos;</span>  <span class=\"hljs-comment\">// &#x53D8;&#x91CF;&#x4EA9;</span><br>}]<br><br><span class=\"hljs-comment\">// &#x6267;&#x884C;inquirer.prompt&#x65B9;&#x6CD5;&#x663E;&#x793A;&#x63D0;&#x793A;</span><br><span class=\"hljs-comment\">// &#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x4E00;&#x65E6;&#x6267;&#x884C;&#x6B64;&#x65B9;&#x6CD5;&#x4F1A;&#x6309;&#x987A;&#x5E8F;&#x663E;&#x793A;&#x4F20;&#x5165;&#x5217;&#x8868;&#x7684;&#x6240;&#x6709;&#x63D0;&#x793A;&#x5E76;&#x83B7;&#x53D6;&#x8F93;&#x5165;</span><br><span class=\"hljs-comment\">// &#x663E;&#x7136;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#xFF0C;&#x590D;&#x6742;&#x7684;&#x8868;&#x5355;&#x9700;&#x8981;&#x591A;&#x6B21;&#x6309;&#x7167;&#x8868;&#x5355;&#x903B;&#x8F91;&#x8C03;&#x7528;inquirer.prompt&#x65B9;&#x6CD5;&#x6765;&#x5B9E;&#x73B0;</span><br>inquirer.prompt(promptList).then(<span class=\"hljs-function\"><span class=\"hljs-params\">answers</span> =&gt;</span> {<br>  <span class=\"hljs-keyword\">const</span> configDirPath = os.homedir() + <span class=\"hljs-string\">&apos;/.webmonitor/&apos;</span>  <span class=\"hljs-comment\">// &#x83B7;&#x53D6;&#x7528;&#x6237;&#x76EE;&#x5F55;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x62FC;&#x63A5;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5939;&#x8DEF;&#x5F84;</span><br>  <span class=\"hljs-keyword\">let</span> config = {}<br>  <span class=\"hljs-comment\">// &#x5224;&#x65AD;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x662F;&#x5426;&#x5B58;&#x5728;&#xFF0C;&#x4E0D;&#x5B58;&#x5728;&#x5219;&#x521B;&#x5EFA;&#x8DEF;&#x5F84;</span><br>  <span class=\"hljs-keyword\">if</span> (fs.existsSync(configDirPath + <span class=\"hljs-string\">&apos;config.json&apos;</span>)) {<br>    <span class=\"hljs-keyword\">const</span> rawdata = fs.readFileSync(configDirPath + <span class=\"hljs-string\">&apos;config.json&apos;</span>)<br>    config = <span class=\"hljs-built_in\">JSON</span>.parse(rawdata)<br>  } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (!fs.existsSync(configDirPath)) fs.mkdirSync(configDirPath)<br><br>  config.server_sckey = answers.server_sckey <span class=\"hljs-comment\">// &#x8BFB;&#x5165;&#x8F93;&#x5165;</span><br><br>  <span class=\"hljs-comment\">// &#x4FDD;&#x5B58;&#x5230;&#x914D;&#x7F6E;&#x6587;&#x4EF6;</span><br>  fs.writeFileSync(configDirPath + <span class=\"hljs-string\">&apos;config.json&apos;</span>, <span class=\"hljs-built_in\">JSON</span>.stringify(config), { <span class=\"hljs-attr\">flag</span>: <span class=\"hljs-string\">&apos;w+&apos;</span> })<br>  <span class=\"hljs-built_in\">console</span>.log(info(<span class=\"hljs-string\">`Config file save as <span class=\"hljs-subst\">${configDirPath}</span>config.json`</span>))<br>})<br><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"run&#x547D;&#x4EE4;&#x53C2;&#x6570;&#x5B9A;&#x4E49;\"><a href=\"#run&#x547D;&#x4EE4;&#x53C2;&#x6570;&#x5B9A;&#x4E49;\" class=\"headerlink\" title=\"run&#x547D;&#x4EE4;&#x53C2;&#x6570;&#x5B9A;&#x4E49;\"></a>run&#x547D;&#x4EE4;&#x53C2;&#x6570;&#x5B9A;&#x4E49;</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/run.js\">/bin/run.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">program<br>  .usage(<span class=\"hljs-string\">&apos;-u &lt;target url&gt; [options]&apos;</span>)  <span class=\"hljs-comment\">// &#x8F93;&#x51FA;&#xFF1A;&#x547D;&#x4EE4; + usage&#x5185;&#x5BB9;</span><br>  .requiredOption(<span class=\"hljs-string\">&apos;-u --url &lt;url&gt;&apos;</span>, <span class=\"hljs-string\">&apos;monitoring target&apos;</span>, validator.isUrl)<br>  <span class=\"hljs-comment\">// &#x5FC5;&#x987B;&#x53C2;&#x6570;&#xFF0C;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#x9A8C;&#x8BC1;&#x548C;&#x5904;&#x7406;&#x51FD;&#x6570;&#xFF0C;&#x8FD4;&#x56DE;&#x9A8C;&#x8BC1;&#x5904;&#x7406;&#x540E;&#x7684;&#x503C;&#xFF0C;&#x8BE6;&#x89C1;&#x53C2;&#x6570;&#x5904;&#x7406;</span><br>  .option(<span class=\"hljs-string\">&apos;-l, --log&apos;</span>, <span class=\"hljs-string\">&apos;log mode&apos;</span>, <span class=\"hljs-literal\">false</span>)<br>  <span class=\"hljs-comment\">// &#x6B64;&#x5904;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#x9ED8;&#x8BA4;&#x503C;&#xFF0C;&#x65E0;&#x8F93;&#x5165;&#x53D8;&#x91CF;&#xFF0C;&#x5373;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x65E0; &lt;any&gt; &#x7684;&#xFF0C;&#x68C0;&#x6D4B;&#x5230;&#x8BE5;&#x53C2;&#x6570;&#x5219;&#x5BF9;&#x5E94;&#x503C;&#x4E3A;true&#xFF0C;&#x5426;&#x5219;&#x4E3A;undefined&#xFF0C;&#x6240;&#x4EE5;&#x8BBE;&#x7F6E;&#x4E86;&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;false</span><br>  .option(<span class=\"hljs-string\">&apos;-i, --interval &lt;delay&gt;&apos;</span>, <span class=\"hljs-string\">&apos;the interval between initiating a web request in seconds&apos;</span>, validator.isInt, <span class=\"hljs-number\">60</span>)<br>  <span class=\"hljs-comment\">// &#x6B64;&#x5904;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#x9A8C;&#x8BC1;&#x51FD;&#x6570;&#xFF0C;&#x7B2C;&#x56DB;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#x9ED8;&#x8BA4;&#x503C;</span><br>  .option(<span class=\"hljs-string\">&apos;-D, --debug&apos;</span>, <span class=\"hljs-string\">&apos;debug mode&apos;</span>, <span class=\"hljs-literal\">false</span>)<br>  .option(<span class=\"hljs-string\">&apos;-d, --daemon&apos;</span>, <span class=\"hljs-string\">&apos;monitor whether to continue after the change of the web page is detected&apos;</span>, <span class=\"hljs-literal\">false</span>)<br>  .addOption(<span class=\"hljs-keyword\">new</span> Option(<span class=\"hljs-string\">&apos;-M, --mode &lt;operation mode&gt;&apos;</span>, <span class=\"hljs-string\">&apos;currently local only&apos;</span>).choices([<span class=\"hljs-string\">&apos;local&apos;</span>]).default(<span class=\"hljs-string\">&apos;local&apos;</span>))<br>  <span class=\"hljs-comment\">// &#x81EA;&#x5B9A;&#x4E49;&#x53C2;&#x6570;&#xFF0C;&#x4F7F;&#x7528;new Option&#x65B9;&#x6CD5;&#x521B;&#x5EFA;&#xFF0C;choices&#x8981;&#x6C42;&#x8F93;&#x5165;&#x503C;&#x5728;&#x679A;&#x4E3E;&#x8303;&#x56F4;&#x5185;&#xFF0C;default&#x8BBE;&#x7F6E;&#x9ED8;&#x8BA4;&#x503C;&#xFF0C;&#x5176;&#x4ED6;&#x65B9;&#x6CD5;commander.js&#x6587;&#x6863;&#x5E76;&#x65E0;&#x8BF4;&#x660E;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x67E5;&#x770B;Option&#x65B9;&#x6CD5;&#x5B9A;&#x4E49;&#x4EE3;&#x7801;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x63A5;&#x53E3;</span><br>  .addOption(<span class=\"hljs-keyword\">new</span> Option(<span class=\"hljs-string\">&apos;-m, --method &lt;request method&gt;&apos;</span>, <span class=\"hljs-string\">&apos;current get only&apos;</span>).choices([<span class=\"hljs-string\">&apos;get&apos;</span>]).default(<span class=\"hljs-string\">&apos;get&apos;</span>))<br>  .option(<span class=\"hljs-string\">&apos;-r, --retry &lt;retry time&gt;&apos;</span>, <span class=\"hljs-string\">&apos;retry times limit&apos;</span>, validator.isInt, <span class=\"hljs-number\">5</span>)<br>  .option(<span class=\"hljs-string\">&apos;-w, --wechat&apos;</span>, <span class=\"hljs-string\">&apos;enable Wechat push notification&apos;</span>)<br><br>program.parse(process.argv)<br><br><span class=\"hljs-keyword\">const</span> options = program.opts()\t<span class=\"hljs-comment\">// &#x89E3;&#x6790;&#x83B7;&#x53D6;&#x53C2;&#x6570;&#x5BF9;&#x8C61;</span><br><span class=\"hljs-keyword\">if</span> (options.debug) <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;options: &apos;</span>, options)  <span class=\"hljs-comment\">// &#x5982;&#x679C;&#x662F;&#x8C03;&#x8BD5;&#x6A21;&#x5F0F;&#x5219;&#x6253;&#x5370;&#x5168;&#x90E8;&#x53C2;&#x6570;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"&#x5B9E;&#x73B0;&#x903B;&#x8F91;\"><a href=\"#&#x5B9E;&#x73B0;&#x903B;&#x8F91;\" class=\"headerlink\" title=\"&#x5B9E;&#x73B0;&#x903B;&#x8F91;\"></a>&#x5B9E;&#x73B0;&#x903B;&#x8F91;</h4><p>&#x83B7;&#x53D6;&#x7F51;&#x9875;&#x5185;&#x5BB9;&#xFF0C;&#x5E76;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;<br>&#x7531;&#x4E8E;&#x7F51;&#x9875;&#x6E90;&#x7801;&#x53EF;&#x80FD;&#x53D1;&#x751F;&#x52A8;&#x6001;&#x6539;&#x53D8;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x4F7F;&#x7528;cheerio&#x5BF9;&#x7F51;&#x9875;&#x5185;&#x5BB9;&#x8FDB;&#x884C;&#x89E3;&#x6790;&#xFF0C;&#x83B7;&#x53D6;&#x7F51;&#x9875;&#x7684;&#x663E;&#x793A;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#xFF0C;&#x540C;&#x65F6;&#x65B9;&#x4FBF;&#x540E;&#x7EED;&#x5BF9;&#x81EA;&#x5B9A;&#x4E49;&#x76D1;&#x6D4B;&#x5185;&#x5BB9;&#x7684;&#x5347;&#x7EA7;&#x3002;</p>\n<h4 id=\"&#x83B7;&#x53D6;&#x7F51;&#x9875;&#x5185;&#x5BB9;\"><a href=\"#&#x83B7;&#x53D6;&#x7F51;&#x9875;&#x5185;&#x5BB9;\" class=\"headerlink\" title=\"&#x83B7;&#x53D6;&#x7F51;&#x9875;&#x5185;&#x5BB9;\"></a>&#x83B7;&#x53D6;&#x7F51;&#x9875;&#x5185;&#x5BB9;</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/run.js\">/bin/run.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> getRes = <span class=\"hljs-keyword\">async</span> () =&gt; {<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {<br>    axios[options.method](options.url)<br>      .then(<span class=\"hljs-function\"><span class=\"hljs-params\">r</span> =&gt;</span> {<br>        <span class=\"hljs-keyword\">const</span> $ = cheerio.load(r.data)<br>        <span class=\"hljs-keyword\">if</span> (options.debug) <span class=\"hljs-built_in\">console</span>.log($.text())<br>        resolve($.text())<br>      }).catch(<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> {<br>        <span class=\"hljs-keyword\">if</span> (e.response) {<br>          <span class=\"hljs-comment\">// The request was made and the server responded with a status code</span><br>          <span class=\"hljs-comment\">// that falls out of the range of 2xx</span><br>          <span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&apos;Error! Request error. StatusCode:&apos;</span>, e.response.status))<br>          <span class=\"hljs-keyword\">if</span> (options.debug || options.log) {<br>            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;Response Data:&apos;</span>, e.response.data)<br>            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;Response Header:&apos;</span>, e.response.headers)<br>          }<br>        } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (e.request) {<br>          <span class=\"hljs-comment\">// The request was made but no response was received</span><br>          <span class=\"hljs-comment\">// `error.request` is an instance of XMLHttpRequest in the browser and an instance of</span><br>          <span class=\"hljs-comment\">// http.ClientRequest in node.js</span><br>          <span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&apos;The request was made but no response was received&apos;</span>))<br>          <span class=\"hljs-keyword\">if</span> (options.debug || options.log) <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;Request:&apos;</span>, e.request)<br>          <span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">console</span>.log(warning(<span class=\"hljs-string\">&apos;add \\&apos;-l\\&apos; flag for more info&apos;</span>))<br>        } <span class=\"hljs-keyword\">else</span> {<br>          <span class=\"hljs-comment\">// Something happened in setting up the request that triggered an Error</span><br>          <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;Error&apos;</span>, e.message)<br>        }<br>        <span class=\"hljs-keyword\">if</span> (options.debug) <span class=\"hljs-built_in\">console</span>.log(e.config)<br>        reject(e)<br>      })<br>  })<br>}<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"&#x4E3B;&#x51FD;&#x6570;\"><a href=\"#&#x4E3B;&#x51FD;&#x6570;\" class=\"headerlink\" title=\"&#x4E3B;&#x51FD;&#x6570;\"></a>&#x4E3B;&#x51FD;&#x6570;</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> main = <span class=\"hljs-keyword\">async</span> () =&gt; {<br>  <span class=\"hljs-comment\">// &#x5982;&#x679C;&#x914D;&#x7F6E;&#x4E86;&#x5FAE;&#x4FE1;&#x63A8;&#x9001;&#xFF0C;&#x8BFB;&#x53D6;&#x914D;&#x7F6E;&#x5E76;&#x6784;&#x5EFA;&#x901A;&#x77E5;&#x65B9;&#x6CD5;</span><br>  <span class=\"hljs-keyword\">if</span> (options.wechat) options.wechat = <span class=\"hljs-keyword\">await</span> notify.wechat()<br>  <span class=\"hljs-keyword\">if</span> (!options.wechat) <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">// &#x68C0;&#x67E5;&#x662F;&#x5426;&#x6784;&#x5EFA;&#x901A;&#x77E5;&#x65B9;&#x6CD5;&#x6210;&#x529F;</span><br><br>  <span class=\"hljs-keyword\">let</span> requestCount = <span class=\"hljs-number\">0</span>, retryCount = <span class=\"hljs-number\">0</span><br>  <span class=\"hljs-keyword\">let</span> origin = <span class=\"hljs-keyword\">await</span> getRes()  <span class=\"hljs-comment\">// &#x83B7;&#x53D6;&#x521D;&#x59CB;&#x9875;&#x9762;</span><br>    .then(<span class=\"hljs-function\"><span class=\"hljs-params\">r</span> =&gt;</span> { <span class=\"hljs-keyword\">return</span> r })<br>    .catch(<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> {<br>      <span class=\"hljs-built_in\">console</span>.log(e)<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span><br>    })<br><br>  <span class=\"hljs-built_in\">console</span>.log(origin)<br><br>  <span class=\"hljs-keyword\">if</span> (!origin) <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">code</span>: -<span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&apos;Failed to request a web page for the first time.&apos;</span> }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;The request for the web page is successful. Start monitoring.&apos;</span>)<br>\t<br>  <span class=\"hljs-comment\">// &#x6784;&#x5EFA;&#x5B9A;&#x65F6;&#x5FAA;&#x73AF;</span><br>  <span class=\"hljs-keyword\">let</span> pro = <span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-keyword\">async</span> () =&gt; {<br>    <span class=\"hljs-comment\">// &#x83B7;&#x53D6;&#x65B0;&#x7684;&#x9875;&#x9762;&#x5185;&#x5BB9;</span><br>    <span class=\"hljs-keyword\">let</span> newWeb = <span class=\"hljs-keyword\">await</span> getRes().then(<span class=\"hljs-function\"><span class=\"hljs-params\">r</span> =&gt;</span> {<br>      requestCount++<br>      retryCount = <span class=\"hljs-number\">0</span><br>      <span class=\"hljs-keyword\">return</span> r<br>    }).catch(<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> {<br>      retryCount++<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span><br>    })<br><br>    <span class=\"hljs-comment\">// The web page has not changed and is in log mode</span><br>    <span class=\"hljs-keyword\">if</span> (newWeb &amp;&amp; newWeb == origin &amp;&amp; options.log) <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`Request <span class=\"hljs-subst\">${requestCount}</span> times. The web page remains unchanged.`</span>)<br>    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (newWeb &amp;&amp; newWeb != origin) {<br>      <span class=\"hljs-built_in\">console</span>.log(info(<span class=\"hljs-string\">&apos;The web page has changed!&apos;</span>))<br>      <span class=\"hljs-keyword\">if</span> (options.wechat) options.wechat()  <span class=\"hljs-comment\">// &#x8C03;&#x7528;&#x5FAE;&#x4FE1;&#x901A;&#x77E5;</span><br>      <span class=\"hljs-keyword\">if</span> (!options.daemon) {  <span class=\"hljs-comment\">// &#x975E;&#x5B88;&#x62A4;&#x6A21;&#x5F0F;&#x5219;&#x9000;&#x51FA;</span><br>        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;process exit&apos;</span>)<br>        <span class=\"hljs-built_in\">clearInterval</span>(pro)<br>      } <span class=\"hljs-keyword\">else</span> origin = newWeb<br>    }<br>    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (!newWeb &amp;&amp; retryCount &lt;= options.retry) <span class=\"hljs-built_in\">console</span>.log(warning(<span class=\"hljs-string\">`Request fail, retry for <span class=\"hljs-subst\">${retryCount}</span> times`</span>))<br>    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (!newWeb &amp;&amp; retryCount &gt; options.retry) {<br>      <span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&apos;The number of retries exceeds the limit! Process exit.&apos;</span>))<br>      <span class=\"hljs-built_in\">clearInterval</span>(pro)<br>    }<br>  }, <span class=\"hljs-number\">1000</span> * options.interval)<br>}<br><br>main()<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"&#x5176;&#x4ED6;\"><a href=\"#&#x5176;&#x4ED6;\" class=\"headerlink\" title=\"&#x5176;&#x4ED6;\"></a>&#x5176;&#x4ED6;</h3><h4 id=\"&#x5FAE;&#x4FE1;&#x901A;&#x77E5;\"><a href=\"#&#x5FAE;&#x4FE1;&#x901A;&#x77E5;\" class=\"headerlink\" title=\"&#x5FAE;&#x4FE1;&#x901A;&#x77E5;\"></a>&#x5FAE;&#x4FE1;&#x901A;&#x77E5;</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/plugins/notify.js\">/plugins/notify.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> wechat = <span class=\"hljs-keyword\">async</span> () =&gt; {<br>  <span class=\"hljs-keyword\">const</span> configDirPath = os.homedir() + <span class=\"hljs-string\">&apos;/.webmonitor/&apos;</span><br>  <span class=\"hljs-keyword\">let</span> config = {}<br>  <span class=\"hljs-keyword\">if</span> (fs.existsSync(configDirPath + <span class=\"hljs-string\">&apos;config.json&apos;</span>)) {<br>    <span class=\"hljs-keyword\">const</span> rawdata = fs.readFileSync(configDirPath + <span class=\"hljs-string\">&apos;config.json&apos;</span>)<br>    config = <span class=\"hljs-built_in\">JSON</span>.parse(rawdata)<br>  }<br><br>  <span class=\"hljs-keyword\">if</span> (!config.server_sckey) {<br>    <span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&apos;Error: server&#x9171; SCKEY no configured.&apos;</span>))<br>    <span class=\"hljs-built_in\">console</span>.log(info(<span class=\"hljs-string\">&apos;please run \\&apos;wmcli config\\&apos; to config SCKEY&apos;</span>))<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;process exit.&apos;</span>)<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span><br>  }<br><br>  <span class=\"hljs-keyword\">const</span> promptList = [{<br>    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&apos;input&apos;</span>,<br>    <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&apos;&#x8BF7;&#x8F93;&#x5165;&#x901A;&#x77E5;&#x6D88;&#x606F;&#x6807;&#x9898;:&apos;</span>,<br>    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&apos;title&apos;</span><br>  }, {<br>    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&apos;input&apos;</span>,<br>    <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&apos;&#x8BF7;&#x8F93;&#x5165;&#x901A;&#x77E5;&#x6D88;&#x606F;&#x5185;&#x5BB9;:&apos;</span>,<br>    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&apos;content&apos;</span><br>  },]<br><br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">await</span> inquirer.prompt(promptList).then(<span class=\"hljs-function\"><span class=\"hljs-params\">answers</span> =&gt;</span> {<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>      axios.get(<span class=\"hljs-string\">`https://sc.ftqq.com/<span class=\"hljs-subst\">${config.server_sckey}</span>.send`</span>, {<br>        <span class=\"hljs-attr\">params</span>: {<br>          <span class=\"hljs-attr\">text</span>: answers.title,<br>          <span class=\"hljs-attr\">desp</span>: answers.content<br>        }<br>      })<br>    }<br>  })<br>}<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"&#x53C2;&#x6570;&#x5904;&#x7406;&#x9A8C;&#x8BC1;&#x5668;\"><a href=\"#&#x53C2;&#x6570;&#x5904;&#x7406;&#x9A8C;&#x8BC1;&#x5668;\" class=\"headerlink\" title=\"&#x53C2;&#x6570;&#x5904;&#x7406;&#x9A8C;&#x8BC1;&#x5668;\"></a>&#x53C2;&#x6570;&#x5904;&#x7406;&#x9A8C;&#x8BC1;&#x5668;</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/plugins/validator.js\">/plugins/validator.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> { InvalidOptionArgumentError } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;commander&apos;</span>)  <span class=\"hljs-comment\">// commander&#x81EA;&#x5E26;&#x7684;&#x5F02;&#x5E38;</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isUrl</span>(<span class=\"hljs-params\">url</span>) </span>{<br>  <span class=\"hljs-keyword\">const</span> r = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">RegExp</span>(<span class=\"hljs-string\">&apos;^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$&apos;</span>, <span class=\"hljs-string\">&apos;g&apos;</span>)<br>  <span class=\"hljs-keyword\">if</span> (!r.test(url)) <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> InvalidOptionArgumentError(<span class=\"hljs-string\">&apos;Not a legitimate URL.&apos;</span>)  <span class=\"hljs-comment\">// &#x629B;&#x51FA;&#x5F02;&#x5E38;</span><br>  <span class=\"hljs-keyword\">return</span> url<br>}<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isInt</span>(<span class=\"hljs-params\">value, dummyPrevious</span>) </span>{<br>  <span class=\"hljs-comment\">// parseInt takes a string and a radix</span><br>  <span class=\"hljs-keyword\">const</span> parsedValue = <span class=\"hljs-built_in\">parseInt</span>(value, <span class=\"hljs-number\">10</span>)<br>  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">isNaN</span>(parsedValue)) <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> InvalidOptionArgumentError(<span class=\"hljs-string\">&apos;Not a number.&apos;</span>)<br>  <span class=\"hljs-keyword\">return</span> parsedValue<br>}<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"&#x53D1;&#x5E03;\"><a href=\"#&#x53D1;&#x5E03;\" class=\"headerlink\" title=\"&#x53D1;&#x5E03;\"></a>&#x53D1;&#x5E03;</h2><ol>\n<li>&#x5230;<a href=\"https://www.npmjs.com/\">npm&#x5B98;&#x7F51;</a>&#x6CE8;&#x518C;&#x4E00;&#x4E2A;&#x8D26;&#x6237;</li>\n<li>&#x6267;&#x884C;<code>npm login</code>&#x5E76;&#x8F93;&#x5165;&#x6CE8;&#x518C;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x767B;&#x9646;</li>\n<li>&#x4FEE;&#x6539;<code>package.json</code>&#x6216;&#x91CD;&#x65B0;&#x6267;&#x884C;<code>yarn init</code>&#x6216;&#x8005;<code>npm init</code>&#x8865;&#x5168;&#x4FE1;&#x606F;</li>\n<li>&#x6267;&#x884C;<code>npm publish</code></li>\n</ol>\n","site":{"data":{"galleries":[{"name":"colorful","cover":"/images/theme/post-image.jpg","description":"君未看花时，花与君同寂；君来看花日，花色一时明。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"记事","cover":"/images/theme/post-image.jpg","description":"翻开随身携带的记事本，写着许多事都是关于你。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"深圳日记","cover":"/images/theme/post-image.jpg","description":"斑马斑马，你不要睡着啦，我只是个匆忙的旅人啊。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]}]}},"excerpt":"","more":"<h1 id=\"WebMonitor-CLI-Node-Commander命令行工具实战\"><a href=\"#WebMonitor-CLI-Node-Commander命令行工具实战\" class=\"headerlink\" title=\"WebMonitor-CLI Node Commander命令行工具实战\"></a>WebMonitor-CLI Node Commander命令行工具实战</h1><p>开始之前，先放上<br>源码与使用说明：<a href=\"https://github.com/JasonLamv-t/WebMonitor\">JasonLamv-t/WebMonitor</a></p>\n<p>参考文档：<br>基础框架：<a href=\"https://github.com/tj/commander.js/blob/master/Readme_zh-CN.md\">commander.js中文文档</a><br>交互式命令行工具：<a href=\"https://www.npmjs.com/package/inquirer\">inquirer</a><br>控制台输出样式：<a href=\"https://www.npmjs.com/package/chalk\">chalk</a><br>node Jquery实现：<a href=\"https://github.com/cheeriojs/cheerio/wiki/Chinese-README\">cheerio中文文档</a></p>\n<h2 id=\"功能设计\"><a href=\"#功能设计\" class=\"headerlink\" title=\"功能设计\"></a>功能设计</h2><ul>\n<li>本地运行</li>\n<li><del>远程运行</del></li>\n<li><del>每日自动运行</del></li>\n<li><del>任务管理</del></li>\n<li>微信推送消息</li>\n<li><del>邮件提醒</del></li>\n<li><del>短信提醒</del></li>\n</ul>\n<h2 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h2><h3 id=\"项目的初始化与目录结构\"><a href=\"#项目的初始化与目录结构\" class=\"headerlink\" title=\"项目的初始化与目录结构\"></a>项目的初始化与目录结构</h3><p>项目使用了yarn作为包和依赖管理器，当然，你可以根据喜好执行<code>yarn init</code>或<code>npm init</code>来初始化项目<br>以下是本项目的结构，你自己的项目当然可以不同，有条理即可:</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">WebMonitor<br>├── README<span class=\"hljs-selector-class\">.md</span><br>├── bin\t\t\t\t\t\t\t\t<br>│   ├── app<span class=\"hljs-selector-class\">.js</span>        <span class=\"hljs-comment\">// 程序入口文件</span><br>│   ├── config<span class=\"hljs-selector-class\">.js</span>     <span class=\"hljs-comment\">// 配置命令子文件</span><br>│   └── run<span class=\"hljs-selector-class\">.js</span>        <span class=\"hljs-comment\">// 运行命令子文件</span><br>├── package<span class=\"hljs-selector-class\">.json</span><br>├── plugins<br>│   ├── notify<span class=\"hljs-selector-class\">.js</span>     <span class=\"hljs-comment\">// 通知处理器</span><br>│   ├── theme<span class=\"hljs-selector-class\">.js</span>      <span class=\"hljs-comment\">// 主题设置</span><br>│   └── validator<span class=\"hljs-selector-class\">.js</span>  <span class=\"hljs-comment\">// 数据验证器和处理器</span><br>├── test<span class=\"hljs-selector-class\">.html</span><br>├── yarn<span class=\"hljs-selector-class\">.lock</span>\t\t\t<br>└── node_modules<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装项目所需依赖\"><a href=\"#安装项目所需依赖\" class=\"headerlink\" title=\"安装项目所需依赖\"></a>安装项目所需依赖</h3><p>执行<code>yarn add commander inquirer chalk cheerio axios</code>，当然<code>npm</code>也行</p>\n<h3 id=\"程序入口\"><a href=\"#程序入口\" class=\"headerlink\" title=\"程序入口\"></a>程序入口</h3><h4 id=\"定义程序的根命令和入口\"><a href=\"#定义程序的根命令和入口\" class=\"headerlink\" title=\"定义程序的根命令和入口\"></a>定义程序的根命令和入口</h4><p>创建一个app.js文件或者index.js文件，在根目录或其他定义的目录均可，以下示例均以本项目为参考：<a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/app.js\">/bin/app.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-meta\">#! /usr/bin/env node</span><br><span class=\"hljs-comment\">// 指定脚本解析执行器，所有命令脚本文件都是必须的</span><br><br><span class=\"hljs-keyword\">const</span> &#123; Command &#125; = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;commander&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> program = <span class=\"hljs-keyword\">new</span> Command()<br><br>program<br>  .version(<span class=\"hljs-string\">&#x27;1.1.0&#x27;</span>)<br>  .command(<span class=\"hljs-string\">&#x27;run&#x27;</span>, <span class=\"hljs-string\">&#x27;run a monitor process immediately&#x27;</span>, &#123; <span class=\"hljs-attr\">executableFile</span>: <span class=\"hljs-string\">&#x27;run&#x27;</span> &#125;).alias(<span class=\"hljs-string\">&#x27;r&#x27;</span>)<br>  .command(<span class=\"hljs-string\">&#x27;config&#x27;</span>, <span class=\"hljs-string\">&#x27;config&#x27;</span>,&#123; <span class=\"hljs-attr\">executableFile</span>: <span class=\"hljs-string\">&#x27;config&#x27;</span> &#125;).alias(<span class=\"hljs-string\">&#x27;c&#x27;</span>)<br>  <span class=\"hljs-comment\">// .command(&#x27;子命令&#x27;, &#x27;命令描述&#x27;, &#123; executableFile: &#x27;子命令文件路径&#x27; &#125;).alias(&#x27;命令别称&#x27;)</span><br><br>program.parse(process.argv)  <span class=\"hljs-comment\">// 无论子命令还是根命令都需要执行program.parse方法，参数详见commander文档</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">$ <span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">bin</span>/app.js -V<br><span class=\"hljs-number\">1.1</span>.<span class=\"hljs-number\">0</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"连接到本地依赖\"><a href=\"#连接到本地依赖\" class=\"headerlink\" title=\"连接到本地依赖\"></a>连接到本地依赖</h4><p>package.json中添加以下项</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">...<br><span class=\"hljs-string\">&quot;bin&quot;</span>: &#123;<br>    <span class=\"hljs-attr\">&quot;webmonitor&quot;</span>: <span class=\"hljs-string\">&quot;./bin/app.js&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;wmcli&quot;</span>: <span class=\"hljs-string\">&quot;./bin/app.js&quot;</span><br>  &#125;,<br>...<br></code></pre></td></tr></table></figure>\n\n<p>执行<code>yarn link</code></p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs subunit\">$ yarn link<br>yarn link v1.22.10<br><span class=\"hljs-keyword\">success </span>Registered &quot;webmonitor-cli&quot;.<br>info You can now run `yarn link &quot;webmonitor-cli&quot;` in the projects where you want to use this package and it will be used instead.<br>✨  Done in 0.05s.<br>$ webmonitor -V<br>1.1.0<br>$ wmcli --version<br>1.1.0<br></code></pre></td></tr></table></figure>\n\n<p>到这一步，就完成了一个根命令的入口定义并能在命令行中调用，这将方便我们后面的调试</p>\n<h3 id=\"特定输出主题定义\"><a href=\"#特定输出主题定义\" class=\"headerlink\" title=\"特定输出主题定义\"></a>特定输出主题定义</h3><p>创建一个主题文件/plugins/theme.js，用于定义一些特定输出的主题，你可以根据自己喜好修改</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> chalk = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;chalk&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> error = chalk.bgRedBright.white<br><span class=\"hljs-keyword\">const</span> warning = chalk.keyword(<span class=\"hljs-string\">&#x27;orange&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> info = chalk.yellowBright<br><br><span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&#x27;error test&#x27;</span>))<br><span class=\"hljs-built_in\">console</span>.log(warning(<span class=\"hljs-string\">&#x27;warning test&#x27;</span>))<br><span class=\"hljs-built_in\">console</span>.log(info(<span class=\"hljs-string\">&#x27;info test&#x27;</span>))<br><br><span class=\"hljs-built_in\">module</span>.exports = &#123;<br>  error, warning, info<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"子命令\"><a href=\"#子命令\" class=\"headerlink\" title=\"子命令\"></a>子命令</h3><h4 id=\"config命令\"><a href=\"#config命令\" class=\"headerlink\" title=\"config命令\"></a>config命令</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/config.js\">/bin/config.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-meta\">#! /usr/bin/env node</span><br><br><span class=\"hljs-keyword\">const</span> inquirer = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;inquirer&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> fs = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;fs&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> os = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;os&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> &#123; Command &#125; = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;commander&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> program = <span class=\"hljs-keyword\">new</span> Command()  <span class=\"hljs-comment\">// 同样适用new Command对象创建子命令实例</span><br><span class=\"hljs-keyword\">const</span> &#123; error, warning, info &#125; = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;../plugins/theme&#x27;</span>)<br><br>program<br><span class=\"hljs-comment\">// .option(&#x27;-p --path &lt;absolue path&gt;&#x27;, &#x27;config file path&#x27;)</span><br><br>program.parse(process.argv)  <span class=\"hljs-comment\">// 无论子命令还是根命令都需要执行program.parse方法，参数详见commander文档</span><br><span class=\"hljs-keyword\">const</span> options = program.opts()  <span class=\"hljs-comment\">// 通过执行program.opts方法获取全部参数对象</span><br><br><span class=\"hljs-comment\">// 定义提示列表，对应对象属性详见inquirer文档</span><br><span class=\"hljs-keyword\">const</span> promptList = [&#123;<br>  <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;input&#x27;</span>,  <span class=\"hljs-comment\">// 输入类型</span><br>  <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;请输入Server酱的SCKEY:&#x27;</span>,  <span class=\"hljs-comment\">// 提示消息</span><br>  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;server_sckey&#x27;</span>  <span class=\"hljs-comment\">// 变量亩</span><br>&#125;]<br><br><span class=\"hljs-comment\">// 执行inquirer.prompt方法显示提示</span><br><span class=\"hljs-comment\">// 需要注意的是，一旦执行此方法会按顺序显示传入列表的所有提示并获取输入</span><br><span class=\"hljs-comment\">// 显然，这是一个异步操作，复杂的表单需要多次按照表单逻辑调用inquirer.prompt方法来实现</span><br>inquirer.prompt(promptList).then(<span class=\"hljs-function\"><span class=\"hljs-params\">answers</span> =&gt;</span> &#123;<br>  <span class=\"hljs-keyword\">const</span> configDirPath = os.homedir() + <span class=\"hljs-string\">&#x27;/.webmonitor/&#x27;</span>  <span class=\"hljs-comment\">// 获取用户目录绝对路径拼接配置文件夹路径</span><br>  <span class=\"hljs-keyword\">let</span> config = &#123;&#125;<br>  <span class=\"hljs-comment\">// 判断配置文件路径是否存在，不存在则创建路径</span><br>  <span class=\"hljs-keyword\">if</span> (fs.existsSync(configDirPath + <span class=\"hljs-string\">&#x27;config.json&#x27;</span>)) &#123;<br>    <span class=\"hljs-keyword\">const</span> rawdata = fs.readFileSync(configDirPath + <span class=\"hljs-string\">&#x27;config.json&#x27;</span>)<br>    config = <span class=\"hljs-built_in\">JSON</span>.parse(rawdata)<br>  &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (!fs.existsSync(configDirPath)) fs.mkdirSync(configDirPath)<br><br>  config.server_sckey = answers.server_sckey <span class=\"hljs-comment\">// 读入输入</span><br><br>  <span class=\"hljs-comment\">// 保存到配置文件</span><br>  fs.writeFileSync(configDirPath + <span class=\"hljs-string\">&#x27;config.json&#x27;</span>, <span class=\"hljs-built_in\">JSON</span>.stringify(config), &#123; <span class=\"hljs-attr\">flag</span>: <span class=\"hljs-string\">&#x27;w+&#x27;</span> &#125;)<br>  <span class=\"hljs-built_in\">console</span>.log(info(<span class=\"hljs-string\">`Config file save as <span class=\"hljs-subst\">$&#123;configDirPath&#125;</span>config.json`</span>))<br>&#125;)<br><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"run命令参数定义\"><a href=\"#run命令参数定义\" class=\"headerlink\" title=\"run命令参数定义\"></a>run命令参数定义</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/run.js\">/bin/run.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">program<br>  .usage(<span class=\"hljs-string\">&#x27;-u &lt;target url&gt; [options]&#x27;</span>)  <span class=\"hljs-comment\">// 输出：命令 + usage内容</span><br>  .requiredOption(<span class=\"hljs-string\">&#x27;-u --url &lt;url&gt;&#x27;</span>, <span class=\"hljs-string\">&#x27;monitoring target&#x27;</span>, validator.isUrl)<br>  <span class=\"hljs-comment\">// 必须参数，第三个参数为验证和处理函数，返回验证处理后的值，详见参数处理</span><br>  .option(<span class=\"hljs-string\">&#x27;-l, --log&#x27;</span>, <span class=\"hljs-string\">&#x27;log mode&#x27;</span>, <span class=\"hljs-literal\">false</span>)<br>  <span class=\"hljs-comment\">// 此处第三个参数为默认值，无输入变量，即第一个参数无 &lt;any&gt; 的，检测到该参数则对应值为true，否则为undefined，所以设置了默认值为false</span><br>  .option(<span class=\"hljs-string\">&#x27;-i, --interval &lt;delay&gt;&#x27;</span>, <span class=\"hljs-string\">&#x27;the interval between initiating a web request in seconds&#x27;</span>, validator.isInt, <span class=\"hljs-number\">60</span>)<br>  <span class=\"hljs-comment\">// 此处第三个参数为验证函数，第四个参数为默认值</span><br>  .option(<span class=\"hljs-string\">&#x27;-D, --debug&#x27;</span>, <span class=\"hljs-string\">&#x27;debug mode&#x27;</span>, <span class=\"hljs-literal\">false</span>)<br>  .option(<span class=\"hljs-string\">&#x27;-d, --daemon&#x27;</span>, <span class=\"hljs-string\">&#x27;monitor whether to continue after the change of the web page is detected&#x27;</span>, <span class=\"hljs-literal\">false</span>)<br>  .addOption(<span class=\"hljs-keyword\">new</span> Option(<span class=\"hljs-string\">&#x27;-M, --mode &lt;operation mode&gt;&#x27;</span>, <span class=\"hljs-string\">&#x27;currently local only&#x27;</span>).choices([<span class=\"hljs-string\">&#x27;local&#x27;</span>]).default(<span class=\"hljs-string\">&#x27;local&#x27;</span>))<br>  <span class=\"hljs-comment\">// 自定义参数，使用new Option方法创建，choices要求输入值在枚举范围内，default设置默认值，其他方法commander.js文档并无说明，但是可以通过查看Option方法定义代码找到对应接口</span><br>  .addOption(<span class=\"hljs-keyword\">new</span> Option(<span class=\"hljs-string\">&#x27;-m, --method &lt;request method&gt;&#x27;</span>, <span class=\"hljs-string\">&#x27;current get only&#x27;</span>).choices([<span class=\"hljs-string\">&#x27;get&#x27;</span>]).default(<span class=\"hljs-string\">&#x27;get&#x27;</span>))<br>  .option(<span class=\"hljs-string\">&#x27;-r, --retry &lt;retry time&gt;&#x27;</span>, <span class=\"hljs-string\">&#x27;retry times limit&#x27;</span>, validator.isInt, <span class=\"hljs-number\">5</span>)<br>  .option(<span class=\"hljs-string\">&#x27;-w, --wechat&#x27;</span>, <span class=\"hljs-string\">&#x27;enable Wechat push notification&#x27;</span>)<br><br>program.parse(process.argv)<br><br><span class=\"hljs-keyword\">const</span> options = program.opts()\t<span class=\"hljs-comment\">// 解析获取参数对象</span><br><span class=\"hljs-keyword\">if</span> (options.debug) <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;options: &#x27;</span>, options)  <span class=\"hljs-comment\">// 如果是调试模式则打印全部参数</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"实现逻辑\"><a href=\"#实现逻辑\" class=\"headerlink\" title=\"实现逻辑\"></a>实现逻辑</h4><p>获取网页内容，并进行比较<br>由于网页源码可能发生动态改变，因此我们使用cheerio对网页内容进行解析，获取网页的显示进行比较，同时方便后续对自定义监测内容的升级。</p>\n<h4 id=\"获取网页内容\"><a href=\"#获取网页内容\" class=\"headerlink\" title=\"获取网页内容\"></a>获取网页内容</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/run.js\">/bin/run.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> getRes = <span class=\"hljs-keyword\">async</span> () =&gt; &#123;<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> &#123;<br>    axios[options.method](options.url)<br>      .then(<span class=\"hljs-function\"><span class=\"hljs-params\">r</span> =&gt;</span> &#123;<br>        <span class=\"hljs-keyword\">const</span> $ = cheerio.load(r.data)<br>        <span class=\"hljs-keyword\">if</span> (options.debug) <span class=\"hljs-built_in\">console</span>.log($.text())<br>        resolve($.text())<br>      &#125;).catch(<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;<br>        <span class=\"hljs-keyword\">if</span> (e.response) &#123;<br>          <span class=\"hljs-comment\">// The request was made and the server responded with a status code</span><br>          <span class=\"hljs-comment\">// that falls out of the range of 2xx</span><br>          <span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&#x27;Error! Request error. StatusCode:&#x27;</span>, e.response.status))<br>          <span class=\"hljs-keyword\">if</span> (options.debug || options.log) &#123;<br>            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;Response Data:&#x27;</span>, e.response.data)<br>            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;Response Header:&#x27;</span>, e.response.headers)<br>          &#125;<br>        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (e.request) &#123;<br>          <span class=\"hljs-comment\">// The request was made but no response was received</span><br>          <span class=\"hljs-comment\">// `error.request` is an instance of XMLHttpRequest in the browser and an instance of</span><br>          <span class=\"hljs-comment\">// http.ClientRequest in node.js</span><br>          <span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&#x27;The request was made but no response was received&#x27;</span>))<br>          <span class=\"hljs-keyword\">if</span> (options.debug || options.log) <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;Request:&#x27;</span>, e.request)<br>          <span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">console</span>.log(warning(<span class=\"hljs-string\">&#x27;add \\&#x27;-l\\&#x27; flag for more info&#x27;</span>))<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>          <span class=\"hljs-comment\">// Something happened in setting up the request that triggered an Error</span><br>          <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;Error&#x27;</span>, e.message)<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> (options.debug) <span class=\"hljs-built_in\">console</span>.log(e.config)<br>        reject(e)<br>      &#125;)<br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"主函数\"><a href=\"#主函数\" class=\"headerlink\" title=\"主函数\"></a>主函数</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> main = <span class=\"hljs-keyword\">async</span> () =&gt; &#123;<br>  <span class=\"hljs-comment\">// 如果配置了微信推送，读取配置并构建通知方法</span><br>  <span class=\"hljs-keyword\">if</span> (options.wechat) options.wechat = <span class=\"hljs-keyword\">await</span> notify.wechat()<br>  <span class=\"hljs-keyword\">if</span> (!options.wechat) <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">// 检查是否构建通知方法成功</span><br><br>  <span class=\"hljs-keyword\">let</span> requestCount = <span class=\"hljs-number\">0</span>, retryCount = <span class=\"hljs-number\">0</span><br>  <span class=\"hljs-keyword\">let</span> origin = <span class=\"hljs-keyword\">await</span> getRes()  <span class=\"hljs-comment\">// 获取初始页面</span><br>    .then(<span class=\"hljs-function\"><span class=\"hljs-params\">r</span> =&gt;</span> &#123; <span class=\"hljs-keyword\">return</span> r &#125;)<br>    .catch(<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;<br>      <span class=\"hljs-built_in\">console</span>.log(e)<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span><br>    &#125;)<br><br>  <span class=\"hljs-built_in\">console</span>.log(origin)<br><br>  <span class=\"hljs-keyword\">if</span> (!origin) <span class=\"hljs-keyword\">return</span> &#123; <span class=\"hljs-attr\">code</span>: -<span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Failed to request a web page for the first time.&#x27;</span> &#125;<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;The request for the web page is successful. Start monitoring.&#x27;</span>)<br>\t<br>  <span class=\"hljs-comment\">// 构建定时循环</span><br>  <span class=\"hljs-keyword\">let</span> pro = <span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-keyword\">async</span> () =&gt; &#123;<br>    <span class=\"hljs-comment\">// 获取新的页面内容</span><br>    <span class=\"hljs-keyword\">let</span> newWeb = <span class=\"hljs-keyword\">await</span> getRes().then(<span class=\"hljs-function\"><span class=\"hljs-params\">r</span> =&gt;</span> &#123;<br>      requestCount++<br>      retryCount = <span class=\"hljs-number\">0</span><br>      <span class=\"hljs-keyword\">return</span> r<br>    &#125;).catch(<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;<br>      retryCount++<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span><br>    &#125;)<br><br>    <span class=\"hljs-comment\">// The web page has not changed and is in log mode</span><br>    <span class=\"hljs-keyword\">if</span> (newWeb &amp;&amp; newWeb == origin &amp;&amp; options.log) <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`Request <span class=\"hljs-subst\">$&#123;requestCount&#125;</span> times. The web page remains unchanged.`</span>)<br>    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (newWeb &amp;&amp; newWeb != origin) &#123;<br>      <span class=\"hljs-built_in\">console</span>.log(info(<span class=\"hljs-string\">&#x27;The web page has changed!&#x27;</span>))<br>      <span class=\"hljs-keyword\">if</span> (options.wechat) options.wechat()  <span class=\"hljs-comment\">// 调用微信通知</span><br>      <span class=\"hljs-keyword\">if</span> (!options.daemon) &#123;  <span class=\"hljs-comment\">// 非守护模式则退出</span><br>        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;process exit&#x27;</span>)<br>        <span class=\"hljs-built_in\">clearInterval</span>(pro)<br>      &#125; <span class=\"hljs-keyword\">else</span> origin = newWeb<br>    &#125;<br>    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (!newWeb &amp;&amp; retryCount &lt;= options.retry) <span class=\"hljs-built_in\">console</span>.log(warning(<span class=\"hljs-string\">`Request fail, retry for <span class=\"hljs-subst\">$&#123;retryCount&#125;</span> times`</span>))<br>    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (!newWeb &amp;&amp; retryCount &gt; options.retry) &#123;<br>      <span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&#x27;The number of retries exceeds the limit! Process exit.&#x27;</span>))<br>      <span class=\"hljs-built_in\">clearInterval</span>(pro)<br>    &#125;<br>  &#125;, <span class=\"hljs-number\">1000</span> * options.interval)<br>&#125;<br><br>main()<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><h4 id=\"微信通知\"><a href=\"#微信通知\" class=\"headerlink\" title=\"微信通知\"></a>微信通知</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/plugins/notify.js\">/plugins/notify.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> wechat = <span class=\"hljs-keyword\">async</span> () =&gt; &#123;<br>  <span class=\"hljs-keyword\">const</span> configDirPath = os.homedir() + <span class=\"hljs-string\">&#x27;/.webmonitor/&#x27;</span><br>  <span class=\"hljs-keyword\">let</span> config = &#123;&#125;<br>  <span class=\"hljs-keyword\">if</span> (fs.existsSync(configDirPath + <span class=\"hljs-string\">&#x27;config.json&#x27;</span>)) &#123;<br>    <span class=\"hljs-keyword\">const</span> rawdata = fs.readFileSync(configDirPath + <span class=\"hljs-string\">&#x27;config.json&#x27;</span>)<br>    config = <span class=\"hljs-built_in\">JSON</span>.parse(rawdata)<br>  &#125;<br><br>  <span class=\"hljs-keyword\">if</span> (!config.server_sckey) &#123;<br>    <span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&#x27;Error: server酱 SCKEY no configured.&#x27;</span>))<br>    <span class=\"hljs-built_in\">console</span>.log(info(<span class=\"hljs-string\">&#x27;please run \\&#x27;wmcli config\\&#x27; to config SCKEY&#x27;</span>))<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;process exit.&#x27;</span>)<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span><br>  &#125;<br><br>  <span class=\"hljs-keyword\">const</span> promptList = [&#123;<br>    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;input&#x27;</span>,<br>    <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;请输入通知消息标题:&#x27;</span>,<br>    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;title&#x27;</span><br>  &#125;, &#123;<br>    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;input&#x27;</span>,<br>    <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;请输入通知消息内容:&#x27;</span>,<br>    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;content&#x27;</span><br>  &#125;,]<br><br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">await</span> inquirer.prompt(promptList).then(<span class=\"hljs-function\"><span class=\"hljs-params\">answers</span> =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>&#123;<br>      axios.get(<span class=\"hljs-string\">`https://sc.ftqq.com/<span class=\"hljs-subst\">$&#123;config.server_sckey&#125;</span>.send`</span>, &#123;<br>        <span class=\"hljs-attr\">params</span>: &#123;<br>          <span class=\"hljs-attr\">text</span>: answers.title,<br>          <span class=\"hljs-attr\">desp</span>: answers.content<br>        &#125;<br>      &#125;)<br>    &#125;<br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"参数处理验证器\"><a href=\"#参数处理验证器\" class=\"headerlink\" title=\"参数处理验证器\"></a>参数处理验证器</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/plugins/validator.js\">/plugins/validator.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> &#123; InvalidOptionArgumentError &#125; = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;commander&#x27;</span>)  <span class=\"hljs-comment\">// commander自带的异常</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isUrl</span>(<span class=\"hljs-params\">url</span>) </span>&#123;<br>  <span class=\"hljs-keyword\">const</span> r = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">RegExp</span>(<span class=\"hljs-string\">&#x27;^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d&#123;1,2&#125;|2[0-4]\\\\d|25[0-5]))&#123;2&#125;(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]&#123;2,&#125;)))|localhost)(?::\\\\d&#123;2,5&#125;)?(?:(/|\\\\?|#)[^\\\\s]*)?$&#x27;</span>, <span class=\"hljs-string\">&#x27;g&#x27;</span>)<br>  <span class=\"hljs-keyword\">if</span> (!r.test(url)) <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> InvalidOptionArgumentError(<span class=\"hljs-string\">&#x27;Not a legitimate URL.&#x27;</span>)  <span class=\"hljs-comment\">// 抛出异常</span><br>  <span class=\"hljs-keyword\">return</span> url<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isInt</span>(<span class=\"hljs-params\">value, dummyPrevious</span>) </span>&#123;<br>  <span class=\"hljs-comment\">// parseInt takes a string and a radix</span><br>  <span class=\"hljs-keyword\">const</span> parsedValue = <span class=\"hljs-built_in\">parseInt</span>(value, <span class=\"hljs-number\">10</span>)<br>  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">isNaN</span>(parsedValue)) <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> InvalidOptionArgumentError(<span class=\"hljs-string\">&#x27;Not a number.&#x27;</span>)<br>  <span class=\"hljs-keyword\">return</span> parsedValue<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h2><ol>\n<li>到<a href=\"https://www.npmjs.com/\">npm官网</a>注册一个账户</li>\n<li>执行<code>npm login</code>并输入注册信息进行登陆</li>\n<li>修改<code>package.json</code>或重新执行<code>yarn init</code>或者<code>npm init</code>补全信息</li>\n<li>执行<code>npm publish</code></li>\n</ol>\n"},{"title":"我的第一篇博客","date":"2021-05-19T03:35:49.000Z","copyright":false,"_content":"\n**其实也没什么好写的，只是到了大学生活即将结束的时候，才想起来似乎有些值得纪念的东西没有记下来**\n人生很长，也很短，我相信人，生而不凡\n","source":"_posts/my_first_blog.md","raw":"---\ntitle: 我的第一篇博客\ndate: 2021-05-19 11:35:49\ncategories: \n- 博客 \ncopyright: false\n---\n\n**其实也没什么好写的，只是到了大学生活即将结束的时候，才想起来似乎有些值得纪念的东西没有记下来**\n人生很长，也很短，我相信人，生而不凡\n","slug":"my_first_blog","published":1,"updated":"2021-05-19T17:12:30.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckq0jxt1000015s4a9ocohzmb","content":"<p><strong>&#x5176;&#x5B9E;&#x4E5F;&#x6CA1;&#x4EC0;&#x4E48;&#x597D;&#x5199;&#x7684;&#xFF0C;&#x53EA;&#x662F;&#x5230;&#x4E86;&#x5927;&#x5B66;&#x751F;&#x6D3B;&#x5373;&#x5C06;&#x7ED3;&#x675F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x624D;&#x60F3;&#x8D77;&#x6765;&#x4F3C;&#x4E4E;&#x6709;&#x4E9B;&#x503C;&#x5F97;&#x7EAA;&#x5FF5;&#x7684;&#x4E1C;&#x897F;&#x6CA1;&#x6709;&#x8BB0;&#x4E0B;&#x6765;</strong><br>&#x4EBA;&#x751F;&#x5F88;&#x957F;&#xFF0C;&#x4E5F;&#x5F88;&#x77ED;&#xFF0C;&#x6211;&#x76F8;&#x4FE1;&#x4EBA;&#xFF0C;&#x751F;&#x800C;&#x4E0D;&#x51E1;</p>\n","site":{"data":{"galleries":[{"name":"colorful","cover":"/images/theme/post-image.jpg","description":"君未看花时，花与君同寂；君来看花日，花色一时明。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"记事","cover":"/images/theme/post-image.jpg","description":"翻开随身携带的记事本，写着许多事都是关于你。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]},{"name":"深圳日记","cover":"/images/theme/post-image.jpg","description":"斑马斑马，你不要睡着啦，我只是个匆忙的旅人啊。","photos":["/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg","/images/theme/post-image.jpg"]}]}},"excerpt":"","more":"<p><strong>其实也没什么好写的，只是到了大学生活即将结束的时候，才想起来似乎有些值得纪念的东西没有记下来</strong><br>人生很长，也很短，我相信人，生而不凡</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckq0jxt1000015s4a9ocohzmb","category_id":"ckovq4z3t00034i4a2v2q72yo","_id":"ckq0jxt1400035s4a177u90rn"}],"PostTag":[{"post_id":"ckq0jxt0w00005s4a24jd6545","tag_id":"ckq0jxt1200025s4a4p6agmze","_id":"ckq0jxt1400045s4ahkdtggqj"}],"Tag":[{"name":"Node","_id":"ckq0jxt1200025s4a4p6agmze"}]}}