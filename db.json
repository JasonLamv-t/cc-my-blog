{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/zhaoo/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/js/color-mode.js","path":"js/color-mode.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/theme/cloud.png","path":"images/theme/cloud.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/theme/loading.gif","path":"images/theme/loading.gif","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/theme/panda.jpg","path":"images/theme/panda.jpg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/theme/post-image.jpg","path":"images/theme/post-image.jpg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/theme/welcome-image.jpg","path":"images/theme/welcome-image.jpg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/icons/apple-touch-icon.png","path":"images/icons/apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/icons/favicon-144x144.png","path":"images/icons/favicon-144x144.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/icons/favicon-16x16.png","path":"images/icons/favicon-16x16.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/icons/favicon-32x32.png","path":"images/icons/favicon-32x32.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/icons/zhaoo-logo.png","path":"images/icons/zhaoo-logo.png","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/daovoice/daovoice.js","path":"lib/daovoice/daovoice.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/fancybox/fancybox.css","path":"lib/fancybox/fancybox.css","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/fancybox/fancybox.js","path":"lib/fancybox/fancybox.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/gitalk/gitalk.css","path":"lib/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/gitalk/gitalk.js","path":"lib/gitalk/gitalk.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/highlight/a11y-dark.css","path":"lib/highlight/a11y-dark.css","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/highlight/highlight.js","path":"lib/highlight/highlight.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/jquery/jquery.js","path":"lib/jquery/jquery.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/lazyload/lazyload.js","path":"lib/lazyload/lazyload.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/pjax/pjax.js","path":"lib/pjax/pjax.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/lib/qrcode/qrcode.js","path":"lib/qrcode/qrcode.js","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_0.jpeg","path":"images/galleries/shenzhen/IMG_0.jpeg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_1.JPG","path":"images/galleries/shenzhen/IMG_1.JPG","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_10.jpeg","path":"images/galleries/shenzhen/IMG_10.jpeg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_11.jpeg","path":"images/galleries/shenzhen/IMG_11.jpeg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_12.JPG","path":"images/galleries/shenzhen/IMG_12.JPG","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_13.jpeg","path":"images/galleries/shenzhen/IMG_13.jpeg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_14.jpeg","path":"images/galleries/shenzhen/IMG_14.jpeg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_2.JPG","path":"images/galleries/shenzhen/IMG_2.JPG","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_3.jpeg","path":"images/galleries/shenzhen/IMG_3.jpeg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_4.jpeg","path":"images/galleries/shenzhen/IMG_4.jpeg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_6.jpeg","path":"images/galleries/shenzhen/IMG_6.jpeg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_5.jpeg","path":"images/galleries/shenzhen/IMG_5.jpeg","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_7.PNG","path":"images/galleries/shenzhen/IMG_7.PNG","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_8.JPG","path":"images/galleries/shenzhen/IMG_8.JPG","modified":0,"renderable":1},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_9.jpeg","path":"images/galleries/shenzhen/IMG_9.jpeg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/PDF2JPG-Custom Runtime dependent installation practices.md","hash":"845d4bb71531ef6efec8e106c9b20a19ebbab7cf","modified":1634930904557},{"_id":"source/_data/galleries.json","hash":"e68d77d603132e8c222ae654dd166bee3816dc4f","modified":1634926361060},{"_id":"source/.DS_Store","hash":"20475d28cdaa05ac50200d12652278b71c6cfeef","modified":1623820216755},{"_id":"source/_posts/my_first_blog.md","hash":"e365849d467f35cf2b95f733a5fe9a5d376d6f4b","modified":1634926361060},{"_id":"source/about/index.md","hash":"6d6e0164a6eb6bb6d3026ce18990518c1efc8ba3","modified":1634926361061},{"_id":"source/_posts/node based frondend cicd.md","hash":"84e37db5861e0eda90fa56fa4a29793678356ad6","modified":1634930904557},{"_id":"source/_posts/webmonitor.md","hash":"bfef993edb1e29b2d2d1ed342bf723ee3c570724","modified":1634926361061},{"_id":"source/galleries/index.md","hash":"84a2c45e2d0b3547d0004caf56ad40be0c4f74b8","modified":1621325638881},{"_id":"source/categories/index.md","hash":"446c750191f2469ed043a321d231555b96006e56","modified":1621325782735},{"_id":"source/galleries/深圳日记/index.md","hash":"ed9640b8192a9a9ce4771a33a8c2671d408fbb80","modified":1621217920000},{"_id":"source/tags/index.md","hash":"1e409e934d1393e0b25ed88a98ebbab2b01e1cff","modified":1621325764489},{"_id":"themes/zhaoo/.gitignore","hash":"7d65523f2a5afb69d76824dd1dfa62a34faa3197","modified":1621217920000},{"_id":"themes/zhaoo/.DS_Store","hash":"79d6c88b50127f2d7ff2e96e5c23e1e667cefed0","modified":1624044798754},{"_id":"themes/zhaoo/LICENSE","hash":"74f4b502cb5e62d3c947bc4fd16bed695d8bf65b","modified":1621217920000},{"_id":"themes/zhaoo/README.md","hash":"edfe090d2d2e4c67809bdcae9f2f26a390ff8a84","modified":1621217920000},{"_id":"themes/zhaoo/README_EN.md","hash":"37752da20ce4967080464b568d0de3719aa9c29d","modified":1621217920000},{"_id":"themes/zhaoo/languages/default.yml","hash":"1b2b75ca9ff3bfeddb596239889b584cdfcecc32","modified":1621217920000},{"_id":"themes/zhaoo/_config.yml","hash":"40eef6083c400aaa673d74fb64f4a4c5aa5b07df","modified":1625728418676},{"_id":"themes/zhaoo/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1621217920000},{"_id":"themes/zhaoo/languages/it.yml","hash":"6ae71000ed039f56572143ffe90da17b95d1a66f","modified":1621217920000},{"_id":"themes/zhaoo/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1621217920000},{"_id":"themes/zhaoo/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1621217920000},{"_id":"themes/zhaoo/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1621217920000},{"_id":"themes/zhaoo/languages/zh-CN.yml","hash":"ccbba6315760755926f5abfe1b98c225a6650581","modified":1621217920000},{"_id":"themes/zhaoo/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1621217920000},{"_id":"themes/zhaoo/layout/archive.ejs","hash":"438069ea52e71a9fd8c96ff58007ec6c91e352a7","modified":1621217920000},{"_id":"themes/zhaoo/layout/categories.ejs","hash":"e7ed9fa6a6abd02af212a8bf04fc600d008f4abd","modified":1621217920000},{"_id":"themes/zhaoo/layout/galleries.ejs","hash":"633645da14268042d77538e819ff2091cea311ca","modified":1621217920000},{"_id":"themes/zhaoo/layout/category.ejs","hash":"ca4af3683e3d3daf9282c76b0749c2b1a89399ac","modified":1621217920000},{"_id":"themes/zhaoo/layout/gallery.ejs","hash":"a379c8607ae2fdd450198e437ba8125ac1435654","modified":1621217920000},{"_id":"themes/zhaoo/layout/index.ejs","hash":"0e6282054062e1391be29bb473487a808f13828c","modified":1621217920000},{"_id":"themes/zhaoo/layout/layout.ejs","hash":"4b559e7859d72d3e962b18198cbb30ec126c84b5","modified":1621217920000},{"_id":"themes/zhaoo/layout/post.ejs","hash":"747038a8b2d33bce35b2f68d3e50bdfa28c4f36c","modified":1621217920000},{"_id":"themes/zhaoo/layout/pure.ejs","hash":"1ffc46cb8d2a976a329bd6e8292ca8114467f833","modified":1621217920000},{"_id":"themes/zhaoo/layout/tag.ejs","hash":"91a8ffd62866427d6e04884fc4fc806b8c261770","modified":1621217920000},{"_id":"themes/zhaoo/layout/tags.ejs","hash":"937f6400f7b47baa4aca025786dcd67151355cc1","modified":1621217920000},{"_id":"themes/zhaoo/scripts/caption.js","hash":"651928cc462943be90036c33262d3d25aa3e7ea0","modified":1621217920000},{"_id":"themes/zhaoo/scripts/carrier.js","hash":"10c3cde9ec17e1ced6ad871e7f5af409cbc51e6e","modified":1621217920000},{"_id":"themes/zhaoo/scripts/entry.js","hash":"c0c69f1c184c7a2e29dbaaa45a93b8948c241932","modified":1621217920000},{"_id":"themes/zhaoo/scripts/lazyload.js","hash":"ccf0c3d84fc2edf085c43e204410cf4d3c6b2baa","modified":1621217920000},{"_id":"themes/zhaoo/scripts/merge-config.js","hash":"35aac2f51a883d4d7bbe2b3b273b47f4db670952","modified":1621217920000},{"_id":"themes/zhaoo/scripts/post-image.js","hash":"82f5d9d5d9fe9d7de886d87fe20cea360d0df8d9","modified":1621217920000},{"_id":"themes/zhaoo/scripts/title.js","hash":"b62b21cd09717564ef883c901deb5451b3000dbd","modified":1621217920000},{"_id":"themes/zhaoo/source/.DS_Store","hash":"534dd1dffcc3c2ea50dc6de3c7c42e176af345a2","modified":1624044802064},{"_id":"themes/zhaoo/source/css/style.styl","hash":"91077c8a71c5827bdc5875309e3837e48a290ffd","modified":1621217920000},{"_id":"themes/zhaoo/source/js/color-mode.js","hash":"33cd307624e32035ea4544c9a6a4676ef9f70beb","modified":1621217920000},{"_id":"themes/zhaoo/source/js/script.js","hash":"6d73d31593faf80f5b778cf994f2dfea37820166","modified":1621217920000},{"_id":"themes/zhaoo/source/js/utils.js","hash":"359461693c5a1c8f9fb159c2dfb78051d0b351e1","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/head.ejs","hash":"c6fd6be80cd4e81a93f6086659c731d57fbe128b","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/script.ejs","hash":"53ab7c5c07e0de759bd207485f40aa1291b31f32","modified":1621217920000},{"_id":"themes/zhaoo/source/images/.DS_Store","hash":"dc0a4ab20a63bd2a4876eee93817abecda51f6b8","modified":1624044802061},{"_id":"themes/zhaoo/_example/source/_data/galleries.json","hash":"2b8bd59e5dbda5512b6a7458b2d3936e7ae23c5a","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/_data/local_images.json","hash":"9a5ba1814709361cd141121e803f8953ef32d7fb","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/_posts/hexo-theme-zhaoo-doc.md","hash":"6855f6440f4cdac0540afbd4900f9ab2175a0d5a","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/categories/index.md","hash":"108d69d9b70c1b66531b8de5e89d809f9fad26a6","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/about/index.md","hash":"e9cf4e1b773da337befbacca42eeffc5f76e2ad5","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/_posts/hexo-theme-zhaoo.md","hash":"b52814eaf58dca925001beb2f911bb5e377e69a9","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/galleries/index.md","hash":"83876d965236601bc871f6619f7d1f6e1357c945","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/tags/index.md","hash":"176a9920c6ed25f1f2d12940b7733da45b0966d4","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/comments/changyan.ejs","hash":"d762068b8c036ae7e83a2df9d36cd43dca46d5a4","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/comments/gitalk.ejs","hash":"8748a63003dc954df1b0a47f3d45ff191e714f3d","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/comments/valine.ejs","hash":"8f6ce8eb608f0c7c9ce482fd1f8aad7efa175f8c","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/footer.ejs","hash":"59dab61fa47add0fa174e49507659eb2e18d4de8","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/fab.ejs","hash":"c5e472b2611e8f307d6a7ef51b0ca452fed9e870","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/header.ejs","hash":"62ae2fac8dc5d6cba29ebe777b9d06e6d954a45b","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/loading.ejs","hash":"81680b42a796d4d500eda9c5d87d8e80e4b938b2","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/paginator.ejs","hash":"174723904a7a0b6088c411233266a5d35b8affe7","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/menu.ejs","hash":"c4106f65b24355895399ebae328bc8bb8f622d6a","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/navbar.ejs","hash":"d6886ca04c922bd32068ae3540a75463bdf42a99","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/components/scrollbar.ejs","hash":"dabbb31935dd1e67bf735665b35d41db8eee67c6","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/index/item.ejs","hash":"93caf17e4e412965c91d201fbfdba802ba75af00","modified":1621503309532},{"_id":"themes/zhaoo/layout/_partial/components/search.ejs","hash":"3e2f18d6b785cee85667655f1d27e9858447a3d8","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/index/post.ejs","hash":"4de44a27558cf1058a5fe2bb65fb2e27f593af76","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/index/preview.ejs","hash":"fc78346e7a00d1584fe8b0dc1b229a481c7a056a","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/plugins/daovoice.ejs","hash":"f49d99f040979c44b7abad5136786c2535a8db46","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/plugins/analytics.ejs","hash":"367d6fb80be4ce480c78bf63f2fbd2d28dedd0a3","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/plugins/seo.ejs","hash":"7aa361277db60df8195b651fdfbc95ec5f5a4daa","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/plugins/visitors.ejs","hash":"a905c55cde044e835e077ad33527950d41be4ff4","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/post/article.ejs","hash":"96c9ea2ad0d686f676f71fd27190533e04f86999","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/post/copyright.ejs","hash":"3c16a6499867c7fb773505ea2d877b3bbfdf81b0","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/post/donate.ejs","hash":"e64e1a6e537ea56888baf9be98324baa9c39b49f","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/post/comments.ejs","hash":"505e0724ccf8aa467e219e9f1fc86ca62479ec18","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/post/head.ejs","hash":"d87a7aa0552a3f60597fc67b24a14d618c140fae","modified":1621444504921},{"_id":"themes/zhaoo/layout/_partial/post/nav.ejs","hash":"9a59b60fdba3100d91c9f527bae75ac0e9cb8bd5","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/post/tag.ejs","hash":"6b94a9ccb03624e6ce7cbbc827e45bc4bfca8a4a","modified":1621217920000},{"_id":"themes/zhaoo/layout/_partial/post/toc.ejs","hash":"bbb947334a5275cee6b834b5c216ddc6699d68c7","modified":1621217920000},{"_id":"themes/zhaoo/source/images/theme/loading.gif","hash":"db91090dd60098086993953f88c37a332eea70d7","modified":1621217920000},{"_id":"themes/zhaoo/source/images/galleries/.DS_Store","hash":"268e50f3c8e6f88995c73a346e196e137c891239","modified":1624044802062},{"_id":"themes/zhaoo/source/images/icons/apple-touch-icon.png","hash":"f4bf088876d0ad5304acb3710e8aa1427fcc076d","modified":1624131008000},{"_id":"themes/zhaoo/source/images/icons/favicon-32x32.png","hash":"f61d3306343afacb16cfa319dabda04a8f53f971","modified":1624131008000},{"_id":"themes/zhaoo/source/images/icons/favicon-16x16.png","hash":"0bcb7b990d809e1533a184fd57301941eed68b72","modified":1624131008000},{"_id":"themes/zhaoo/source/images/icons/favicon-144x144.png","hash":"873afd6f75ac93c584a5d83f67485e9469a2f840","modified":1624131008000},{"_id":"themes/zhaoo/source/css/_base/reset.styl","hash":"be64ad3469e427e9b7000e763034fb94984a8eeb","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_base/color-mode.styl","hash":"c9406b019d35cf119eab5068a6fa0bfe1f700e83","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/common.styl","hash":"dc725d10a7a161654e498875d3a507ffe18dba7e","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/fab.styl","hash":"d622768341395248224d07537afeb88be6af8a9f","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_base/zui.styl","hash":"84c080d668427a3a64b8c930333c714783730414","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/footer.styl","hash":"06a0f3acc8947842889e06986025169063c72eac","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/header.styl","hash":"d9286ca8729e35d3b29ca6cb27ec2ccae562c040","modified":1621217920000},{"_id":"themes/zhaoo/source/images/icons/zhaoo-logo.png","hash":"50f9f5de4207847bba6aecc4c21d21d79f0001fb","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/menu.styl","hash":"46f897c3cb3fea7c409d179cdcca7a63dd82bcd4","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/navbar.styl","hash":"4e7fbb1c5fd25b280d88a70eec465de8ac0a4ab4","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/paginator.styl","hash":"bafe156fce40a01f2fa38bc2bbb38dc92239cabd","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/preview.styl","hash":"b5427785cfee20fcc400e55e964dab3312584726","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/scrollbar.styl","hash":"aca6a15c54cf34ddbf99075d0c13d458cfc11828","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_components/search.styl","hash":"e9f96afd0947d83deda8cf6bfb938125a203b3d3","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_variables/variables.styl","hash":"0b91826477db4d06f24686287b130482dc966f02","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/pages.styl","hash":"c4e4af922ee697c44295ab1072e350d4587b120f","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/fancybox/fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/gitalk/.DS_Store","hash":"d0c74f5f99535ad14eaec93484abb4ff8dbca277","modified":1621317807187},{"_id":"themes/zhaoo/source/lib/gitalk/gitalk.css","hash":"99f6725b386bdb0f52d15b0dd7877eaf1ad4c918","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/highlight/a11y-dark.css","hash":"9f0c935216015dd88251a6c366bdd00abfe65982","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/lazyload/lazyload.js","hash":"338318e930487b2791a7bcf53ad4601630cc41e2","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/highlight/highlight.js","hash":"a52ef27b8a21963326b05ef06f6ee104b8b94e7e","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/pjax/pjax.js","hash":"0ced78e5c97127948f5bfbfbb80c4fce5c0f671e","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/qrcode/qrcode.js","hash":"f424bd339870510d1160d1c5da5d698aedbb452e","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/galleries/colorful/index.md","hash":"d825ba0a41ff7ef253356a14bac6bfaf02135435","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/galleries/深圳日记/index.md","hash":"ed9640b8192a9a9ce4771a33a8c2671d408fbb80","modified":1621217920000},{"_id":"themes/zhaoo/_example/source/galleries/记事/index.md","hash":"487e5b5267f2a83fd35ce179a57e3d54e8e2b870","modified":1621217920000},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/.DS_Store","hash":"76db65d8eb88e9204c55f7c1c6ad4a5ca5e5168e","modified":1624044098978},{"_id":"themes/zhaoo/source/css/_pages/_category/categories.styl","hash":"66f983e15ebca02d95342d00234981fa6c04825d","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/_archive/archive.styl","hash":"9a680e104a6418997e093303bb93f9097553d049","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/_gallery/galleries.styl","hash":"9b66eab92e001637242aa9057edd07731ed94a3d","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/_gallery/gallery.styl","hash":"4f1975a81247e226d63c50b9500278d969e6257a","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/_index/index.styl","hash":"985026645db9065f5b76192faeb2abafe8098d42","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/_post/toc.styl","hash":"fc0c97ec7d9e98b79493cdd26452f4bb5defab08","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/_post/article.styl","hash":"5108130c6f413959e8b82c3c84d4c62688e338f5","modified":1621217920000},{"_id":"themes/zhaoo/source/css/_pages/_tag/tags.styl","hash":"0ca5f9f71dab35247cf3b1318b2995a7e9058426","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/fancybox/fancybox.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/jquery/jquery.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1621217920000},{"_id":"themes/zhaoo/source/images/theme/cloud.png","hash":"fdf44a91026ad999dca2f0a42213aabebd783c98","modified":1621217920000},{"_id":"themes/zhaoo/source/images/theme/post-image.jpg","hash":"7fb1947508a411177829cedac8d5922671cac2b0","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/gitalk/gitalk.js","hash":"266500948447c95aeea95ef6760f192afc96fd5e","modified":1621217920000},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_0.jpeg","hash":"3c1fc00f3ae489fe877c4cf46a0735658dc5c5c2","modified":1611552999948},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_2.JPG","hash":"106c1adc6a8272f1c78c14773a692ce5d848c352","modified":1608787830282},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_7.PNG","hash":"a28ca7052cc717f326612cd54038d38d139fca78","modified":1611672668751},{"_id":"themes/zhaoo/source/images/theme/panda.jpg","hash":"8010e2d52d9be56683ad8c9c8c71b2166730d4ef","modified":1615867952000},{"_id":"themes/zhaoo/screenshots/menu.png","hash":"0f4220734a52953636a5273d64a03c8b01ec6098","modified":1621217920000},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_12.JPG","hash":"5be939c61390063ee10278d7bfb40415ec97af1c","modified":1612197478964},{"_id":"themes/zhaoo/source/images/theme/welcome-image.jpg","hash":"79e9c9e83a6d8a0bb627e645b770dd2628cd546e","modified":1621217920000},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_1.JPG","hash":"f7f613ee033a9640e6cfdeaf546cb577810c2bbe","modified":1605516913355},{"_id":"themes/zhaoo/screenshots/galleries.png","hash":"8ba5a26c7932d5ef456cc799bbc00c5f468e54cc","modified":1621217920000},{"_id":"themes/zhaoo/source/lib/daovoice/daovoice.js","hash":"180375e6fc5a5a71810b5e83109c0ce1533bbc5a","modified":1621217920000},{"_id":"themes/zhaoo/screenshots/article.png","hash":"74706d28c479a20f77c1bd4454879cabf8784ca6","modified":1621217920000},{"_id":"themes/zhaoo/screenshots/index.png","hash":"a95df16106c813b92f14071bac3d38bc53a1bc00","modified":1621217920000},{"_id":"themes/zhaoo/screenshots/preview.png","hash":"2b4271a275b9ff8318d00ab04504a109ec931fe7","modified":1621217920000},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_8.JPG","hash":"a4a05727d34ed5e12fdb46ab2ac333ae60d018f8","modified":1611672668816},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_3.jpeg","hash":"5fb79186bcbcd4ae2235bc15eb49944a8d15f802","modified":1624043689296},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_14.jpeg","hash":"0eefe630a2077990ab05d38f45098b596839eb2d","modified":1624043776862},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_13.jpeg","hash":"1dbbc05c4923fa8e40d061e4cb1dd16707c3755d","modified":1624043770939},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_10.jpeg","hash":"71d575d77361cb73af3969ad5c1189e16fb9a0e6","modified":1624043762101},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_11.jpeg","hash":"7102fd6014295b09604f76b1e51740b726476fee","modified":1624043764280},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_9.jpeg","hash":"87033441c4005c1a611c62174a2f1d75b90cb805","modified":1624043754693},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_4.jpeg","hash":"7933ce96ace2b00209a701845d0e3916f8afc6ab","modified":1624043701945},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_5.jpeg","hash":"2d2f1b9c5d76b8bbb5ccd787b4d9fc778ffcc6a4","modified":1624043704844},{"_id":"themes/zhaoo/source/images/galleries/shenzhen/IMG_6.jpeg","hash":"c29d268c77d1e90438d19abcbae16d6463e9666c","modified":1624043706850},{"_id":"public/search.xml","hash":"9ed0747a48fa0b516affc52b45de264ef920ec98","modified":1635182075203},{"_id":"public/about/index.html","hash":"36ac0920b0a94f8426ed4cedfc3fe1c2e97a1f6a","modified":1635182075203},{"_id":"public/galleries/index.html","hash":"ab9f04124a352d33bbc3dd9006ac69a1ab8da47f","modified":1635182075203},{"_id":"public/categories/index.html","hash":"030d646fda29187a0c4a212b158c6c5291dfd233","modified":1635182075203},{"_id":"public/tags/index.html","hash":"1eb623507220ff0e995e6c64be20892bac157d90","modified":1635182075203},{"_id":"public/galleries/深圳日记/index.html","hash":"4d434441936867508ed7bf4d937c910a464392f9","modified":1635182075203},{"_id":"public/2021/05/19/my_first_blog/index.html","hash":"6253eabc1869e6dddf0a92efc839b3c7746c3a16","modified":1635182075203},{"_id":"public/archives/2021/index.html","hash":"0ebf62ee874c76e59b9a04f9fe430eec708e3f0e","modified":1635182075203},{"_id":"public/archives/index.html","hash":"0ef7fb85dc41d17bb26c014f61b797fc10204014","modified":1635182075203},{"_id":"public/archives/2021/05/index.html","hash":"12788fb6ce1d9fecd6459582d5888b34f0f5a5dc","modified":1635182075203},{"_id":"public/archives/2021/06/index.html","hash":"9f119c498dba790e1b992f77b55cc6702f5049d4","modified":1635182075203},{"_id":"public/archives/2021/10/index.html","hash":"186c8b433f4691a87412c179fc9b26a48604748f","modified":1635182075203},{"_id":"public/index.html","hash":"c1580371989e15681df37942f4fe2ab8da91c3be","modified":1635182075203},{"_id":"public/categories/博客/index.html","hash":"2ba5cb7d7e19896a609474dbe156212163c60f1f","modified":1635182075203},{"_id":"public/categories/实践指南/index.html","hash":"1f7ab1885cd622c6af2c22e2969c09f43c7a4b3f","modified":1635182075203},{"_id":"public/categories/项目详述/index.html","hash":"e1f77110b8469477bbe2bcc958a7cc06fb860cf6","modified":1635182075203},{"_id":"public/tags/Node/index.html","hash":"971ff7b6e03a0f770a826cbc970a1a9670d71639","modified":1635182075203},{"_id":"public/tags/ServerlessDevs/index.html","hash":"5bef16cdc169fe12ca14789c0c2bb74ec68c1b84","modified":1635182075203},{"_id":"public/tags/Journal/index.html","hash":"b1c68012dbd90cb6d47d97bb5cc8106377167f07","modified":1635182075203},{"_id":"public/2021/10/23/node based frondend cicd/index.html","hash":"10213562bd5b98cd1b8e1135d11d78537dbabe6a","modified":1635182075203},{"_id":"public/2021/10/23/PDF2JPG-Custom Runtime dependent installation practices/index.html","hash":"3624b163ffdc31a4019f818285044458a07c6350","modified":1635182075203},{"_id":"public/2021/06/16/webmonitor/index.html","hash":"c0364a7020d69705c92b58a99de0351e0432eec2","modified":1635182075203},{"_id":"public/images/theme/loading.gif","hash":"db91090dd60098086993953f88c37a332eea70d7","modified":1635182075203},{"_id":"public/images/icons/favicon-144x144.png","hash":"873afd6f75ac93c584a5d83f67485e9469a2f840","modified":1635182075203},{"_id":"public/images/icons/favicon-16x16.png","hash":"0bcb7b990d809e1533a184fd57301941eed68b72","modified":1635182075203},{"_id":"public/images/icons/favicon-32x32.png","hash":"f61d3306343afacb16cfa319dabda04a8f53f971","modified":1635182075203},{"_id":"public/images/icons/zhaoo-logo.png","hash":"50f9f5de4207847bba6aecc4c21d21d79f0001fb","modified":1635182075203},{"_id":"public/images/icons/apple-touch-icon.png","hash":"f4bf088876d0ad5304acb3710e8aa1427fcc076d","modified":1635182075203},{"_id":"public/js/color-mode.js","hash":"33cd307624e32035ea4544c9a6a4676ef9f70beb","modified":1635182075203},{"_id":"public/js/utils.js","hash":"359461693c5a1c8f9fb159c2dfb78051d0b351e1","modified":1635182075203},{"_id":"public/lib/fancybox/fancybox.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1635182075203},{"_id":"public/lib/highlight/a11y-dark.css","hash":"9f0c935216015dd88251a6c366bdd00abfe65982","modified":1635182075203},{"_id":"public/lib/lazyload/lazyload.js","hash":"338318e930487b2791a7bcf53ad4601630cc41e2","modified":1635182075203},{"_id":"public/lib/pjax/pjax.js","hash":"0ced78e5c97127948f5bfbfbb80c4fce5c0f671e","modified":1635182075203},{"_id":"public/lib/qrcode/qrcode.js","hash":"f424bd339870510d1160d1c5da5d698aedbb452e","modified":1635182075203},{"_id":"public/js/script.js","hash":"6d73d31593faf80f5b778cf994f2dfea37820166","modified":1635182075203},{"_id":"public/css/style.css","hash":"7d029efebb42ac282d1f03fc8314723e8d347090","modified":1635182075203},{"_id":"public/lib/gitalk/gitalk.css","hash":"99f6725b386bdb0f52d15b0dd7877eaf1ad4c918","modified":1635182075203},{"_id":"public/lib/fancybox/fancybox.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1635182075203},{"_id":"public/lib/gitalk/gitalk.js","hash":"266500948447c95aeea95ef6760f192afc96fd5e","modified":1635182075203},{"_id":"public/lib/highlight/highlight.js","hash":"a52ef27b8a21963326b05ef06f6ee104b8b94e7e","modified":1635182075203},{"_id":"public/lib/jquery/jquery.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1635182075203},{"_id":"public/images/theme/post-image.jpg","hash":"7fb1947508a411177829cedac8d5922671cac2b0","modified":1635182075203},{"_id":"public/images/theme/cloud.png","hash":"fdf44a91026ad999dca2f0a42213aabebd783c98","modified":1635182075203},{"_id":"public/images/galleries/shenzhen/IMG_0.jpeg","hash":"3c1fc00f3ae489fe877c4cf46a0735658dc5c5c2","modified":1635182075203},{"_id":"public/images/galleries/shenzhen/IMG_2.JPG","hash":"106c1adc6a8272f1c78c14773a692ce5d848c352","modified":1635182075203},{"_id":"public/images/galleries/shenzhen/IMG_7.PNG","hash":"a28ca7052cc717f326612cd54038d38d139fca78","modified":1635182075203},{"_id":"public/lib/daovoice/daovoice.js","hash":"180375e6fc5a5a71810b5e83109c0ce1533bbc5a","modified":1635182075203},{"_id":"public/images/theme/panda.jpg","hash":"8010e2d52d9be56683ad8c9c8c71b2166730d4ef","modified":1635182075203},{"_id":"public/images/galleries/shenzhen/IMG_12.JPG","hash":"5be939c61390063ee10278d7bfb40415ec97af1c","modified":1635182075203},{"_id":"public/images/theme/welcome-image.jpg","hash":"79e9c9e83a6d8a0bb627e645b770dd2628cd546e","modified":1635182075203},{"_id":"public/images/galleries/shenzhen/IMG_1.JPG","hash":"f7f613ee033a9640e6cfdeaf546cb577810c2bbe","modified":1635182075203},{"_id":"public/images/galleries/shenzhen/IMG_8.JPG","hash":"a4a05727d34ed5e12fdb46ab2ac333ae60d018f8","modified":1635182075203},{"_id":"public/images/galleries/shenzhen/IMG_3.jpeg","hash":"5fb79186bcbcd4ae2235bc15eb49944a8d15f802","modified":1635182075203},{"_id":"public/images/galleries/shenzhen/IMG_14.jpeg","hash":"0eefe630a2077990ab05d38f45098b596839eb2d","modified":1635182075203},{"_id":"public/images/galleries/shenzhen/IMG_13.jpeg","hash":"1dbbc05c4923fa8e40d061e4cb1dd16707c3755d","modified":1635182075203},{"_id":"public/images/galleries/shenzhen/IMG_10.jpeg","hash":"71d575d77361cb73af3969ad5c1189e16fb9a0e6","modified":1635182075203},{"_id":"public/images/galleries/shenzhen/IMG_11.jpeg","hash":"7102fd6014295b09604f76b1e51740b726476fee","modified":1635182075203},{"_id":"public/images/galleries/shenzhen/IMG_9.jpeg","hash":"87033441c4005c1a611c62174a2f1d75b90cb805","modified":1635182075203},{"_id":"public/images/galleries/shenzhen/IMG_5.jpeg","hash":"2d2f1b9c5d76b8bbb5ccd787b4d9fc778ffcc6a4","modified":1635182075203},{"_id":"public/images/galleries/shenzhen/IMG_4.jpeg","hash":"7933ce96ace2b00209a701845d0e3916f8afc6ab","modified":1635182075203},{"_id":"public/images/galleries/shenzhen/IMG_6.jpeg","hash":"c29d268c77d1e90438d19abcbae16d6463e9666c","modified":1635182075203},{"_id":"source/_posts/Limitation and performance Test of docker Container.md","hash":"67b12fec2ece027a6e0757b974add160d091b82d","modified":1635181965684},{"_id":"public/tags/Docker/index.html","hash":"1b714a44dfd5faaff9c7cc1573a6beca5ba50d30","modified":1635182075203},{"_id":"public/tags/Docker-Engine-API/index.html","hash":"7a3f98b20f90429085d997c5948af247dd06aff8","modified":1635182075203},{"_id":"public/2021/10/25/Limitation and performance Test of docker Container/index.html","hash":"e0d284fcb40f24c4c49472a0666a4b04ad2d4324","modified":1635182075203}],"Category":[{"name":"博客","_id":"ckv2ro26d00042r4admrl7yt1"},{"name":"实践指南","_id":"ckv2ro26i000b2r4a9g52dce8"},{"name":"项目详述","_id":"ckv2ro26k000g2r4a40npf4o7"}],"Data":[{"_id":"galleries","data":[{"name":"深圳日记","cover":"/images/galleries/shenzhen/IMG_0.jpeg","description":"不要沉沦","photos":["/images/galleries/shenzhen/IMG_0.jpeg","/images/galleries/shenzhen/IMG_1.JPG","/images/galleries/shenzhen/IMG_2.JPG","/images/galleries/shenzhen/IMG_3.jpeg","/images/galleries/shenzhen/IMG_4.jpeg","/images/galleries/shenzhen/IMG_5.jpeg","/images/galleries/shenzhen/IMG_6.jpeg","/images/galleries/shenzhen/IMG_7.PNG","/images/galleries/shenzhen/IMG_8.JPG","/images/galleries/shenzhen/IMG_9.jpeg","/images/galleries/shenzhen/IMG_10.jpeg","/images/galleries/shenzhen/IMG_11.jpeg","/images/galleries/shenzhen/IMG_12.JPG","/images/galleries/shenzhen/IMG_13.jpeg","/images/galleries/shenzhen/IMG_14.jpeg"]}]}],"Page":[{"title":"关于","type":"about","layout":"about","toc":false,"copyright":false,"image":"https://tva1.sinaimg.cn/large/008i3skNgy1gqmuc4z63rj31hc0u0hdv.jpg","_content":"\n## Me\n\n**JasonLamv-t**\n啥都不懂的程序猿，毕业于松山湖帝国理工\n\n## Work\n\n**伊山万瑞科技  · 深圳**\n产品经理「兼职」 [2019.5-2021-2]「兼职」\n\n## Project\n\n[adnmb-premade](https://github.com/JasonLamv-t/adnmb-premade)\n一个匿名开黑系统  \n[WebMonitor-CLI](https://github.com/JasonLamv-t/webmonitor)\n一个命令行网页更新监控工具","source":"about/index.md","raw":"---\ntitle: 关于\ntype: \"about\"\nlayout: \"about\"\ntoc: false\ncopyright: false\nimage: https://tva1.sinaimg.cn/large/008i3skNgy1gqmuc4z63rj31hc0u0hdv.jpg\n---\n\n## Me\n\n**JasonLamv-t**\n啥都不懂的程序猿，毕业于松山湖帝国理工\n\n## Work\n\n**伊山万瑞科技  · 深圳**\n产品经理「兼职」 [2019.5-2021-2]「兼职」\n\n## Project\n\n[adnmb-premade](https://github.com/JasonLamv-t/adnmb-premade)\n一个匿名开黑系统  \n[WebMonitor-CLI](https://github.com/JasonLamv-t/webmonitor)\n一个命令行网页更新监控工具","date":"2021-10-22T18:12:41.061Z","updated":"2021-10-22T18:12:41.061Z","path":"about/index.html","comments":1,"_id":"ckv2ro26600002r4aa3ez9rul","content":"<h2 id=\"Me\"><a href=\"#Me\" class=\"headerlink\" title=\"Me\"></a>Me</h2><p><strong>JasonLamv-t</strong><br>&#x5565;&#x90FD;&#x4E0D;&#x61C2;&#x7684;&#x7A0B;&#x5E8F;&#x733F;&#xFF0C;&#x6BD5;&#x4E1A;&#x4E8E;&#x677E;&#x5C71;&#x6E56;&#x5E1D;&#x56FD;&#x7406;&#x5DE5;</p>\n<h2 id=\"Work\"><a href=\"#Work\" class=\"headerlink\" title=\"Work\"></a>Work</h2><p><strong>&#x4F0A;&#x5C71;&#x4E07;&#x745E;&#x79D1;&#x6280;  &#xB7; &#x6DF1;&#x5733;</strong><br>&#x4EA7;&#x54C1;&#x7ECF;&#x7406;&#x300C;&#x517C;&#x804C;&#x300D; [2019.5-2021-2]&#x300C;&#x517C;&#x804C;&#x300D;</p>\n<h2 id=\"Project\"><a href=\"#Project\" class=\"headerlink\" title=\"Project\"></a>Project</h2><p><a href=\"https://github.com/JasonLamv-t/adnmb-premade\">adnmb-premade</a><br>&#x4E00;&#x4E2A;&#x533F;&#x540D;&#x5F00;&#x9ED1;&#x7CFB;&#x7EDF;<br><a href=\"https://github.com/JasonLamv-t/webmonitor\">WebMonitor-CLI</a><br>&#x4E00;&#x4E2A;&#x547D;&#x4EE4;&#x884C;&#x7F51;&#x9875;&#x66F4;&#x65B0;&#x76D1;&#x63A7;&#x5DE5;&#x5177;</p>\n","site":{"data":{"galleries":[{"name":"深圳日记","cover":"/images/galleries/shenzhen/IMG_0.jpeg","description":"不要沉沦","photos":["/images/galleries/shenzhen/IMG_0.jpeg","/images/galleries/shenzhen/IMG_1.JPG","/images/galleries/shenzhen/IMG_2.JPG","/images/galleries/shenzhen/IMG_3.jpeg","/images/galleries/shenzhen/IMG_4.jpeg","/images/galleries/shenzhen/IMG_5.jpeg","/images/galleries/shenzhen/IMG_6.jpeg","/images/galleries/shenzhen/IMG_7.PNG","/images/galleries/shenzhen/IMG_8.JPG","/images/galleries/shenzhen/IMG_9.jpeg","/images/galleries/shenzhen/IMG_10.jpeg","/images/galleries/shenzhen/IMG_11.jpeg","/images/galleries/shenzhen/IMG_12.JPG","/images/galleries/shenzhen/IMG_13.jpeg","/images/galleries/shenzhen/IMG_14.jpeg"]}]}},"excerpt":"","more":"<h2 id=\"Me\"><a href=\"#Me\" class=\"headerlink\" title=\"Me\"></a>Me</h2><p><strong>JasonLamv-t</strong><br>啥都不懂的程序猿，毕业于松山湖帝国理工</p>\n<h2 id=\"Work\"><a href=\"#Work\" class=\"headerlink\" title=\"Work\"></a>Work</h2><p><strong>伊山万瑞科技  · 深圳</strong><br>产品经理「兼职」 [2019.5-2021-2]「兼职」</p>\n<h2 id=\"Project\"><a href=\"#Project\" class=\"headerlink\" title=\"Project\"></a>Project</h2><p><a href=\"https://github.com/JasonLamv-t/adnmb-premade\">adnmb-premade</a><br>一个匿名开黑系统<br><a href=\"https://github.com/JasonLamv-t/webmonitor\">WebMonitor-CLI</a><br>一个命令行网页更新监控工具</p>\n"},{"title":"相册","layout":"galleries","_content":"","source":"galleries/index.md","raw":"---\ntitle: 相册\nlayout: 'galleries'\n---\n","date":"2021-05-18T08:13:58.881Z","updated":"2021-05-18T08:13:58.881Z","path":"galleries/index.html","comments":1,"_id":"ckv2ro26b00022r4a6qewcwoj","content":"","site":{"data":{"galleries":[{"name":"深圳日记","cover":"/images/galleries/shenzhen/IMG_0.jpeg","description":"不要沉沦","photos":["/images/galleries/shenzhen/IMG_0.jpeg","/images/galleries/shenzhen/IMG_1.JPG","/images/galleries/shenzhen/IMG_2.JPG","/images/galleries/shenzhen/IMG_3.jpeg","/images/galleries/shenzhen/IMG_4.jpeg","/images/galleries/shenzhen/IMG_5.jpeg","/images/galleries/shenzhen/IMG_6.jpeg","/images/galleries/shenzhen/IMG_7.PNG","/images/galleries/shenzhen/IMG_8.JPG","/images/galleries/shenzhen/IMG_9.jpeg","/images/galleries/shenzhen/IMG_10.jpeg","/images/galleries/shenzhen/IMG_11.jpeg","/images/galleries/shenzhen/IMG_12.JPG","/images/galleries/shenzhen/IMG_13.jpeg","/images/galleries/shenzhen/IMG_14.jpeg"]}]}},"excerpt":"","more":""},{"title":"categories","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ntype: 'categories'\nlayout: 'categories'\n---\n","date":"2021-05-18T08:16:22.735Z","updated":"2021-05-18T08:16:22.735Z","path":"categories/index.html","comments":1,"_id":"ckv2ro26f00052r4a1h08houm","content":"","site":{"data":{"galleries":[{"name":"深圳日记","cover":"/images/galleries/shenzhen/IMG_0.jpeg","description":"不要沉沦","photos":["/images/galleries/shenzhen/IMG_0.jpeg","/images/galleries/shenzhen/IMG_1.JPG","/images/galleries/shenzhen/IMG_2.JPG","/images/galleries/shenzhen/IMG_3.jpeg","/images/galleries/shenzhen/IMG_4.jpeg","/images/galleries/shenzhen/IMG_5.jpeg","/images/galleries/shenzhen/IMG_6.jpeg","/images/galleries/shenzhen/IMG_7.PNG","/images/galleries/shenzhen/IMG_8.JPG","/images/galleries/shenzhen/IMG_9.jpeg","/images/galleries/shenzhen/IMG_10.jpeg","/images/galleries/shenzhen/IMG_11.jpeg","/images/galleries/shenzhen/IMG_12.JPG","/images/galleries/shenzhen/IMG_13.jpeg","/images/galleries/shenzhen/IMG_14.jpeg"]}]}},"excerpt":"","more":""},{"title":"标签","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ntype: 'tags'\nlayout: 'tags'\n---\n","date":"2021-05-18T08:16:04.489Z","updated":"2021-05-18T08:16:04.489Z","path":"tags/index.html","comments":1,"_id":"ckv2ro26g00082r4a0y6k9bx6","content":"","site":{"data":{"galleries":[{"name":"深圳日记","cover":"/images/galleries/shenzhen/IMG_0.jpeg","description":"不要沉沦","photos":["/images/galleries/shenzhen/IMG_0.jpeg","/images/galleries/shenzhen/IMG_1.JPG","/images/galleries/shenzhen/IMG_2.JPG","/images/galleries/shenzhen/IMG_3.jpeg","/images/galleries/shenzhen/IMG_4.jpeg","/images/galleries/shenzhen/IMG_5.jpeg","/images/galleries/shenzhen/IMG_6.jpeg","/images/galleries/shenzhen/IMG_7.PNG","/images/galleries/shenzhen/IMG_8.JPG","/images/galleries/shenzhen/IMG_9.jpeg","/images/galleries/shenzhen/IMG_10.jpeg","/images/galleries/shenzhen/IMG_11.jpeg","/images/galleries/shenzhen/IMG_12.JPG","/images/galleries/shenzhen/IMG_13.jpeg","/images/galleries/shenzhen/IMG_14.jpeg"]}]}},"excerpt":"","more":""},{"title":"深圳日记","layout":"gallery","_content":"","source":"galleries/深圳日记/index.md","raw":"---\ntitle: 深圳日记\nlayout: \"gallery\"\n---","date":"2021-05-18T08:07:35.660Z","updated":"2021-05-17T02:18:40.000Z","path":"galleries/深圳日记/index.html","comments":1,"_id":"ckv2ro26i000a2r4a787y13eu","content":"","site":{"data":{"galleries":[{"name":"深圳日记","cover":"/images/galleries/shenzhen/IMG_0.jpeg","description":"不要沉沦","photos":["/images/galleries/shenzhen/IMG_0.jpeg","/images/galleries/shenzhen/IMG_1.JPG","/images/galleries/shenzhen/IMG_2.JPG","/images/galleries/shenzhen/IMG_3.jpeg","/images/galleries/shenzhen/IMG_4.jpeg","/images/galleries/shenzhen/IMG_5.jpeg","/images/galleries/shenzhen/IMG_6.jpeg","/images/galleries/shenzhen/IMG_7.PNG","/images/galleries/shenzhen/IMG_8.JPG","/images/galleries/shenzhen/IMG_9.jpeg","/images/galleries/shenzhen/IMG_10.jpeg","/images/galleries/shenzhen/IMG_11.jpeg","/images/galleries/shenzhen/IMG_12.JPG","/images/galleries/shenzhen/IMG_13.jpeg","/images/galleries/shenzhen/IMG_14.jpeg"]}]}},"excerpt":"","more":""}],"Post":[{"title":"我的第一篇博客","date":"2021-05-19T03:35:49.000Z","copyright":false,"image":"https://tva1.sinaimg.cn/large/008i3skNgy1gqmuc4z63rj31hc0u0hdv.jpg","_content":"\n**其实也没什么好写的，只是到了大学生活即将结束的时候，才想起来似乎有些值得纪念的东西没有记下来**\n人生很长，也很短，我相信人，生而不凡\n","source":"_posts/my_first_blog.md","raw":"---\ntitle: 我的第一篇博客\ndate: 2021-05-19 11:35:49\ncategories: \n- 博客 \ncopyright: false\nimage: https://tva1.sinaimg.cn/large/008i3skNgy1gqmuc4z63rj31hc0u0hdv.jpg\n---\n\n**其实也没什么好写的，只是到了大学生活即将结束的时候，才想起来似乎有些值得纪念的东西没有记下来**\n人生很长，也很短，我相信人，生而不凡\n","slug":"my_first_blog","published":1,"updated":"2021-10-22T18:12:41.060Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv2ro26800012r4a9lzg0ypx","content":"<p><strong>&#x5176;&#x5B9E;&#x4E5F;&#x6CA1;&#x4EC0;&#x4E48;&#x597D;&#x5199;&#x7684;&#xFF0C;&#x53EA;&#x662F;&#x5230;&#x4E86;&#x5927;&#x5B66;&#x751F;&#x6D3B;&#x5373;&#x5C06;&#x7ED3;&#x675F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x624D;&#x60F3;&#x8D77;&#x6765;&#x4F3C;&#x4E4E;&#x6709;&#x4E9B;&#x503C;&#x5F97;&#x7EAA;&#x5FF5;&#x7684;&#x4E1C;&#x897F;&#x6CA1;&#x6709;&#x8BB0;&#x4E0B;&#x6765;</strong><br>&#x4EBA;&#x751F;&#x5F88;&#x957F;&#xFF0C;&#x4E5F;&#x5F88;&#x77ED;&#xFF0C;&#x6211;&#x76F8;&#x4FE1;&#x4EBA;&#xFF0C;&#x751F;&#x800C;&#x4E0D;&#x51E1;</p>\n","site":{"data":{"galleries":[{"name":"深圳日记","cover":"/images/galleries/shenzhen/IMG_0.jpeg","description":"不要沉沦","photos":["/images/galleries/shenzhen/IMG_0.jpeg","/images/galleries/shenzhen/IMG_1.JPG","/images/galleries/shenzhen/IMG_2.JPG","/images/galleries/shenzhen/IMG_3.jpeg","/images/galleries/shenzhen/IMG_4.jpeg","/images/galleries/shenzhen/IMG_5.jpeg","/images/galleries/shenzhen/IMG_6.jpeg","/images/galleries/shenzhen/IMG_7.PNG","/images/galleries/shenzhen/IMG_8.JPG","/images/galleries/shenzhen/IMG_9.jpeg","/images/galleries/shenzhen/IMG_10.jpeg","/images/galleries/shenzhen/IMG_11.jpeg","/images/galleries/shenzhen/IMG_12.JPG","/images/galleries/shenzhen/IMG_13.jpeg","/images/galleries/shenzhen/IMG_14.jpeg"]}]}},"excerpt":"","more":"<p><strong>其实也没什么好写的，只是到了大学生活即将结束的时候，才想起来似乎有些值得纪念的东西没有记下来</strong><br>人生很长，也很短，我相信人，生而不凡</p>\n"},{"title":"Serverless-Devs实践-基于 GhostScript 的 PDF 转 JPG","date":"2021-10-22T16:00:00.000Z","keywords":"Serverless, Serverless-Devs, aliyun, PDF2IMG","_content":"\n# Serverless-Devs实践-基于 GhostScript 的 PDF 转 JPG\n\n该项目是基于GhostScript的PDF转JPG工具，借助[Serverless-Devs](https://github.com/Serverless-Devs/Serverless-Devs/blob/master/readme_zh.md)工具进行依赖安装并部署到阿里云函数计算，是一个serverless的简单示例。\n\n## 开始之前\n\n### Serverless-Devs\n\n如果您的开发环境没有Serverless-Devs，如果您的开发环境具备[npm](https://www.npmjs.com/)，可执行以下命令进行安装：\n\n```bash\nnpm install  @serverless-devs/s -g\n```\n\n或者 通过 [yarn](https://yarnpkg.com/) 进行安装\n\n```bash\nyarn global add  @serverless-devs/s\n```\n\n更多内容请参考[Serverless Devs Install-tutorial](https://github.com/devsapp/fc/blob/main/docs/Getting-started/Install-tutorial.md)。\n\n### Docker\n\n本文档涉及本地调试，因此需要开发环境具有[Docker](https://www.docker.com/)，您可根据您开发平台的不同安装不同版本，可参考[Serverless Devs Install-tutorial](https://github.com/devsapp/fc/blob/main/docs/Getting-started/Install-tutorial.md)可选部分。\n\n### Aliyun RAM账号\n\n前往[RAM 访问控制](https://ram.console.aliyun.com/users)创建一个子用户，赋予其管理函数计算(FC)服务权限「AliyunFCFullAccess」并创建AccessKey。\n\n### Serverless-Devs密钥配置\n\n参考[配置阿里云密钥](https://github.com/devsapp/fc/blob/main/docs/Getting-started/Setting-up-credentials.md)及[S config](http://www.serverless-devs.com/docs/command#config指令)，将上一步创建的子用户AccessKey配置到S中。\n\n## 开发\n\n### 初始化项目\n\n执行`s init`来创建项目，我们选择*Alibaba Cloud Serverless ➡️ HTTP Function-Node.js 12 Example ➡️ 输入文件夹名称*。\n\n### 自定义Runtime\n\n创建Funfile文件：\n\n```dockerfile\nRUNTIME nodejs12\t# 指定基础运行环境\nRUN fun-install apt-get install ghostscript\n```\n\n更多关于Funfile信息请参考[Funfile 功能介绍](https://developer.aliyun.com/article/719100)及[Custom Runtime-函数计算](https://help.aliyun.com/document_detail/132044.html?spm=a2c4g.11186623.6.601.2cd369ac18G1R7)。\n\n### 修改index.js\n\n```javascript\n// index.js\nconst { exec } = require('child_process')\n\nexports.handler = (event, context, callback) => {\n  const cmd = 'gs -sDEVICE=jpeg -dTextAlphaBits=4 -r144 -o /tmp/test.jpg test.pdf'\n  exec(cmd, (err, stdout, stderr) => {\n    if (err) {\n      console.log(\"stdout =================== START\")\n      console.log(stdout)\n      console.log(\"stdout =================== END\")\n      console.log(\"stderr =================== START\")\n      console.log(stderr)\n      console.log(\"stderr =================== END\")\n      callback(err, \"convert fail.\\n\")\n    } else {\n      console.log(\"stdout =================== START\")\n      console.log(stdout)\n      console.log(\"stdout =================== END\")\n      callback(null, 'convert success.\\nJPG file save to /tmp/test.jpg\\n')\n    }\n  })\n}\n```\n\n### 修改s.yaml\n\n在function字段下添加环境变量\n\n```yaml\n# s.yaml\n...\nservices:\n  ghostscript_example: #  服务名称\n    component: devsapp/fc  # 组件名称\n    \n    props: #  组件的属性值\n      service:\n        name: ghostscript\n      ...\n      function:\n        ...\n        name: pdf2jpg-test\n        environmentVariables:\n          GS_LIB: >-\n        .s/root/usr/share/ghostscript/9.26/Resource/Init:.s/root/usr/share/ghostscript/9.26/lib:.s/root/usr/share/ghostscript/9.26/Resource/Font:.s/root/usr/share/ghostscript/fonts:.s/root/var/lib/ghostscript/fonts:.s/root/usr/share/ghostscript/fonts:.s/root/usr/share/fonts\n```\n\n### 添加测试文件\n\n在项目目录下添加一个名为「test.pdf」的测试文件。\n\n### 构建Runtime并安装依赖\n\n执行`s build`，S检测到项目中存在「Funfile」时将会以Custom Container模式构建并安装依赖，得到`Build artifact successfully`时说明构建成功。\n\n```shell\n$ s build\n[2021-07-27T08:31:31.428] [INFO ] [S-CLI] - Start ...\n[2021-07-27T08:31:33.142] [INFO ] [FC-BUILD] - Build artifact start...\nFunfile exist, Fun will use container to build forcely\nStep 1/2 : FROM registry.cn-beijing.aliyuncs.com/aliyunfc/runtime-nodejs12:build-1.9.17 as nodejs12\n ---> 231f0fd07c07\nStep 2/2 : RUN fun-install apt-get install ghostscript\n ---> Using cache\n ---> f1fd050510fe\nsha256:f1fd050510fedf0cbcb673d327c84a153d824357f77fe0f0f76e730b4bbe0a3c\nSuccessfully built f1fd050510fe\nSuccessfully tagged fun-cache-4c2c48e0-2395-45c8-a29d-2c9668b985eb:latest\ncopying function artifact to /Users/linjiaxiang/ServerlessDevs/ghostscript_example/.s/build/artifacts/ghostscript/pdf2jpg-test\n[2021-07-27T08:31:37.020] [INFO ] [FC-BUILD] - Build function using image: fun-cache-4c2c48e0-2395-45c8-a29d-2c9668b985eb\n[2021-07-27T08:31:37.033] [INFO ] [FC-BUILD] - skip pulling image fun-cache-4c2c48e0-2395-45c8-a29d-2c9668b985eb...\n[2021-07-27T08:31:38.245] [INFO ] [FC-BUILD] - Build artifact successfully.\n\nTips for next step\n======================\n* Invoke Event Function: s local invoke\n* Invoke Http Function: s local start\n* Deploy Resources: s deploy\nEnd of method: build\n```\n\n### 本地调用\n\n```shell\n$ s local invoke\nFC Invoke Start RequestId: f6d78602-c84d-41f5-a8be-345825effcd7\nload code for handler:index.handler\n2021-07-27T00:33:12.019Z f6d78602-c84d-41f5-a8be-345825effcd7 [verbose] stdout =================== START\n2021-07-27T00:33:12.019Z f6d78602-c84d-41f5-a8be-345825effcd7 [verbose] GPL Ghostscript 9.26 (2018-11-20)\nCopyright (C) 2018 Artifex Software, Inc.  All rights reserved.\nThis software comes with NO WARRANTY: see the file PUBLIC for details.\nWarning: the map file cidfmap was not found.\nProcessing pages 1 through 1.\nPage 1\n\n2021-07-27T00:33:12.020Z f6d78602-c84d-41f5-a8be-345825effcd7 [verbose] stdout =================== END\nFC Invoke End RequestId: f6d78602-c84d-41f5-a8be-345825effcd7\nconvert success.\nJPG file save to /tmp/test.jpg\n```\n\n可以查看文件`.s/build/artifacts/ghostscript/pdf2jpg-test/test.jpg`查看效果\n\n### 部署\n\n```shell\n$ s deploy    \n[2021-07-27T08:52:03.419] [INFO ] [S-CLI] - Start ...\n[2021-07-27T08:52:05.745] [INFO ] [FC-DEPLOY] - Using region: cn-shenzhen\n[2021-07-27T08:52:05.746] [INFO ] [FC-DEPLOY] - Using access alias: ali-main\n[2021-07-27T08:52:05.746] [INFO ] [FC-DEPLOY] - Using accessKeyID: ***********1257\n[2021-07-27T08:52:05.746] [INFO ] [FC-DEPLOY] - Using accessKeySecret: ***********eMkg\n[2021-07-27T08:52:06.188] [INFO ] [FC-DEPLOY] - Checking Service ghostscript exists\n[2021-07-27T08:52:06.695] [INFO ] [FC-DEPLOY] - Checking Function pdf2jpg-test exists\n📎 Using fc deploy type: sdk, If you want to deploy with pulumi, you can [s cli fc-default set deploy-type pulumi] to switch.\n[2021-07-27T08:52:07.710] [INFO ] [FC-DEPLOY] - Fc detects that you have run build command for function: pdf2jpg-test.\n...\n[2021-07-27T08:52:14.454] [INFO ] [FC-DEPLOY] - Creating service: ghostscript\n[2021-07-27T08:52:14.454] [INFO ] [FC-DEPLOY] - Creating function: pdf2jpg-test\n✔ Make service ghostscript success.\n✔ Make function ghostscript/pdf2jpg-test success.\n[2021-07-27T08:52:29.186] [INFO ] [FC-DEPLOY] - Checking Service ghostscript exists\n[2021-07-27T08:52:29.499] [INFO ] [FC-DEPLOY] - Checking Function pdf2jpg-test exists\n...\n```\n\n### 调用\n\n``` shell\n$ s invoke\n[2021-07-27T08:52:46.610] [INFO ] [S-CLI] - Start ...\n========= FC invoke Logs begin =========\nFC Invoke Start RequestId: 8b072a2e-0233-4218-b5f8-9c6385c50933\nload code for handler:index.handler\n2021-07-27T00:52:49.652Z 8b072a2e-0233-4218-b5f8-9c6385c50933 [verbose] stdout =================== START\n2021-07-27T00:52:49.652Z 8b072a2e-0233-4218-b5f8-9c6385c50933 [verbose] GPL Ghostscript 9.26 (2018-11-20)\nCopyright (C) 2018 Artifex Software, Inc.  All rights reserved.\nThis software comes with NO WARRANTY: see the file PUBLIC for details.\nWarning: the map file cidfmap was not found.\nProcessing pages 1 through 1.\nPage 1\n\n2021-07-27T00:52:49.652Z 8b072a2e-0233-4218-b5f8-9c6385c50933 [verbose] stdout =================== END\nFC Invoke End RequestId: 8b072a2e-0233-4218-b5f8-9c6385c50933\n\nDuration: 669.58 ms, Billed Duration: 670 ms, Memory Size: 128 MB, Max Memory Used: 97.57 MB\n========= FC invoke Logs end =========\n\nFC Invoke Result:\nconvert success.\nJPG file save to /tmp/test.jpg\n\nEnd of method: invoke\n```\n\n## 附录与参考\n\n- [本文代码](https://github.com/JasonLamv-t/serverless-devs-ghostscript_example)\n- [awesome-fc/ghostscript_example: 基于 GhostScript 的 PDF 转 JPG ](https://github.com/awesome-fc/ghostscript_example)\n\n","source":"_posts/PDF2JPG-Custom Runtime dependent installation practices.md","raw":"---\ntitle: Serverless-Devs实践-基于 GhostScript 的 PDF 转 JPG\ndate: 2021-10-23\ncategories:\n- 实践指南\ntags: [Node, ServerlessDevs, Journal]\nkeywords: Serverless, Serverless-Devs, aliyun, PDF2IMG\n---\n\n# Serverless-Devs实践-基于 GhostScript 的 PDF 转 JPG\n\n该项目是基于GhostScript的PDF转JPG工具，借助[Serverless-Devs](https://github.com/Serverless-Devs/Serverless-Devs/blob/master/readme_zh.md)工具进行依赖安装并部署到阿里云函数计算，是一个serverless的简单示例。\n\n## 开始之前\n\n### Serverless-Devs\n\n如果您的开发环境没有Serverless-Devs，如果您的开发环境具备[npm](https://www.npmjs.com/)，可执行以下命令进行安装：\n\n```bash\nnpm install  @serverless-devs/s -g\n```\n\n或者 通过 [yarn](https://yarnpkg.com/) 进行安装\n\n```bash\nyarn global add  @serverless-devs/s\n```\n\n更多内容请参考[Serverless Devs Install-tutorial](https://github.com/devsapp/fc/blob/main/docs/Getting-started/Install-tutorial.md)。\n\n### Docker\n\n本文档涉及本地调试，因此需要开发环境具有[Docker](https://www.docker.com/)，您可根据您开发平台的不同安装不同版本，可参考[Serverless Devs Install-tutorial](https://github.com/devsapp/fc/blob/main/docs/Getting-started/Install-tutorial.md)可选部分。\n\n### Aliyun RAM账号\n\n前往[RAM 访问控制](https://ram.console.aliyun.com/users)创建一个子用户，赋予其管理函数计算(FC)服务权限「AliyunFCFullAccess」并创建AccessKey。\n\n### Serverless-Devs密钥配置\n\n参考[配置阿里云密钥](https://github.com/devsapp/fc/blob/main/docs/Getting-started/Setting-up-credentials.md)及[S config](http://www.serverless-devs.com/docs/command#config指令)，将上一步创建的子用户AccessKey配置到S中。\n\n## 开发\n\n### 初始化项目\n\n执行`s init`来创建项目，我们选择*Alibaba Cloud Serverless ➡️ HTTP Function-Node.js 12 Example ➡️ 输入文件夹名称*。\n\n### 自定义Runtime\n\n创建Funfile文件：\n\n```dockerfile\nRUNTIME nodejs12\t# 指定基础运行环境\nRUN fun-install apt-get install ghostscript\n```\n\n更多关于Funfile信息请参考[Funfile 功能介绍](https://developer.aliyun.com/article/719100)及[Custom Runtime-函数计算](https://help.aliyun.com/document_detail/132044.html?spm=a2c4g.11186623.6.601.2cd369ac18G1R7)。\n\n### 修改index.js\n\n```javascript\n// index.js\nconst { exec } = require('child_process')\n\nexports.handler = (event, context, callback) => {\n  const cmd = 'gs -sDEVICE=jpeg -dTextAlphaBits=4 -r144 -o /tmp/test.jpg test.pdf'\n  exec(cmd, (err, stdout, stderr) => {\n    if (err) {\n      console.log(\"stdout =================== START\")\n      console.log(stdout)\n      console.log(\"stdout =================== END\")\n      console.log(\"stderr =================== START\")\n      console.log(stderr)\n      console.log(\"stderr =================== END\")\n      callback(err, \"convert fail.\\n\")\n    } else {\n      console.log(\"stdout =================== START\")\n      console.log(stdout)\n      console.log(\"stdout =================== END\")\n      callback(null, 'convert success.\\nJPG file save to /tmp/test.jpg\\n')\n    }\n  })\n}\n```\n\n### 修改s.yaml\n\n在function字段下添加环境变量\n\n```yaml\n# s.yaml\n...\nservices:\n  ghostscript_example: #  服务名称\n    component: devsapp/fc  # 组件名称\n    \n    props: #  组件的属性值\n      service:\n        name: ghostscript\n      ...\n      function:\n        ...\n        name: pdf2jpg-test\n        environmentVariables:\n          GS_LIB: >-\n        .s/root/usr/share/ghostscript/9.26/Resource/Init:.s/root/usr/share/ghostscript/9.26/lib:.s/root/usr/share/ghostscript/9.26/Resource/Font:.s/root/usr/share/ghostscript/fonts:.s/root/var/lib/ghostscript/fonts:.s/root/usr/share/ghostscript/fonts:.s/root/usr/share/fonts\n```\n\n### 添加测试文件\n\n在项目目录下添加一个名为「test.pdf」的测试文件。\n\n### 构建Runtime并安装依赖\n\n执行`s build`，S检测到项目中存在「Funfile」时将会以Custom Container模式构建并安装依赖，得到`Build artifact successfully`时说明构建成功。\n\n```shell\n$ s build\n[2021-07-27T08:31:31.428] [INFO ] [S-CLI] - Start ...\n[2021-07-27T08:31:33.142] [INFO ] [FC-BUILD] - Build artifact start...\nFunfile exist, Fun will use container to build forcely\nStep 1/2 : FROM registry.cn-beijing.aliyuncs.com/aliyunfc/runtime-nodejs12:build-1.9.17 as nodejs12\n ---> 231f0fd07c07\nStep 2/2 : RUN fun-install apt-get install ghostscript\n ---> Using cache\n ---> f1fd050510fe\nsha256:f1fd050510fedf0cbcb673d327c84a153d824357f77fe0f0f76e730b4bbe0a3c\nSuccessfully built f1fd050510fe\nSuccessfully tagged fun-cache-4c2c48e0-2395-45c8-a29d-2c9668b985eb:latest\ncopying function artifact to /Users/linjiaxiang/ServerlessDevs/ghostscript_example/.s/build/artifacts/ghostscript/pdf2jpg-test\n[2021-07-27T08:31:37.020] [INFO ] [FC-BUILD] - Build function using image: fun-cache-4c2c48e0-2395-45c8-a29d-2c9668b985eb\n[2021-07-27T08:31:37.033] [INFO ] [FC-BUILD] - skip pulling image fun-cache-4c2c48e0-2395-45c8-a29d-2c9668b985eb...\n[2021-07-27T08:31:38.245] [INFO ] [FC-BUILD] - Build artifact successfully.\n\nTips for next step\n======================\n* Invoke Event Function: s local invoke\n* Invoke Http Function: s local start\n* Deploy Resources: s deploy\nEnd of method: build\n```\n\n### 本地调用\n\n```shell\n$ s local invoke\nFC Invoke Start RequestId: f6d78602-c84d-41f5-a8be-345825effcd7\nload code for handler:index.handler\n2021-07-27T00:33:12.019Z f6d78602-c84d-41f5-a8be-345825effcd7 [verbose] stdout =================== START\n2021-07-27T00:33:12.019Z f6d78602-c84d-41f5-a8be-345825effcd7 [verbose] GPL Ghostscript 9.26 (2018-11-20)\nCopyright (C) 2018 Artifex Software, Inc.  All rights reserved.\nThis software comes with NO WARRANTY: see the file PUBLIC for details.\nWarning: the map file cidfmap was not found.\nProcessing pages 1 through 1.\nPage 1\n\n2021-07-27T00:33:12.020Z f6d78602-c84d-41f5-a8be-345825effcd7 [verbose] stdout =================== END\nFC Invoke End RequestId: f6d78602-c84d-41f5-a8be-345825effcd7\nconvert success.\nJPG file save to /tmp/test.jpg\n```\n\n可以查看文件`.s/build/artifacts/ghostscript/pdf2jpg-test/test.jpg`查看效果\n\n### 部署\n\n```shell\n$ s deploy    \n[2021-07-27T08:52:03.419] [INFO ] [S-CLI] - Start ...\n[2021-07-27T08:52:05.745] [INFO ] [FC-DEPLOY] - Using region: cn-shenzhen\n[2021-07-27T08:52:05.746] [INFO ] [FC-DEPLOY] - Using access alias: ali-main\n[2021-07-27T08:52:05.746] [INFO ] [FC-DEPLOY] - Using accessKeyID: ***********1257\n[2021-07-27T08:52:05.746] [INFO ] [FC-DEPLOY] - Using accessKeySecret: ***********eMkg\n[2021-07-27T08:52:06.188] [INFO ] [FC-DEPLOY] - Checking Service ghostscript exists\n[2021-07-27T08:52:06.695] [INFO ] [FC-DEPLOY] - Checking Function pdf2jpg-test exists\n📎 Using fc deploy type: sdk, If you want to deploy with pulumi, you can [s cli fc-default set deploy-type pulumi] to switch.\n[2021-07-27T08:52:07.710] [INFO ] [FC-DEPLOY] - Fc detects that you have run build command for function: pdf2jpg-test.\n...\n[2021-07-27T08:52:14.454] [INFO ] [FC-DEPLOY] - Creating service: ghostscript\n[2021-07-27T08:52:14.454] [INFO ] [FC-DEPLOY] - Creating function: pdf2jpg-test\n✔ Make service ghostscript success.\n✔ Make function ghostscript/pdf2jpg-test success.\n[2021-07-27T08:52:29.186] [INFO ] [FC-DEPLOY] - Checking Service ghostscript exists\n[2021-07-27T08:52:29.499] [INFO ] [FC-DEPLOY] - Checking Function pdf2jpg-test exists\n...\n```\n\n### 调用\n\n``` shell\n$ s invoke\n[2021-07-27T08:52:46.610] [INFO ] [S-CLI] - Start ...\n========= FC invoke Logs begin =========\nFC Invoke Start RequestId: 8b072a2e-0233-4218-b5f8-9c6385c50933\nload code for handler:index.handler\n2021-07-27T00:52:49.652Z 8b072a2e-0233-4218-b5f8-9c6385c50933 [verbose] stdout =================== START\n2021-07-27T00:52:49.652Z 8b072a2e-0233-4218-b5f8-9c6385c50933 [verbose] GPL Ghostscript 9.26 (2018-11-20)\nCopyright (C) 2018 Artifex Software, Inc.  All rights reserved.\nThis software comes with NO WARRANTY: see the file PUBLIC for details.\nWarning: the map file cidfmap was not found.\nProcessing pages 1 through 1.\nPage 1\n\n2021-07-27T00:52:49.652Z 8b072a2e-0233-4218-b5f8-9c6385c50933 [verbose] stdout =================== END\nFC Invoke End RequestId: 8b072a2e-0233-4218-b5f8-9c6385c50933\n\nDuration: 669.58 ms, Billed Duration: 670 ms, Memory Size: 128 MB, Max Memory Used: 97.57 MB\n========= FC invoke Logs end =========\n\nFC Invoke Result:\nconvert success.\nJPG file save to /tmp/test.jpg\n\nEnd of method: invoke\n```\n\n## 附录与参考\n\n- [本文代码](https://github.com/JasonLamv-t/serverless-devs-ghostscript_example)\n- [awesome-fc/ghostscript_example: 基于 GhostScript 的 PDF 转 JPG ](https://github.com/awesome-fc/ghostscript_example)\n\n","slug":"PDF2JPG-Custom Runtime dependent installation practices","published":1,"updated":"2021-10-22T19:28:24.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv2ro26c00032r4a54ukfm4u","content":"<h1 id=\"Serverless-Devs&#x5B9E;&#x8DF5;-&#x57FA;&#x4E8E;-GhostScript-&#x7684;-PDF-&#x8F6C;-JPG\"><a href=\"#Serverless-Devs&#x5B9E;&#x8DF5;-&#x57FA;&#x4E8E;-GhostScript-&#x7684;-PDF-&#x8F6C;-JPG\" class=\"headerlink\" title=\"Serverless-Devs&#x5B9E;&#x8DF5;-&#x57FA;&#x4E8E; GhostScript &#x7684; PDF &#x8F6C; JPG\"></a>Serverless-Devs&#x5B9E;&#x8DF5;-&#x57FA;&#x4E8E; GhostScript &#x7684; PDF &#x8F6C; JPG</h1><p>&#x8BE5;&#x9879;&#x76EE;&#x662F;&#x57FA;&#x4E8E;GhostScript&#x7684;PDF&#x8F6C;JPG&#x5DE5;&#x5177;&#xFF0C;&#x501F;&#x52A9;<a href=\"https://github.com/Serverless-Devs/Serverless-Devs/blob/master/readme_zh.md\">Serverless-Devs</a>&#x5DE5;&#x5177;&#x8FDB;&#x884C;&#x4F9D;&#x8D56;&#x5B89;&#x88C5;&#x5E76;&#x90E8;&#x7F72;&#x5230;&#x963F;&#x91CC;&#x4E91;&#x51FD;&#x6570;&#x8BA1;&#x7B97;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;serverless&#x7684;&#x7B80;&#x5355;&#x793A;&#x4F8B;&#x3002;</p>\n<h2 id=\"&#x5F00;&#x59CB;&#x4E4B;&#x524D;\"><a href=\"#&#x5F00;&#x59CB;&#x4E4B;&#x524D;\" class=\"headerlink\" title=\"&#x5F00;&#x59CB;&#x4E4B;&#x524D;\"></a>&#x5F00;&#x59CB;&#x4E4B;&#x524D;</h2><h3 id=\"Serverless-Devs\"><a href=\"#Serverless-Devs\" class=\"headerlink\" title=\"Serverless-Devs\"></a>Serverless-Devs</h3><p>&#x5982;&#x679C;&#x60A8;&#x7684;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#x6CA1;&#x6709;Serverless-Devs&#xFF0C;&#x5982;&#x679C;&#x60A8;&#x7684;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#x5177;&#x5907;<a href=\"https://www.npmjs.com/\">npm</a>&#xFF0C;&#x53EF;&#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x8FDB;&#x884C;&#x5B89;&#x88C5;&#xFF1A;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install  @serverless-devs/s -g<br></code></pre></td></tr></table></figure>\n\n<p>&#x6216;&#x8005; &#x901A;&#x8FC7; <a href=\"https://yarnpkg.com/\">yarn</a> &#x8FDB;&#x884C;&#x5B89;&#x88C5;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">yarn global add  @serverless-devs/s<br></code></pre></td></tr></table></figure>\n\n<p>&#x66F4;&#x591A;&#x5185;&#x5BB9;&#x8BF7;&#x53C2;&#x8003;<a href=\"https://github.com/devsapp/fc/blob/main/docs/Getting-started/Install-tutorial.md\">Serverless Devs Install-tutorial</a>&#x3002;</p>\n<h3 id=\"Docker\"><a href=\"#Docker\" class=\"headerlink\" title=\"Docker\"></a>Docker</h3><p>&#x672C;&#x6587;&#x6863;&#x6D89;&#x53CA;&#x672C;&#x5730;&#x8C03;&#x8BD5;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#x5177;&#x6709;<a href=\"https://www.docker.com/\">Docker</a>&#xFF0C;&#x60A8;&#x53EF;&#x6839;&#x636E;&#x60A8;&#x5F00;&#x53D1;&#x5E73;&#x53F0;&#x7684;&#x4E0D;&#x540C;&#x5B89;&#x88C5;&#x4E0D;&#x540C;&#x7248;&#x672C;&#xFF0C;&#x53EF;&#x53C2;&#x8003;<a href=\"https://github.com/devsapp/fc/blob/main/docs/Getting-started/Install-tutorial.md\">Serverless Devs Install-tutorial</a>&#x53EF;&#x9009;&#x90E8;&#x5206;&#x3002;</p>\n<h3 id=\"Aliyun-RAM&#x8D26;&#x53F7;\"><a href=\"#Aliyun-RAM&#x8D26;&#x53F7;\" class=\"headerlink\" title=\"Aliyun RAM&#x8D26;&#x53F7;\"></a>Aliyun RAM&#x8D26;&#x53F7;</h3><p>&#x524D;&#x5F80;<a href=\"https://ram.console.aliyun.com/users\">RAM &#x8BBF;&#x95EE;&#x63A7;&#x5236;</a>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5B50;&#x7528;&#x6237;&#xFF0C;&#x8D4B;&#x4E88;&#x5176;&#x7BA1;&#x7406;&#x51FD;&#x6570;&#x8BA1;&#x7B97;(FC)&#x670D;&#x52A1;&#x6743;&#x9650;&#x300C;AliyunFCFullAccess&#x300D;&#x5E76;&#x521B;&#x5EFA;AccessKey&#x3002;</p>\n<h3 id=\"Serverless-Devs&#x5BC6;&#x94A5;&#x914D;&#x7F6E;\"><a href=\"#Serverless-Devs&#x5BC6;&#x94A5;&#x914D;&#x7F6E;\" class=\"headerlink\" title=\"Serverless-Devs&#x5BC6;&#x94A5;&#x914D;&#x7F6E;\"></a>Serverless-Devs&#x5BC6;&#x94A5;&#x914D;&#x7F6E;</h3><p>&#x53C2;&#x8003;<a href=\"https://github.com/devsapp/fc/blob/main/docs/Getting-started/Setting-up-credentials.md\">&#x914D;&#x7F6E;&#x963F;&#x91CC;&#x4E91;&#x5BC6;&#x94A5;</a>&#x53CA;<a href=\"http://www.serverless-devs.com/docs/command#config%E6%8C%87%E4%BB%A4\">S config</a>&#xFF0C;&#x5C06;&#x4E0A;&#x4E00;&#x6B65;&#x521B;&#x5EFA;&#x7684;&#x5B50;&#x7528;&#x6237;AccessKey&#x914D;&#x7F6E;&#x5230;S&#x4E2D;&#x3002;</p>\n<h2 id=\"&#x5F00;&#x53D1;\"><a href=\"#&#x5F00;&#x53D1;\" class=\"headerlink\" title=\"&#x5F00;&#x53D1;\"></a>&#x5F00;&#x53D1;</h2><h3 id=\"&#x521D;&#x59CB;&#x5316;&#x9879;&#x76EE;\"><a href=\"#&#x521D;&#x59CB;&#x5316;&#x9879;&#x76EE;\" class=\"headerlink\" title=\"&#x521D;&#x59CB;&#x5316;&#x9879;&#x76EE;\"></a>&#x521D;&#x59CB;&#x5316;&#x9879;&#x76EE;</h3><p>&#x6267;&#x884C;<code>s init</code>&#x6765;&#x521B;&#x5EFA;&#x9879;&#x76EE;&#xFF0C;&#x6211;&#x4EEC;&#x9009;&#x62E9;<em>Alibaba Cloud Serverless &#x27A1;&#xFE0F; HTTP Function-Node.js 12 Example &#x27A1;&#xFE0F; &#x8F93;&#x5165;&#x6587;&#x4EF6;&#x5939;&#x540D;&#x79F0;</em>&#x3002;</p>\n<h3 id=\"&#x81EA;&#x5B9A;&#x4E49;Runtime\"><a href=\"#&#x81EA;&#x5B9A;&#x4E49;Runtime\" class=\"headerlink\" title=\"&#x81EA;&#x5B9A;&#x4E49;Runtime\"></a>&#x81EA;&#x5B9A;&#x4E49;Runtime</h3><p>&#x521B;&#x5EFA;Funfile&#x6587;&#x4EF6;&#xFF1A;</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dockerfile\">RUNTIME nodejs12\t<span class=\"hljs-comment\"># &#x6307;&#x5B9A;&#x57FA;&#x7840;&#x8FD0;&#x884C;&#x73AF;&#x5883;</span><br><span class=\"hljs-keyword\">RUN</span><span class=\"bash\"> fun-install apt-get install ghostscript</span><br></code></pre></td></tr></table></figure>\n\n<p>&#x66F4;&#x591A;&#x5173;&#x4E8E;Funfile&#x4FE1;&#x606F;&#x8BF7;&#x53C2;&#x8003;<a href=\"https://developer.aliyun.com/article/719100\">Funfile &#x529F;&#x80FD;&#x4ECB;&#x7ECD;</a>&#x53CA;<a href=\"https://help.aliyun.com/document_detail/132044.html?spm=a2c4g.11186623.6.601.2cd369ac18G1R7\">Custom Runtime-&#x51FD;&#x6570;&#x8BA1;&#x7B97;</a>&#x3002;</p>\n<h3 id=\"&#x4FEE;&#x6539;index-js\"><a href=\"#&#x4FEE;&#x6539;index-js\" class=\"headerlink\" title=\"&#x4FEE;&#x6539;index.js\"></a>&#x4FEE;&#x6539;index.js</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// index.js</span><br><span class=\"hljs-keyword\">const</span> { exec } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;child_process&apos;</span>)<br><br><span class=\"hljs-built_in\">exports</span>.handler = <span class=\"hljs-function\">(<span class=\"hljs-params\">event, context, callback</span>) =&gt;</span> {<br>  <span class=\"hljs-keyword\">const</span> cmd = <span class=\"hljs-string\">&apos;gs -sDEVICE=jpeg -dTextAlphaBits=4 -r144 -o /tmp/test.jpg test.pdf&apos;</span><br>  exec(cmd, <span class=\"hljs-function\">(<span class=\"hljs-params\">err, stdout, stderr</span>) =&gt;</span> {<br>    <span class=\"hljs-keyword\">if</span> (err) {<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&quot;stdout =================== START&quot;</span>)<br>      <span class=\"hljs-built_in\">console</span>.log(stdout)<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&quot;stdout =================== END&quot;</span>)<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&quot;stderr =================== START&quot;</span>)<br>      <span class=\"hljs-built_in\">console</span>.log(stderr)<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&quot;stderr =================== END&quot;</span>)<br>      callback(err, <span class=\"hljs-string\">&quot;convert fail.\\n&quot;</span>)<br>    } <span class=\"hljs-keyword\">else</span> {<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&quot;stdout =================== START&quot;</span>)<br>      <span class=\"hljs-built_in\">console</span>.log(stdout)<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&quot;stdout =================== END&quot;</span>)<br>      callback(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">&apos;convert success.\\nJPG file save to /tmp/test.jpg\\n&apos;</span>)<br>    }<br>  })<br>}<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"&#x4FEE;&#x6539;s-yaml\"><a href=\"#&#x4FEE;&#x6539;s-yaml\" class=\"headerlink\" title=\"&#x4FEE;&#x6539;s.yaml\"></a>&#x4FEE;&#x6539;s.yaml</h3><p>&#x5728;function&#x5B57;&#x6BB5;&#x4E0B;&#x6DFB;&#x52A0;&#x73AF;&#x5883;&#x53D8;&#x91CF;</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\"># s.yaml</span><br><span class=\"hljs-string\">...</span><br><span class=\"hljs-attr\">services:</span><br>  <span class=\"hljs-attr\">ghostscript_example:</span> <span class=\"hljs-comment\">#  &#x670D;&#x52A1;&#x540D;&#x79F0;</span><br>    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">devsapp/fc</span>  <span class=\"hljs-comment\"># &#x7EC4;&#x4EF6;&#x540D;&#x79F0;</span><br>    <br>    <span class=\"hljs-attr\">props:</span> <span class=\"hljs-comment\">#  &#x7EC4;&#x4EF6;&#x7684;&#x5C5E;&#x6027;&#x503C;</span><br>      <span class=\"hljs-attr\">service:</span><br>        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ghostscript</span><br>      <span class=\"hljs-string\">...</span><br>      <span class=\"hljs-attr\">function:</span><br>        <span class=\"hljs-string\">...</span><br>        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">pdf2jpg-test</span><br>        <span class=\"hljs-attr\">environmentVariables:</span><br>          <span class=\"hljs-attr\">GS_LIB:</span> <span class=\"hljs-string\">&gt;-</span><br>        <span class=\"hljs-string\">.s/root/usr/share/ghostscript/9.26/Resource/Init:.s/root/usr/share/ghostscript/9.26/lib:.s/root/usr/share/ghostscript/9.26/Resource/Font:.s/root/usr/share/ghostscript/fonts:.s/root/var/lib/ghostscript/fonts:.s/root/usr/share/ghostscript/fonts:.s/root/usr/share/fonts</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"&#x6DFB;&#x52A0;&#x6D4B;&#x8BD5;&#x6587;&#x4EF6;\"><a href=\"#&#x6DFB;&#x52A0;&#x6D4B;&#x8BD5;&#x6587;&#x4EF6;\" class=\"headerlink\" title=\"&#x6DFB;&#x52A0;&#x6D4B;&#x8BD5;&#x6587;&#x4EF6;\"></a>&#x6DFB;&#x52A0;&#x6D4B;&#x8BD5;&#x6587;&#x4EF6;</h3><p>&#x5728;&#x9879;&#x76EE;&#x76EE;&#x5F55;&#x4E0B;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x540D;&#x4E3A;&#x300C;test.pdf&#x300D;&#x7684;&#x6D4B;&#x8BD5;&#x6587;&#x4EF6;&#x3002;</p>\n<h3 id=\"&#x6784;&#x5EFA;Runtime&#x5E76;&#x5B89;&#x88C5;&#x4F9D;&#x8D56;\"><a href=\"#&#x6784;&#x5EFA;Runtime&#x5E76;&#x5B89;&#x88C5;&#x4F9D;&#x8D56;\" class=\"headerlink\" title=\"&#x6784;&#x5EFA;Runtime&#x5E76;&#x5B89;&#x88C5;&#x4F9D;&#x8D56;\"></a>&#x6784;&#x5EFA;Runtime&#x5E76;&#x5B89;&#x88C5;&#x4F9D;&#x8D56;</h3><p>&#x6267;&#x884C;<code>s build</code>&#xFF0C;S&#x68C0;&#x6D4B;&#x5230;&#x9879;&#x76EE;&#x4E2D;&#x5B58;&#x5728;&#x300C;Funfile&#x300D;&#x65F6;&#x5C06;&#x4F1A;&#x4EE5;Custom Container&#x6A21;&#x5F0F;&#x6784;&#x5EFA;&#x5E76;&#x5B89;&#x88C5;&#x4F9D;&#x8D56;&#xFF0C;&#x5F97;&#x5230;<code>Build artifact successfully</code>&#x65F6;&#x8BF4;&#x660E;&#x6784;&#x5EFA;&#x6210;&#x529F;&#x3002;</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s build</span><br>[2021-07-27T08:31:31.428] [INFO ] [S-CLI] - Start ...<br>[2021-07-27T08:31:33.142] [INFO ] [FC-BUILD] - Build artifact start...<br>Funfile exist, Fun will use container to build forcely<br>Step 1/2 : FROM registry.cn-beijing.aliyuncs.com/aliyunfc/runtime-nodejs12:build-1.9.17 as nodejs12<br><span class=\"hljs-meta\"> ---&gt;</span><span class=\"bash\"> 231f0fd07c07</span><br>Step 2/2 : RUN fun-install apt-get install ghostscript<br><span class=\"hljs-meta\"> ---&gt;</span><span class=\"bash\"> Using cache</span><br><span class=\"hljs-meta\"> ---&gt;</span><span class=\"bash\"> f1fd050510fe</span><br>sha256:f1fd050510fedf0cbcb673d327c84a153d824357f77fe0f0f76e730b4bbe0a3c<br>Successfully built f1fd050510fe<br>Successfully tagged fun-cache-4c2c48e0-2395-45c8-a29d-2c9668b985eb:latest<br>copying function artifact to /Users/linjiaxiang/ServerlessDevs/ghostscript_example/.s/build/artifacts/ghostscript/pdf2jpg-test<br>[2021-07-27T08:31:37.020] [INFO ] [FC-BUILD] - Build function using image: fun-cache-4c2c48e0-2395-45c8-a29d-2c9668b985eb<br>[2021-07-27T08:31:37.033] [INFO ] [FC-BUILD] - skip pulling image fun-cache-4c2c48e0-2395-45c8-a29d-2c9668b985eb...<br>[2021-07-27T08:31:38.245] [INFO ] [FC-BUILD] - Build artifact successfully.<br><br>Tips for next step<br>======================<br>* Invoke Event Function: s local invoke<br>* Invoke Http Function: s local start<br>* Deploy Resources: s deploy<br>End of method: build<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"&#x672C;&#x5730;&#x8C03;&#x7528;\"><a href=\"#&#x672C;&#x5730;&#x8C03;&#x7528;\" class=\"headerlink\" title=\"&#x672C;&#x5730;&#x8C03;&#x7528;\"></a>&#x672C;&#x5730;&#x8C03;&#x7528;</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s <span class=\"hljs-built_in\">local</span> invoke</span><br>FC Invoke Start RequestId: f6d78602-c84d-41f5-a8be-345825effcd7<br>load code for handler:index.handler<br>2021-07-27T00:33:12.019Z f6d78602-c84d-41f5-a8be-345825effcd7 [verbose] stdout =================== START<br>2021-07-27T00:33:12.019Z f6d78602-c84d-41f5-a8be-345825effcd7 [verbose] GPL Ghostscript 9.26 (2018-11-20)<br>Copyright (C) 2018 Artifex Software, Inc.  All rights reserved.<br>This software comes with NO WARRANTY: see the file PUBLIC for details.<br>Warning: the map file cidfmap was not found.<br>Processing pages 1 through 1.<br>Page 1<br><br>2021-07-27T00:33:12.020Z f6d78602-c84d-41f5-a8be-345825effcd7 [verbose] stdout =================== END<br>FC Invoke End RequestId: f6d78602-c84d-41f5-a8be-345825effcd7<br>convert success.<br>JPG file save to /tmp/test.jpg<br></code></pre></td></tr></table></figure>\n\n<p>&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x6587;&#x4EF6;<code>.s/build/artifacts/ghostscript/pdf2jpg-test/test.jpg</code>&#x67E5;&#x770B;&#x6548;&#x679C;</p>\n<h3 id=\"&#x90E8;&#x7F72;\"><a href=\"#&#x90E8;&#x7F72;\" class=\"headerlink\" title=\"&#x90E8;&#x7F72;\"></a>&#x90E8;&#x7F72;</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s deploy</span>    <br>[2021-07-27T08:52:03.419] [INFO ] [S-CLI] - Start ...<br>[2021-07-27T08:52:05.745] [INFO ] [FC-DEPLOY] - Using region: cn-shenzhen<br>[2021-07-27T08:52:05.746] [INFO ] [FC-DEPLOY] - Using access alias: ali-main<br>[2021-07-27T08:52:05.746] [INFO ] [FC-DEPLOY] - Using accessKeyID: ***********1257<br>[2021-07-27T08:52:05.746] [INFO ] [FC-DEPLOY] - Using accessKeySecret: ***********eMkg<br>[2021-07-27T08:52:06.188] [INFO ] [FC-DEPLOY] - Checking Service ghostscript exists<br>[2021-07-27T08:52:06.695] [INFO ] [FC-DEPLOY] - Checking Function pdf2jpg-test exists<br>&#x1F4CE; Using fc deploy type: sdk, If you want to deploy with pulumi, you can [s cli fc-default set deploy-type pulumi] to switch.<br>[2021-07-27T08:52:07.710] [INFO ] [FC-DEPLOY] - Fc detects that you have run build command for function: pdf2jpg-test.<br>...<br>[2021-07-27T08:52:14.454] [INFO ] [FC-DEPLOY] - Creating service: ghostscript<br>[2021-07-27T08:52:14.454] [INFO ] [FC-DEPLOY] - Creating function: pdf2jpg-test<br>&#x2714; Make service ghostscript success.<br>&#x2714; Make function ghostscript/pdf2jpg-test success.<br>[2021-07-27T08:52:29.186] [INFO ] [FC-DEPLOY] - Checking Service ghostscript exists<br>[2021-07-27T08:52:29.499] [INFO ] [FC-DEPLOY] - Checking Function pdf2jpg-test exists<br>...<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"&#x8C03;&#x7528;\"><a href=\"#&#x8C03;&#x7528;\" class=\"headerlink\" title=\"&#x8C03;&#x7528;\"></a>&#x8C03;&#x7528;</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s invoke</span><br>[2021-07-27T08:52:46.610] [INFO ] [S-CLI] - Start ...<br>========= FC invoke Logs begin =========<br>FC Invoke Start RequestId: 8b072a2e-0233-4218-b5f8-9c6385c50933<br>load code for handler:index.handler<br>2021-07-27T00:52:49.652Z 8b072a2e-0233-4218-b5f8-9c6385c50933 [verbose] stdout =================== START<br>2021-07-27T00:52:49.652Z 8b072a2e-0233-4218-b5f8-9c6385c50933 [verbose] GPL Ghostscript 9.26 (2018-11-20)<br>Copyright (C) 2018 Artifex Software, Inc.  All rights reserved.<br>This software comes with NO WARRANTY: see the file PUBLIC for details.<br>Warning: the map file cidfmap was not found.<br>Processing pages 1 through 1.<br>Page 1<br><br>2021-07-27T00:52:49.652Z 8b072a2e-0233-4218-b5f8-9c6385c50933 [verbose] stdout =================== END<br>FC Invoke End RequestId: 8b072a2e-0233-4218-b5f8-9c6385c50933<br><br>Duration: 669.58 ms, Billed Duration: 670 ms, Memory Size: 128 MB, Max Memory Used: 97.57 MB<br>========= FC invoke Logs end =========<br><br>FC Invoke Result:<br>convert success.<br>JPG file save to /tmp/test.jpg<br><br>End of method: invoke<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"&#x9644;&#x5F55;&#x4E0E;&#x53C2;&#x8003;\"><a href=\"#&#x9644;&#x5F55;&#x4E0E;&#x53C2;&#x8003;\" class=\"headerlink\" title=\"&#x9644;&#x5F55;&#x4E0E;&#x53C2;&#x8003;\"></a>&#x9644;&#x5F55;&#x4E0E;&#x53C2;&#x8003;</h2><ul>\n<li><a href=\"https://github.com/JasonLamv-t/serverless-devs-ghostscript_example\">&#x672C;&#x6587;&#x4EE3;&#x7801;</a></li>\n<li><a href=\"https://github.com/awesome-fc/ghostscript_example\">awesome-fc/ghostscript_example: &#x57FA;&#x4E8E; GhostScript &#x7684; PDF &#x8F6C; JPG </a></li>\n</ul>\n","site":{"data":{"galleries":[{"name":"深圳日记","cover":"/images/galleries/shenzhen/IMG_0.jpeg","description":"不要沉沦","photos":["/images/galleries/shenzhen/IMG_0.jpeg","/images/galleries/shenzhen/IMG_1.JPG","/images/galleries/shenzhen/IMG_2.JPG","/images/galleries/shenzhen/IMG_3.jpeg","/images/galleries/shenzhen/IMG_4.jpeg","/images/galleries/shenzhen/IMG_5.jpeg","/images/galleries/shenzhen/IMG_6.jpeg","/images/galleries/shenzhen/IMG_7.PNG","/images/galleries/shenzhen/IMG_8.JPG","/images/galleries/shenzhen/IMG_9.jpeg","/images/galleries/shenzhen/IMG_10.jpeg","/images/galleries/shenzhen/IMG_11.jpeg","/images/galleries/shenzhen/IMG_12.JPG","/images/galleries/shenzhen/IMG_13.jpeg","/images/galleries/shenzhen/IMG_14.jpeg"]}]}},"excerpt":"","more":"<h1 id=\"Serverless-Devs实践-基于-GhostScript-的-PDF-转-JPG\"><a href=\"#Serverless-Devs实践-基于-GhostScript-的-PDF-转-JPG\" class=\"headerlink\" title=\"Serverless-Devs实践-基于 GhostScript 的 PDF 转 JPG\"></a>Serverless-Devs实践-基于 GhostScript 的 PDF 转 JPG</h1><p>该项目是基于GhostScript的PDF转JPG工具，借助<a href=\"https://github.com/Serverless-Devs/Serverless-Devs/blob/master/readme_zh.md\">Serverless-Devs</a>工具进行依赖安装并部署到阿里云函数计算，是一个serverless的简单示例。</p>\n<h2 id=\"开始之前\"><a href=\"#开始之前\" class=\"headerlink\" title=\"开始之前\"></a>开始之前</h2><h3 id=\"Serverless-Devs\"><a href=\"#Serverless-Devs\" class=\"headerlink\" title=\"Serverless-Devs\"></a>Serverless-Devs</h3><p>如果您的开发环境没有Serverless-Devs，如果您的开发环境具备<a href=\"https://www.npmjs.com/\">npm</a>，可执行以下命令进行安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">npm install  @serverless-devs/s -g<br></code></pre></td></tr></table></figure>\n\n<p>或者 通过 <a href=\"https://yarnpkg.com/\">yarn</a> 进行安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">yarn global add  @serverless-devs/s<br></code></pre></td></tr></table></figure>\n\n<p>更多内容请参考<a href=\"https://github.com/devsapp/fc/blob/main/docs/Getting-started/Install-tutorial.md\">Serverless Devs Install-tutorial</a>。</p>\n<h3 id=\"Docker\"><a href=\"#Docker\" class=\"headerlink\" title=\"Docker\"></a>Docker</h3><p>本文档涉及本地调试，因此需要开发环境具有<a href=\"https://www.docker.com/\">Docker</a>，您可根据您开发平台的不同安装不同版本，可参考<a href=\"https://github.com/devsapp/fc/blob/main/docs/Getting-started/Install-tutorial.md\">Serverless Devs Install-tutorial</a>可选部分。</p>\n<h3 id=\"Aliyun-RAM账号\"><a href=\"#Aliyun-RAM账号\" class=\"headerlink\" title=\"Aliyun RAM账号\"></a>Aliyun RAM账号</h3><p>前往<a href=\"https://ram.console.aliyun.com/users\">RAM 访问控制</a>创建一个子用户，赋予其管理函数计算(FC)服务权限「AliyunFCFullAccess」并创建AccessKey。</p>\n<h3 id=\"Serverless-Devs密钥配置\"><a href=\"#Serverless-Devs密钥配置\" class=\"headerlink\" title=\"Serverless-Devs密钥配置\"></a>Serverless-Devs密钥配置</h3><p>参考<a href=\"https://github.com/devsapp/fc/blob/main/docs/Getting-started/Setting-up-credentials.md\">配置阿里云密钥</a>及<a href=\"http://www.serverless-devs.com/docs/command#config%E6%8C%87%E4%BB%A4\">S config</a>，将上一步创建的子用户AccessKey配置到S中。</p>\n<h2 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h2><h3 id=\"初始化项目\"><a href=\"#初始化项目\" class=\"headerlink\" title=\"初始化项目\"></a>初始化项目</h3><p>执行<code>s init</code>来创建项目，我们选择<em>Alibaba Cloud Serverless ➡️ HTTP Function-Node.js 12 Example ➡️ 输入文件夹名称</em>。</p>\n<h3 id=\"自定义Runtime\"><a href=\"#自定义Runtime\" class=\"headerlink\" title=\"自定义Runtime\"></a>自定义Runtime</h3><p>创建Funfile文件：</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dockerfile\">RUNTIME nodejs12\t<span class=\"hljs-comment\"># 指定基础运行环境</span><br><span class=\"hljs-keyword\">RUN</span><span class=\"bash\"> fun-install apt-get install ghostscript</span><br></code></pre></td></tr></table></figure>\n\n<p>更多关于Funfile信息请参考<a href=\"https://developer.aliyun.com/article/719100\">Funfile 功能介绍</a>及<a href=\"https://help.aliyun.com/document_detail/132044.html?spm=a2c4g.11186623.6.601.2cd369ac18G1R7\">Custom Runtime-函数计算</a>。</p>\n<h3 id=\"修改index-js\"><a href=\"#修改index-js\" class=\"headerlink\" title=\"修改index.js\"></a>修改index.js</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">// index.js</span><br><span class=\"hljs-keyword\">const</span> &#123; exec &#125; = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;child_process&#x27;</span>)<br><br><span class=\"hljs-built_in\">exports</span>.handler = <span class=\"hljs-function\">(<span class=\"hljs-params\">event, context, callback</span>) =&gt;</span> &#123;<br>  <span class=\"hljs-keyword\">const</span> cmd = <span class=\"hljs-string\">&#x27;gs -sDEVICE=jpeg -dTextAlphaBits=4 -r144 -o /tmp/test.jpg test.pdf&#x27;</span><br>  exec(cmd, <span class=\"hljs-function\">(<span class=\"hljs-params\">err, stdout, stderr</span>) =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">if</span> (err) &#123;<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&quot;stdout =================== START&quot;</span>)<br>      <span class=\"hljs-built_in\">console</span>.log(stdout)<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&quot;stdout =================== END&quot;</span>)<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&quot;stderr =================== START&quot;</span>)<br>      <span class=\"hljs-built_in\">console</span>.log(stderr)<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&quot;stderr =================== END&quot;</span>)<br>      callback(err, <span class=\"hljs-string\">&quot;convert fail.\\n&quot;</span>)<br>    &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&quot;stdout =================== START&quot;</span>)<br>      <span class=\"hljs-built_in\">console</span>.log(stdout)<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&quot;stdout =================== END&quot;</span>)<br>      callback(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">&#x27;convert success.\\nJPG file save to /tmp/test.jpg\\n&#x27;</span>)<br>    &#125;<br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"修改s-yaml\"><a href=\"#修改s-yaml\" class=\"headerlink\" title=\"修改s.yaml\"></a>修改s.yaml</h3><p>在function字段下添加环境变量</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-comment\"># s.yaml</span><br><span class=\"hljs-string\">...</span><br><span class=\"hljs-attr\">services:</span><br>  <span class=\"hljs-attr\">ghostscript_example:</span> <span class=\"hljs-comment\">#  服务名称</span><br>    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">devsapp/fc</span>  <span class=\"hljs-comment\"># 组件名称</span><br>    <br>    <span class=\"hljs-attr\">props:</span> <span class=\"hljs-comment\">#  组件的属性值</span><br>      <span class=\"hljs-attr\">service:</span><br>        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">ghostscript</span><br>      <span class=\"hljs-string\">...</span><br>      <span class=\"hljs-attr\">function:</span><br>        <span class=\"hljs-string\">...</span><br>        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">pdf2jpg-test</span><br>        <span class=\"hljs-attr\">environmentVariables:</span><br>          <span class=\"hljs-attr\">GS_LIB:</span> <span class=\"hljs-string\">&gt;-</span><br>        <span class=\"hljs-string\">.s/root/usr/share/ghostscript/9.26/Resource/Init:.s/root/usr/share/ghostscript/9.26/lib:.s/root/usr/share/ghostscript/9.26/Resource/Font:.s/root/usr/share/ghostscript/fonts:.s/root/var/lib/ghostscript/fonts:.s/root/usr/share/ghostscript/fonts:.s/root/usr/share/fonts</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加测试文件\"><a href=\"#添加测试文件\" class=\"headerlink\" title=\"添加测试文件\"></a>添加测试文件</h3><p>在项目目录下添加一个名为「test.pdf」的测试文件。</p>\n<h3 id=\"构建Runtime并安装依赖\"><a href=\"#构建Runtime并安装依赖\" class=\"headerlink\" title=\"构建Runtime并安装依赖\"></a>构建Runtime并安装依赖</h3><p>执行<code>s build</code>，S检测到项目中存在「Funfile」时将会以Custom Container模式构建并安装依赖，得到<code>Build artifact successfully</code>时说明构建成功。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s build</span><br>[2021-07-27T08:31:31.428] [INFO ] [S-CLI] - Start ...<br>[2021-07-27T08:31:33.142] [INFO ] [FC-BUILD] - Build artifact start...<br>Funfile exist, Fun will use container to build forcely<br>Step 1/2 : FROM registry.cn-beijing.aliyuncs.com/aliyunfc/runtime-nodejs12:build-1.9.17 as nodejs12<br><span class=\"hljs-meta\"> ---&gt;</span><span class=\"bash\"> 231f0fd07c07</span><br>Step 2/2 : RUN fun-install apt-get install ghostscript<br><span class=\"hljs-meta\"> ---&gt;</span><span class=\"bash\"> Using cache</span><br><span class=\"hljs-meta\"> ---&gt;</span><span class=\"bash\"> f1fd050510fe</span><br>sha256:f1fd050510fedf0cbcb673d327c84a153d824357f77fe0f0f76e730b4bbe0a3c<br>Successfully built f1fd050510fe<br>Successfully tagged fun-cache-4c2c48e0-2395-45c8-a29d-2c9668b985eb:latest<br>copying function artifact to /Users/linjiaxiang/ServerlessDevs/ghostscript_example/.s/build/artifacts/ghostscript/pdf2jpg-test<br>[2021-07-27T08:31:37.020] [INFO ] [FC-BUILD] - Build function using image: fun-cache-4c2c48e0-2395-45c8-a29d-2c9668b985eb<br>[2021-07-27T08:31:37.033] [INFO ] [FC-BUILD] - skip pulling image fun-cache-4c2c48e0-2395-45c8-a29d-2c9668b985eb...<br>[2021-07-27T08:31:38.245] [INFO ] [FC-BUILD] - Build artifact successfully.<br><br>Tips for next step<br>======================<br>* Invoke Event Function: s local invoke<br>* Invoke Http Function: s local start<br>* Deploy Resources: s deploy<br>End of method: build<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"本地调用\"><a href=\"#本地调用\" class=\"headerlink\" title=\"本地调用\"></a>本地调用</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s <span class=\"hljs-built_in\">local</span> invoke</span><br>FC Invoke Start RequestId: f6d78602-c84d-41f5-a8be-345825effcd7<br>load code for handler:index.handler<br>2021-07-27T00:33:12.019Z f6d78602-c84d-41f5-a8be-345825effcd7 [verbose] stdout =================== START<br>2021-07-27T00:33:12.019Z f6d78602-c84d-41f5-a8be-345825effcd7 [verbose] GPL Ghostscript 9.26 (2018-11-20)<br>Copyright (C) 2018 Artifex Software, Inc.  All rights reserved.<br>This software comes with NO WARRANTY: see the file PUBLIC for details.<br>Warning: the map file cidfmap was not found.<br>Processing pages 1 through 1.<br>Page 1<br><br>2021-07-27T00:33:12.020Z f6d78602-c84d-41f5-a8be-345825effcd7 [verbose] stdout =================== END<br>FC Invoke End RequestId: f6d78602-c84d-41f5-a8be-345825effcd7<br>convert success.<br>JPG file save to /tmp/test.jpg<br></code></pre></td></tr></table></figure>\n\n<p>可以查看文件<code>.s/build/artifacts/ghostscript/pdf2jpg-test/test.jpg</code>查看效果</p>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s deploy</span>    <br>[2021-07-27T08:52:03.419] [INFO ] [S-CLI] - Start ...<br>[2021-07-27T08:52:05.745] [INFO ] [FC-DEPLOY] - Using region: cn-shenzhen<br>[2021-07-27T08:52:05.746] [INFO ] [FC-DEPLOY] - Using access alias: ali-main<br>[2021-07-27T08:52:05.746] [INFO ] [FC-DEPLOY] - Using accessKeyID: ***********1257<br>[2021-07-27T08:52:05.746] [INFO ] [FC-DEPLOY] - Using accessKeySecret: ***********eMkg<br>[2021-07-27T08:52:06.188] [INFO ] [FC-DEPLOY] - Checking Service ghostscript exists<br>[2021-07-27T08:52:06.695] [INFO ] [FC-DEPLOY] - Checking Function pdf2jpg-test exists<br>📎 Using fc deploy type: sdk, If you want to deploy with pulumi, you can [s cli fc-default set deploy-type pulumi] to switch.<br>[2021-07-27T08:52:07.710] [INFO ] [FC-DEPLOY] - Fc detects that you have run build command for function: pdf2jpg-test.<br>...<br>[2021-07-27T08:52:14.454] [INFO ] [FC-DEPLOY] - Creating service: ghostscript<br>[2021-07-27T08:52:14.454] [INFO ] [FC-DEPLOY] - Creating function: pdf2jpg-test<br>✔ Make service ghostscript success.<br>✔ Make function ghostscript/pdf2jpg-test success.<br>[2021-07-27T08:52:29.186] [INFO ] [FC-DEPLOY] - Checking Service ghostscript exists<br>[2021-07-27T08:52:29.499] [INFO ] [FC-DEPLOY] - Checking Function pdf2jpg-test exists<br>...<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"调用\"><a href=\"#调用\" class=\"headerlink\" title=\"调用\"></a>调用</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> s invoke</span><br>[2021-07-27T08:52:46.610] [INFO ] [S-CLI] - Start ...<br>========= FC invoke Logs begin =========<br>FC Invoke Start RequestId: 8b072a2e-0233-4218-b5f8-9c6385c50933<br>load code for handler:index.handler<br>2021-07-27T00:52:49.652Z 8b072a2e-0233-4218-b5f8-9c6385c50933 [verbose] stdout =================== START<br>2021-07-27T00:52:49.652Z 8b072a2e-0233-4218-b5f8-9c6385c50933 [verbose] GPL Ghostscript 9.26 (2018-11-20)<br>Copyright (C) 2018 Artifex Software, Inc.  All rights reserved.<br>This software comes with NO WARRANTY: see the file PUBLIC for details.<br>Warning: the map file cidfmap was not found.<br>Processing pages 1 through 1.<br>Page 1<br><br>2021-07-27T00:52:49.652Z 8b072a2e-0233-4218-b5f8-9c6385c50933 [verbose] stdout =================== END<br>FC Invoke End RequestId: 8b072a2e-0233-4218-b5f8-9c6385c50933<br><br>Duration: 669.58 ms, Billed Duration: 670 ms, Memory Size: 128 MB, Max Memory Used: 97.57 MB<br>========= FC invoke Logs end =========<br><br>FC Invoke Result:<br>convert success.<br>JPG file save to /tmp/test.jpg<br><br>End of method: invoke<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"附录与参考\"><a href=\"#附录与参考\" class=\"headerlink\" title=\"附录与参考\"></a>附录与参考</h2><ul>\n<li><a href=\"https://github.com/JasonLamv-t/serverless-devs-ghostscript_example\">本文代码</a></li>\n<li><a href=\"https://github.com/awesome-fc/ghostscript_example\">awesome-fc/ghostscript_example: 基于 GhostScript 的 PDF 转 JPG </a></li>\n</ul>\n"},{"title":"Serverless-Devs实践-基于Node的前端CICD","date":"2021-10-22T16:00:00.000Z","keywords":"Serverless, Serverless-Devs, aliyun, CI/CD","_content":"\n# Serverless-Devs实践-基于Node的前端CICD\n\n[Serverless Devs](https://github.com/Serverless-Devs/Serverless-Devs/blob/master/readme_zh.md)是一个开源开放的 Serverless 开发者平台，致力于为开发者提供强大的工具链体系。通过该平台，开发者可以一键体验多云 Serverless 产品，极速部署 Serverless 项目。本文介绍通过Serverless-Devs部署一个前端CICD系统。\n\n## 基本信息\n\n自动将前端项目托管至阿里云对象存储平台，无需服务器及额外运维操作，并实现CDN访问加速。\n\n方案架构：\n\n![1 (1)](https://tva1.sinaimg.cn/large/008i3skNgy1gsnk6k0ynqj30ik0cddgi.jpg)\n\n## 开始之前\n\n### Serverless Devs\n\n如果您的开发环境没有Serverless Devs，请参考[Serverless Devs Install-tutorial](https://github.com/devsapp/fc/blob/main/docs/Getting-started/Install-tutorial.md)进行安装。\n\n### Docker\n\n本文档涉及本地调试，因此需要开发环境具有Docker，您可根据您开发平台的不同安装不同版本，可参考[Serverless Devs Install-tutorial](https://github.com/devsapp/fc/blob/main/docs/Getting-started/Install-tutorial.md)可选部分。\n\n### Github\n\n- 本文档基于Github进行实践，因此不保证在其他代码托管平台的可用性，您可以根据您具体使用的代码平台的webhook参数对本文代码进行修改。**您需要准备一个前端项目以便进行下一步**，本文准备了[serverless-cicd-example-vue](https://github.com/JasonLamv-t/serverless-cicd-example-vue)便于实践\n- 创建密钥对并绑定到github，可参考[使用 SSH 连接到 GitHub - GitHub Docs](https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh)\n\n## 配置\n\n### RAM账号\n\n前往[RAM 访问控制](https://ram.console.aliyun.com/users)创建一个子用户，赋予其对象存储服务权限「AliyunOSSFullAccess」及管理函数计算(FC)服务权限「AliyunFCFullAccess」并创建AccessKey。\n\n![image-20210720133222847](https://tva1.sinaimg.cn/large/008i3skNgy1gsncse20oij30s30823z3.jpg)\n\n### 对象存储服务(OSS)\n\n前往[OSS管理控制台](https://oss.console.aliyun.com/overview)开通对象存储服务，并创建一个Bucket，Bucket名称为serverless-cicd，存储地域为华南1(深圳)，其他参数为默认值。**您可以选择不同的地域及Bucket名称，但需要对代码进行相应修改**\n\n### 函数计算服务(FC)\n\n前往[函数计算控制台](https://fc.console.aliyun.com/fc/overview/cn-shenzhen)开通函数计算服务，请注意，函数计算服务分服务地域进行管理，您可能需要切换地域才能查看相应的服务及函数。\n\n### 日志服务(SLS)\n\n前往[日志服务](https://sls.console.aliyun.com/lognext/profile)开通日志服务，并创建一个名为serverless-cicd-log的Project，创建成功后会提示是否创建logStore，我们选择确认。\n\n![image-20210720135617456](https://tva1.sinaimg.cn/large/008i3skNgy1gsndh8gt29j30ap0bwwev.jpg)\n\n![image-20210720135627586](https://tva1.sinaimg.cn/large/008i3skNgy1gsndhen30aj308d05dt8n.jpg)\n\nlogStore我们填写名称，其他保持默认。\n\n![image-20210720135804507](https://tva1.sinaimg.cn/large/008i3skNgy1gsndj2z7npj30es0iyt9v.jpg)\n\n创建成功后会提示是否立即接入数据，我们选择取消。\n\n![image-20210720152752200](https://tva1.sinaimg.cn/large/008i3skNgy1gsng4itwpij30aw04ut8n.jpg)\n\n### Serverless-Devs密钥配置\n\n参考[配置阿里云密钥](https://github.com/devsapp/fc/blob/main/docs/Getting-started/Setting-up-credentials.md)及[S config](http://www.serverless-devs.com/docs/command#config指令)，将前文添加的子用户AccessKey配置到S中。\n\n## Serverless-Devs实践-基于Node的前端CICD\n\n### 初始化项目\n\n执行`s init`来创建项目，我们选择*Alibaba Cloud Serverless ➡️ HTTP Function-Node.js 12 Example ➡️ 输入文件夹名称*。\n\n### 修改s.yaml\n\n注意`双##`注释内容与项目生成配置文件的差异，主要有增加日志配置，修改超时时长以及修改http触发器合法请求方式：\n\n```yaml\nservices:\n  fc-deploy-test: #  服务名称\n    component: devsapp/fc  # 组件名称\n    props: #  组件的属性值\n      region: cn-shenzhen   ## 此处可不修改\n      service:\n        name: fc-deploy-cicd\n        description: 'demo for fc-node-cicd component'\n        internetAccess: true\n        ## 增加日志配置\n        logConfig:\n          enableRequestMetrics: true\n          logstore: serverless-cicd-log\n          project: serverless-cicd-log\n      function:\n        name: http-trigger-function\n        description: this is a test\n        runtime: nodejs12\n        codeUri: ./\n        handler: index.handler\n        memorySize: 128\n        timeout: 180  ## 增加时长，避免因为网络问题超时\n      triggers:\n        - name: httpTrigger\n          type: http\n          config:\n            authType: anonymous\n            methods:\n              - GET\n              - POST  ## Github Webhook为POST方式\n      customDomains:\n        - domainName: auto\n          protocol: HTTP\n          routeConfigs:\n            - path: /*\n              methods:\n                - GET\n```\n\n### 安装依赖\n\n通过执行`yarn add ali-oss`或`npm install -s ali-oss `安装阿里云OSS SDK\n\n### 上传密钥及脚本\n\n上传名「id_rsa」的私钥文件(绑定到Github 的SSH密钥)及名为「my_ssh_executable.sh」的脚本文件到对象存储桶根目录下\n\n```shell\n# my_ssh_executable.sh\n#! /bin/sh\nID_RSA=/tmp/id_rsa\nexec /usr/bin/ssh -o StrictHostKeyChecking=no -i $ID_RSA \"$@\"\n```\n\n![image-20210720170214542](https://tva1.sinaimg.cn/large/008i3skNgy1gsniupvuk3j30xf05sdgd.jpg)\n\n### 修改代码\n\n```javascript\n//index.js\nconst getRawBody = require('raw-body')\nconst getFormBody = require('body/form')\nconst body = require('body')\nconst execSync = require('child_process').execSync\nconst oss = require('ali-oss')\nconst fs = require('fs')\nconst path = require('path')\n\nexports.handler = async (req, resp, context) => {\n  // 设置响应类型\n  resp.setHeader('Content-type', 'application/json')\n\n  const client = new oss({\n    region: 'oss-cn-shenzhen', // 根据实际设置填写\n    accessKeyId: '<Your accessKeyId>',\n    accessKeySecret: '<Your accessKeySecret>',\n    bucket: 'serverless-cicd'\n  })\n\n  async function get(filename, localpath, cmd) {\n    try {\n      let res = await client.get(filename, localpath)\n      if (res.res.status == 200) execSync(`${cmd} ${localpath}`)\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\t// 下载密钥及脚本\n  get('id_rsa', '/tmp/id_rsa', 'chmod 0600')\n  get('my_ssh_executable.sh', '/tmp/my_ssh_executable.sh', 'chmod +x')\n\n  console.log('下载密钥和脚本完成')\n\t\n  // 获取webhook提交的推送信息\n  getRawBody(req, async function (err, body) {\n    body = body.toString().replace('undefined', '\",')\n    body = JSON.parse(body)\n    const ref = body.ref\n    const ref_type = body.ref_type\n    const repository_name = body.repository.name\n    const clone_url = body.repository.clone_url\n\n    if (ref_type != 'tag') {\n      resp.send('No tag event')\n      return 0\n    }\n\n    // 删除可能存在的代码，并重新克隆\n    if (fs.existsSync(`/tmp/${repository_name}/`)) execSync(`rm -rf /tmp/${repository_name}`)\n    gitclone = `GIT_SSH=\"/tmp/my_ssh_executable.sh\" git clone -b ${ref} ${clone_url} /tmp/${repository_name}`\n    try {\n      execSync(gitclone)\n      console.log('克隆完成')\n    } catch (e) {\n      resp.send('git clone fail')\n    }\n    \n    // 执行自定义的打包脚本\n    // execSync(`cd /tmp/${repository_name} && sh build.sh`)\n\n    function getFilesList(dir) {\n      let res = []\n      let files = fs.readdirSync(dir)\n      files.forEach(filename => {\n        if (filename[0] == '.') return\n        let filepath = path.join(dir, filename)\n        let info = fs.statSync(filepath)\n        if (info.isFile()) res.push({ filename, filepath })\n        else res = res.concat(getFilesList(filepath))\n      })\n      return res\n    }\n\n    // 获取文件列表\n    const files = getFilesList(`/tmp/${repository_name}/`)\n    // 遍历上传文件\n    Promise.all(files.map(file => {\n      return new Promise(async (resolve) => {\n        let res = await client.put(file.filepath.replace(`/tmp`, ``), file.filepath)\n        resolve(`${file.filename} uploading: ${res.res.status == 200}`)\n      })\n    })).then(r => {\n      console.log(r)\n      resp.send(JSON.stringify({\n        ref, ref_type, repository_name, clone_url\n      }))\n    }) \n  })\n}\n```\n\n### 部署\n\n执行`s deploy`一键部署，通过控制台可以查看到部署结果\n\n![image-20210720172223703](https://tva1.sinaimg.cn/large/008i3skNgy1gsnjfonhokj30s00a10tr.jpg)\n\n### 配置GitHub\n\n进入GitHub前端仓库 ➡️ Settings ➡️ Webhooks：\n\n- payload：触发器路径，可复制命令行输出或到控制台查看\n- Content type：application/json\n- events：仅勾选 ☑️ Branch or tag creation\n\n### 触发测试\n\n```shell\ncd frontend-project-dir\ngit tag v1.0 -m 'new version'\ngit push origin tag v1.0\n```\n\n### 输出\n\n![image-20210720181402727](https://tva1.sinaimg.cn/large/008i3skNgy1gsnkxfcz71j30n50ebabh.jpg)\n\n![image-20210720181415414](https://tva1.sinaimg.cn/large/008i3skNgy1gsnkxn8w92j30h606rdg2.jpg)\n\n## 附录与参考\n\n[本文代码](https://github.com/JasonLamv-t/serverless-devs-node-based-cicd)\n\n[Function Compute搭建前端CICD系统-最佳实践-阿里云 (aliyun.com)](https://bp.aliyun.com/detail/73?spm=a2c4g.11186623.2.8.2e8962b39fPYAm)\n\n[前端项目示例](https://github.com/JasonLamv-t/serverless-cicd-example-vue)\n\n","source":"_posts/node based frondend cicd.md","raw":"---\ntitle: Serverless-Devs实践-基于Node的前端CICD\ndate: 2021-10-23\ncategories:\n- 实践指南\ntags: [Node, ServerlessDevs, Journal]\nkeywords: Serverless, Serverless-Devs, aliyun, CI/CD\n---\n\n# Serverless-Devs实践-基于Node的前端CICD\n\n[Serverless Devs](https://github.com/Serverless-Devs/Serverless-Devs/blob/master/readme_zh.md)是一个开源开放的 Serverless 开发者平台，致力于为开发者提供强大的工具链体系。通过该平台，开发者可以一键体验多云 Serverless 产品，极速部署 Serverless 项目。本文介绍通过Serverless-Devs部署一个前端CICD系统。\n\n## 基本信息\n\n自动将前端项目托管至阿里云对象存储平台，无需服务器及额外运维操作，并实现CDN访问加速。\n\n方案架构：\n\n![1 (1)](https://tva1.sinaimg.cn/large/008i3skNgy1gsnk6k0ynqj30ik0cddgi.jpg)\n\n## 开始之前\n\n### Serverless Devs\n\n如果您的开发环境没有Serverless Devs，请参考[Serverless Devs Install-tutorial](https://github.com/devsapp/fc/blob/main/docs/Getting-started/Install-tutorial.md)进行安装。\n\n### Docker\n\n本文档涉及本地调试，因此需要开发环境具有Docker，您可根据您开发平台的不同安装不同版本，可参考[Serverless Devs Install-tutorial](https://github.com/devsapp/fc/blob/main/docs/Getting-started/Install-tutorial.md)可选部分。\n\n### Github\n\n- 本文档基于Github进行实践，因此不保证在其他代码托管平台的可用性，您可以根据您具体使用的代码平台的webhook参数对本文代码进行修改。**您需要准备一个前端项目以便进行下一步**，本文准备了[serverless-cicd-example-vue](https://github.com/JasonLamv-t/serverless-cicd-example-vue)便于实践\n- 创建密钥对并绑定到github，可参考[使用 SSH 连接到 GitHub - GitHub Docs](https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh)\n\n## 配置\n\n### RAM账号\n\n前往[RAM 访问控制](https://ram.console.aliyun.com/users)创建一个子用户，赋予其对象存储服务权限「AliyunOSSFullAccess」及管理函数计算(FC)服务权限「AliyunFCFullAccess」并创建AccessKey。\n\n![image-20210720133222847](https://tva1.sinaimg.cn/large/008i3skNgy1gsncse20oij30s30823z3.jpg)\n\n### 对象存储服务(OSS)\n\n前往[OSS管理控制台](https://oss.console.aliyun.com/overview)开通对象存储服务，并创建一个Bucket，Bucket名称为serverless-cicd，存储地域为华南1(深圳)，其他参数为默认值。**您可以选择不同的地域及Bucket名称，但需要对代码进行相应修改**\n\n### 函数计算服务(FC)\n\n前往[函数计算控制台](https://fc.console.aliyun.com/fc/overview/cn-shenzhen)开通函数计算服务，请注意，函数计算服务分服务地域进行管理，您可能需要切换地域才能查看相应的服务及函数。\n\n### 日志服务(SLS)\n\n前往[日志服务](https://sls.console.aliyun.com/lognext/profile)开通日志服务，并创建一个名为serverless-cicd-log的Project，创建成功后会提示是否创建logStore，我们选择确认。\n\n![image-20210720135617456](https://tva1.sinaimg.cn/large/008i3skNgy1gsndh8gt29j30ap0bwwev.jpg)\n\n![image-20210720135627586](https://tva1.sinaimg.cn/large/008i3skNgy1gsndhen30aj308d05dt8n.jpg)\n\nlogStore我们填写名称，其他保持默认。\n\n![image-20210720135804507](https://tva1.sinaimg.cn/large/008i3skNgy1gsndj2z7npj30es0iyt9v.jpg)\n\n创建成功后会提示是否立即接入数据，我们选择取消。\n\n![image-20210720152752200](https://tva1.sinaimg.cn/large/008i3skNgy1gsng4itwpij30aw04ut8n.jpg)\n\n### Serverless-Devs密钥配置\n\n参考[配置阿里云密钥](https://github.com/devsapp/fc/blob/main/docs/Getting-started/Setting-up-credentials.md)及[S config](http://www.serverless-devs.com/docs/command#config指令)，将前文添加的子用户AccessKey配置到S中。\n\n## Serverless-Devs实践-基于Node的前端CICD\n\n### 初始化项目\n\n执行`s init`来创建项目，我们选择*Alibaba Cloud Serverless ➡️ HTTP Function-Node.js 12 Example ➡️ 输入文件夹名称*。\n\n### 修改s.yaml\n\n注意`双##`注释内容与项目生成配置文件的差异，主要有增加日志配置，修改超时时长以及修改http触发器合法请求方式：\n\n```yaml\nservices:\n  fc-deploy-test: #  服务名称\n    component: devsapp/fc  # 组件名称\n    props: #  组件的属性值\n      region: cn-shenzhen   ## 此处可不修改\n      service:\n        name: fc-deploy-cicd\n        description: 'demo for fc-node-cicd component'\n        internetAccess: true\n        ## 增加日志配置\n        logConfig:\n          enableRequestMetrics: true\n          logstore: serverless-cicd-log\n          project: serverless-cicd-log\n      function:\n        name: http-trigger-function\n        description: this is a test\n        runtime: nodejs12\n        codeUri: ./\n        handler: index.handler\n        memorySize: 128\n        timeout: 180  ## 增加时长，避免因为网络问题超时\n      triggers:\n        - name: httpTrigger\n          type: http\n          config:\n            authType: anonymous\n            methods:\n              - GET\n              - POST  ## Github Webhook为POST方式\n      customDomains:\n        - domainName: auto\n          protocol: HTTP\n          routeConfigs:\n            - path: /*\n              methods:\n                - GET\n```\n\n### 安装依赖\n\n通过执行`yarn add ali-oss`或`npm install -s ali-oss `安装阿里云OSS SDK\n\n### 上传密钥及脚本\n\n上传名「id_rsa」的私钥文件(绑定到Github 的SSH密钥)及名为「my_ssh_executable.sh」的脚本文件到对象存储桶根目录下\n\n```shell\n# my_ssh_executable.sh\n#! /bin/sh\nID_RSA=/tmp/id_rsa\nexec /usr/bin/ssh -o StrictHostKeyChecking=no -i $ID_RSA \"$@\"\n```\n\n![image-20210720170214542](https://tva1.sinaimg.cn/large/008i3skNgy1gsniupvuk3j30xf05sdgd.jpg)\n\n### 修改代码\n\n```javascript\n//index.js\nconst getRawBody = require('raw-body')\nconst getFormBody = require('body/form')\nconst body = require('body')\nconst execSync = require('child_process').execSync\nconst oss = require('ali-oss')\nconst fs = require('fs')\nconst path = require('path')\n\nexports.handler = async (req, resp, context) => {\n  // 设置响应类型\n  resp.setHeader('Content-type', 'application/json')\n\n  const client = new oss({\n    region: 'oss-cn-shenzhen', // 根据实际设置填写\n    accessKeyId: '<Your accessKeyId>',\n    accessKeySecret: '<Your accessKeySecret>',\n    bucket: 'serverless-cicd'\n  })\n\n  async function get(filename, localpath, cmd) {\n    try {\n      let res = await client.get(filename, localpath)\n      if (res.res.status == 200) execSync(`${cmd} ${localpath}`)\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\t// 下载密钥及脚本\n  get('id_rsa', '/tmp/id_rsa', 'chmod 0600')\n  get('my_ssh_executable.sh', '/tmp/my_ssh_executable.sh', 'chmod +x')\n\n  console.log('下载密钥和脚本完成')\n\t\n  // 获取webhook提交的推送信息\n  getRawBody(req, async function (err, body) {\n    body = body.toString().replace('undefined', '\",')\n    body = JSON.parse(body)\n    const ref = body.ref\n    const ref_type = body.ref_type\n    const repository_name = body.repository.name\n    const clone_url = body.repository.clone_url\n\n    if (ref_type != 'tag') {\n      resp.send('No tag event')\n      return 0\n    }\n\n    // 删除可能存在的代码，并重新克隆\n    if (fs.existsSync(`/tmp/${repository_name}/`)) execSync(`rm -rf /tmp/${repository_name}`)\n    gitclone = `GIT_SSH=\"/tmp/my_ssh_executable.sh\" git clone -b ${ref} ${clone_url} /tmp/${repository_name}`\n    try {\n      execSync(gitclone)\n      console.log('克隆完成')\n    } catch (e) {\n      resp.send('git clone fail')\n    }\n    \n    // 执行自定义的打包脚本\n    // execSync(`cd /tmp/${repository_name} && sh build.sh`)\n\n    function getFilesList(dir) {\n      let res = []\n      let files = fs.readdirSync(dir)\n      files.forEach(filename => {\n        if (filename[0] == '.') return\n        let filepath = path.join(dir, filename)\n        let info = fs.statSync(filepath)\n        if (info.isFile()) res.push({ filename, filepath })\n        else res = res.concat(getFilesList(filepath))\n      })\n      return res\n    }\n\n    // 获取文件列表\n    const files = getFilesList(`/tmp/${repository_name}/`)\n    // 遍历上传文件\n    Promise.all(files.map(file => {\n      return new Promise(async (resolve) => {\n        let res = await client.put(file.filepath.replace(`/tmp`, ``), file.filepath)\n        resolve(`${file.filename} uploading: ${res.res.status == 200}`)\n      })\n    })).then(r => {\n      console.log(r)\n      resp.send(JSON.stringify({\n        ref, ref_type, repository_name, clone_url\n      }))\n    }) \n  })\n}\n```\n\n### 部署\n\n执行`s deploy`一键部署，通过控制台可以查看到部署结果\n\n![image-20210720172223703](https://tva1.sinaimg.cn/large/008i3skNgy1gsnjfonhokj30s00a10tr.jpg)\n\n### 配置GitHub\n\n进入GitHub前端仓库 ➡️ Settings ➡️ Webhooks：\n\n- payload：触发器路径，可复制命令行输出或到控制台查看\n- Content type：application/json\n- events：仅勾选 ☑️ Branch or tag creation\n\n### 触发测试\n\n```shell\ncd frontend-project-dir\ngit tag v1.0 -m 'new version'\ngit push origin tag v1.0\n```\n\n### 输出\n\n![image-20210720181402727](https://tva1.sinaimg.cn/large/008i3skNgy1gsnkxfcz71j30n50ebabh.jpg)\n\n![image-20210720181415414](https://tva1.sinaimg.cn/large/008i3skNgy1gsnkxn8w92j30h606rdg2.jpg)\n\n## 附录与参考\n\n[本文代码](https://github.com/JasonLamv-t/serverless-devs-node-based-cicd)\n\n[Function Compute搭建前端CICD系统-最佳实践-阿里云 (aliyun.com)](https://bp.aliyun.com/detail/73?spm=a2c4g.11186623.2.8.2e8962b39fPYAm)\n\n[前端项目示例](https://github.com/JasonLamv-t/serverless-cicd-example-vue)\n\n","slug":"node based frondend cicd","published":1,"updated":"2021-10-22T19:28:24.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv2ro26f00062r4a9bg506dw","content":"<h1 id=\"Serverless-Devs&#x5B9E;&#x8DF5;-&#x57FA;&#x4E8E;Node&#x7684;&#x524D;&#x7AEF;CICD\"><a href=\"#Serverless-Devs&#x5B9E;&#x8DF5;-&#x57FA;&#x4E8E;Node&#x7684;&#x524D;&#x7AEF;CICD\" class=\"headerlink\" title=\"Serverless-Devs&#x5B9E;&#x8DF5;-&#x57FA;&#x4E8E;Node&#x7684;&#x524D;&#x7AEF;CICD\"></a>Serverless-Devs&#x5B9E;&#x8DF5;-&#x57FA;&#x4E8E;Node&#x7684;&#x524D;&#x7AEF;CICD</h1><p><a href=\"https://github.com/Serverless-Devs/Serverless-Devs/blob/master/readme_zh.md\">Serverless Devs</a>&#x662F;&#x4E00;&#x4E2A;&#x5F00;&#x6E90;&#x5F00;&#x653E;&#x7684; Serverless &#x5F00;&#x53D1;&#x8005;&#x5E73;&#x53F0;&#xFF0C;&#x81F4;&#x529B;&#x4E8E;&#x4E3A;&#x5F00;&#x53D1;&#x8005;&#x63D0;&#x4F9B;&#x5F3A;&#x5927;&#x7684;&#x5DE5;&#x5177;&#x94FE;&#x4F53;&#x7CFB;&#x3002;&#x901A;&#x8FC7;&#x8BE5;&#x5E73;&#x53F0;&#xFF0C;&#x5F00;&#x53D1;&#x8005;&#x53EF;&#x4EE5;&#x4E00;&#x952E;&#x4F53;&#x9A8C;&#x591A;&#x4E91; Serverless &#x4EA7;&#x54C1;&#xFF0C;&#x6781;&#x901F;&#x90E8;&#x7F72; Serverless &#x9879;&#x76EE;&#x3002;&#x672C;&#x6587;&#x4ECB;&#x7ECD;&#x901A;&#x8FC7;Serverless-Devs&#x90E8;&#x7F72;&#x4E00;&#x4E2A;&#x524D;&#x7AEF;CICD&#x7CFB;&#x7EDF;&#x3002;</p>\n<h2 id=\"&#x57FA;&#x672C;&#x4FE1;&#x606F;\"><a href=\"#&#x57FA;&#x672C;&#x4FE1;&#x606F;\" class=\"headerlink\" title=\"&#x57FA;&#x672C;&#x4FE1;&#x606F;\"></a>&#x57FA;&#x672C;&#x4FE1;&#x606F;</h2><p>&#x81EA;&#x52A8;&#x5C06;&#x524D;&#x7AEF;&#x9879;&#x76EE;&#x6258;&#x7BA1;&#x81F3;&#x963F;&#x91CC;&#x4E91;&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#x5E73;&#x53F0;&#xFF0C;&#x65E0;&#x9700;&#x670D;&#x52A1;&#x5668;&#x53CA;&#x989D;&#x5916;&#x8FD0;&#x7EF4;&#x64CD;&#x4F5C;&#xFF0C;&#x5E76;&#x5B9E;&#x73B0;CDN&#x8BBF;&#x95EE;&#x52A0;&#x901F;&#x3002;</p>\n<p>&#x65B9;&#x6848;&#x67B6;&#x6784;&#xFF1A;</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsnk6k0ynqj30ik0cddgi.jpg\"><span class=\"image-caption\">1 (1)</span></p>\n<h2 id=\"&#x5F00;&#x59CB;&#x4E4B;&#x524D;\"><a href=\"#&#x5F00;&#x59CB;&#x4E4B;&#x524D;\" class=\"headerlink\" title=\"&#x5F00;&#x59CB;&#x4E4B;&#x524D;\"></a>&#x5F00;&#x59CB;&#x4E4B;&#x524D;</h2><h3 id=\"Serverless-Devs\"><a href=\"#Serverless-Devs\" class=\"headerlink\" title=\"Serverless Devs\"></a>Serverless Devs</h3><p>&#x5982;&#x679C;&#x60A8;&#x7684;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#x6CA1;&#x6709;Serverless Devs&#xFF0C;&#x8BF7;&#x53C2;&#x8003;<a href=\"https://github.com/devsapp/fc/blob/main/docs/Getting-started/Install-tutorial.md\">Serverless Devs Install-tutorial</a>&#x8FDB;&#x884C;&#x5B89;&#x88C5;&#x3002;</p>\n<h3 id=\"Docker\"><a href=\"#Docker\" class=\"headerlink\" title=\"Docker\"></a>Docker</h3><p>&#x672C;&#x6587;&#x6863;&#x6D89;&#x53CA;&#x672C;&#x5730;&#x8C03;&#x8BD5;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x5F00;&#x53D1;&#x73AF;&#x5883;&#x5177;&#x6709;Docker&#xFF0C;&#x60A8;&#x53EF;&#x6839;&#x636E;&#x60A8;&#x5F00;&#x53D1;&#x5E73;&#x53F0;&#x7684;&#x4E0D;&#x540C;&#x5B89;&#x88C5;&#x4E0D;&#x540C;&#x7248;&#x672C;&#xFF0C;&#x53EF;&#x53C2;&#x8003;<a href=\"https://github.com/devsapp/fc/blob/main/docs/Getting-started/Install-tutorial.md\">Serverless Devs Install-tutorial</a>&#x53EF;&#x9009;&#x90E8;&#x5206;&#x3002;</p>\n<h3 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h3><ul>\n<li>&#x672C;&#x6587;&#x6863;&#x57FA;&#x4E8E;Github&#x8FDB;&#x884C;&#x5B9E;&#x8DF5;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x4FDD;&#x8BC1;&#x5728;&#x5176;&#x4ED6;&#x4EE3;&#x7801;&#x6258;&#x7BA1;&#x5E73;&#x53F0;&#x7684;&#x53EF;&#x7528;&#x6027;&#xFF0C;&#x60A8;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x60A8;&#x5177;&#x4F53;&#x4F7F;&#x7528;&#x7684;&#x4EE3;&#x7801;&#x5E73;&#x53F0;&#x7684;webhook&#x53C2;&#x6570;&#x5BF9;&#x672C;&#x6587;&#x4EE3;&#x7801;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#x3002;<strong>&#x60A8;&#x9700;&#x8981;&#x51C6;&#x5907;&#x4E00;&#x4E2A;&#x524D;&#x7AEF;&#x9879;&#x76EE;&#x4EE5;&#x4FBF;&#x8FDB;&#x884C;&#x4E0B;&#x4E00;&#x6B65;</strong>&#xFF0C;&#x672C;&#x6587;&#x51C6;&#x5907;&#x4E86;<a href=\"https://github.com/JasonLamv-t/serverless-cicd-example-vue\">serverless-cicd-example-vue</a>&#x4FBF;&#x4E8E;&#x5B9E;&#x8DF5;</li>\n<li>&#x521B;&#x5EFA;&#x5BC6;&#x94A5;&#x5BF9;&#x5E76;&#x7ED1;&#x5B9A;&#x5230;github&#xFF0C;&#x53EF;&#x53C2;&#x8003;<a href=\"https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh\">&#x4F7F;&#x7528; SSH &#x8FDE;&#x63A5;&#x5230; GitHub - GitHub Docs</a></li>\n</ul>\n<h2 id=\"&#x914D;&#x7F6E;\"><a href=\"#&#x914D;&#x7F6E;\" class=\"headerlink\" title=\"&#x914D;&#x7F6E;\"></a>&#x914D;&#x7F6E;</h2><h3 id=\"RAM&#x8D26;&#x53F7;\"><a href=\"#RAM&#x8D26;&#x53F7;\" class=\"headerlink\" title=\"RAM&#x8D26;&#x53F7;\"></a>RAM&#x8D26;&#x53F7;</h3><p>&#x524D;&#x5F80;<a href=\"https://ram.console.aliyun.com/users\">RAM &#x8BBF;&#x95EE;&#x63A7;&#x5236;</a>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5B50;&#x7528;&#x6237;&#xFF0C;&#x8D4B;&#x4E88;&#x5176;&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#x670D;&#x52A1;&#x6743;&#x9650;&#x300C;AliyunOSSFullAccess&#x300D;&#x53CA;&#x7BA1;&#x7406;&#x51FD;&#x6570;&#x8BA1;&#x7B97;(FC)&#x670D;&#x52A1;&#x6743;&#x9650;&#x300C;AliyunFCFullAccess&#x300D;&#x5E76;&#x521B;&#x5EFA;AccessKey&#x3002;</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsncse20oij30s30823z3.jpg\"><span class=\"image-caption\">image-20210720133222847</span></p>\n<h3 id=\"&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#x670D;&#x52A1;-OSS\"><a href=\"#&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#x670D;&#x52A1;-OSS\" class=\"headerlink\" title=\"&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#x670D;&#x52A1;(OSS)\"></a>&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#x670D;&#x52A1;(OSS)</h3><p>&#x524D;&#x5F80;<a href=\"https://oss.console.aliyun.com/overview\">OSS&#x7BA1;&#x7406;&#x63A7;&#x5236;&#x53F0;</a>&#x5F00;&#x901A;&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#x670D;&#x52A1;&#xFF0C;&#x5E76;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;Bucket&#xFF0C;Bucket&#x540D;&#x79F0;&#x4E3A;serverless-cicd&#xFF0C;&#x5B58;&#x50A8;&#x5730;&#x57DF;&#x4E3A;&#x534E;&#x5357;1(&#x6DF1;&#x5733;)&#xFF0C;&#x5176;&#x4ED6;&#x53C2;&#x6570;&#x4E3A;&#x9ED8;&#x8BA4;&#x503C;&#x3002;<strong>&#x60A8;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x4E0D;&#x540C;&#x7684;&#x5730;&#x57DF;&#x53CA;Bucket&#x540D;&#x79F0;&#xFF0C;&#x4F46;&#x9700;&#x8981;&#x5BF9;&#x4EE3;&#x7801;&#x8FDB;&#x884C;&#x76F8;&#x5E94;&#x4FEE;&#x6539;</strong></p>\n<h3 id=\"&#x51FD;&#x6570;&#x8BA1;&#x7B97;&#x670D;&#x52A1;-FC\"><a href=\"#&#x51FD;&#x6570;&#x8BA1;&#x7B97;&#x670D;&#x52A1;-FC\" class=\"headerlink\" title=\"&#x51FD;&#x6570;&#x8BA1;&#x7B97;&#x670D;&#x52A1;(FC)\"></a>&#x51FD;&#x6570;&#x8BA1;&#x7B97;&#x670D;&#x52A1;(FC)</h3><p>&#x524D;&#x5F80;<a href=\"https://fc.console.aliyun.com/fc/overview/cn-shenzhen\">&#x51FD;&#x6570;&#x8BA1;&#x7B97;&#x63A7;&#x5236;&#x53F0;</a>&#x5F00;&#x901A;&#x51FD;&#x6570;&#x8BA1;&#x7B97;&#x670D;&#x52A1;&#xFF0C;&#x8BF7;&#x6CE8;&#x610F;&#xFF0C;&#x51FD;&#x6570;&#x8BA1;&#x7B97;&#x670D;&#x52A1;&#x5206;&#x670D;&#x52A1;&#x5730;&#x57DF;&#x8FDB;&#x884C;&#x7BA1;&#x7406;&#xFF0C;&#x60A8;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x5207;&#x6362;&#x5730;&#x57DF;&#x624D;&#x80FD;&#x67E5;&#x770B;&#x76F8;&#x5E94;&#x7684;&#x670D;&#x52A1;&#x53CA;&#x51FD;&#x6570;&#x3002;</p>\n<h3 id=\"&#x65E5;&#x5FD7;&#x670D;&#x52A1;-SLS\"><a href=\"#&#x65E5;&#x5FD7;&#x670D;&#x52A1;-SLS\" class=\"headerlink\" title=\"&#x65E5;&#x5FD7;&#x670D;&#x52A1;(SLS)\"></a>&#x65E5;&#x5FD7;&#x670D;&#x52A1;(SLS)</h3><p>&#x524D;&#x5F80;<a href=\"https://sls.console.aliyun.com/lognext/profile\">&#x65E5;&#x5FD7;&#x670D;&#x52A1;</a>&#x5F00;&#x901A;&#x65E5;&#x5FD7;&#x670D;&#x52A1;&#xFF0C;&#x5E76;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x540D;&#x4E3A;serverless-cicd-log&#x7684;Project&#xFF0C;&#x521B;&#x5EFA;&#x6210;&#x529F;&#x540E;&#x4F1A;&#x63D0;&#x793A;&#x662F;&#x5426;&#x521B;&#x5EFA;logStore&#xFF0C;&#x6211;&#x4EEC;&#x9009;&#x62E9;&#x786E;&#x8BA4;&#x3002;</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsndh8gt29j30ap0bwwev.jpg\"><span class=\"image-caption\">image-20210720135617456</span></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsndhen30aj308d05dt8n.jpg\"><span class=\"image-caption\">image-20210720135627586</span></p>\n<p>logStore&#x6211;&#x4EEC;&#x586B;&#x5199;&#x540D;&#x79F0;&#xFF0C;&#x5176;&#x4ED6;&#x4FDD;&#x6301;&#x9ED8;&#x8BA4;&#x3002;</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsndj2z7npj30es0iyt9v.jpg\"><span class=\"image-caption\">image-20210720135804507</span></p>\n<p>&#x521B;&#x5EFA;&#x6210;&#x529F;&#x540E;&#x4F1A;&#x63D0;&#x793A;&#x662F;&#x5426;&#x7ACB;&#x5373;&#x63A5;&#x5165;&#x6570;&#x636E;&#xFF0C;&#x6211;&#x4EEC;&#x9009;&#x62E9;&#x53D6;&#x6D88;&#x3002;</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsng4itwpij30aw04ut8n.jpg\"><span class=\"image-caption\">image-20210720152752200</span></p>\n<h3 id=\"Serverless-Devs&#x5BC6;&#x94A5;&#x914D;&#x7F6E;\"><a href=\"#Serverless-Devs&#x5BC6;&#x94A5;&#x914D;&#x7F6E;\" class=\"headerlink\" title=\"Serverless-Devs&#x5BC6;&#x94A5;&#x914D;&#x7F6E;\"></a>Serverless-Devs&#x5BC6;&#x94A5;&#x914D;&#x7F6E;</h3><p>&#x53C2;&#x8003;<a href=\"https://github.com/devsapp/fc/blob/main/docs/Getting-started/Setting-up-credentials.md\">&#x914D;&#x7F6E;&#x963F;&#x91CC;&#x4E91;&#x5BC6;&#x94A5;</a>&#x53CA;<a href=\"http://www.serverless-devs.com/docs/command#config%E6%8C%87%E4%BB%A4\">S config</a>&#xFF0C;&#x5C06;&#x524D;&#x6587;&#x6DFB;&#x52A0;&#x7684;&#x5B50;&#x7528;&#x6237;AccessKey&#x914D;&#x7F6E;&#x5230;S&#x4E2D;&#x3002;</p>\n<h2 id=\"Serverless-Devs&#x5B9E;&#x8DF5;-&#x57FA;&#x4E8E;Node&#x7684;&#x524D;&#x7AEF;CICD-1\"><a href=\"#Serverless-Devs&#x5B9E;&#x8DF5;-&#x57FA;&#x4E8E;Node&#x7684;&#x524D;&#x7AEF;CICD-1\" class=\"headerlink\" title=\"Serverless-Devs&#x5B9E;&#x8DF5;-&#x57FA;&#x4E8E;Node&#x7684;&#x524D;&#x7AEF;CICD\"></a>Serverless-Devs&#x5B9E;&#x8DF5;-&#x57FA;&#x4E8E;Node&#x7684;&#x524D;&#x7AEF;CICD</h2><h3 id=\"&#x521D;&#x59CB;&#x5316;&#x9879;&#x76EE;\"><a href=\"#&#x521D;&#x59CB;&#x5316;&#x9879;&#x76EE;\" class=\"headerlink\" title=\"&#x521D;&#x59CB;&#x5316;&#x9879;&#x76EE;\"></a>&#x521D;&#x59CB;&#x5316;&#x9879;&#x76EE;</h3><p>&#x6267;&#x884C;<code>s init</code>&#x6765;&#x521B;&#x5EFA;&#x9879;&#x76EE;&#xFF0C;&#x6211;&#x4EEC;&#x9009;&#x62E9;<em>Alibaba Cloud Serverless &#x27A1;&#xFE0F; HTTP Function-Node.js 12 Example &#x27A1;&#xFE0F; &#x8F93;&#x5165;&#x6587;&#x4EF6;&#x5939;&#x540D;&#x79F0;</em>&#x3002;</p>\n<h3 id=\"&#x4FEE;&#x6539;s-yaml\"><a href=\"#&#x4FEE;&#x6539;s-yaml\" class=\"headerlink\" title=\"&#x4FEE;&#x6539;s.yaml\"></a>&#x4FEE;&#x6539;s.yaml</h3><p>&#x6CE8;&#x610F;<code>&#x53CC;##</code>&#x6CE8;&#x91CA;&#x5185;&#x5BB9;&#x4E0E;&#x9879;&#x76EE;&#x751F;&#x6210;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7684;&#x5DEE;&#x5F02;&#xFF0C;&#x4E3B;&#x8981;&#x6709;&#x589E;&#x52A0;&#x65E5;&#x5FD7;&#x914D;&#x7F6E;&#xFF0C;&#x4FEE;&#x6539;&#x8D85;&#x65F6;&#x65F6;&#x957F;&#x4EE5;&#x53CA;&#x4FEE;&#x6539;http&#x89E6;&#x53D1;&#x5668;&#x5408;&#x6CD5;&#x8BF7;&#x6C42;&#x65B9;&#x5F0F;&#xFF1A;</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">services:</span><br>  <span class=\"hljs-attr\">fc-deploy-test:</span> <span class=\"hljs-comment\">#  &#x670D;&#x52A1;&#x540D;&#x79F0;</span><br>    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">devsapp/fc</span>  <span class=\"hljs-comment\"># &#x7EC4;&#x4EF6;&#x540D;&#x79F0;</span><br>    <span class=\"hljs-attr\">props:</span> <span class=\"hljs-comment\">#  &#x7EC4;&#x4EF6;&#x7684;&#x5C5E;&#x6027;&#x503C;</span><br>      <span class=\"hljs-attr\">region:</span> <span class=\"hljs-string\">cn-shenzhen</span>   <span class=\"hljs-comment\">## &#x6B64;&#x5904;&#x53EF;&#x4E0D;&#x4FEE;&#x6539;</span><br>      <span class=\"hljs-attr\">service:</span><br>        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">fc-deploy-cicd</span><br>        <span class=\"hljs-attr\">description:</span> <span class=\"hljs-string\">&apos;demo for fc-node-cicd component&apos;</span><br>        <span class=\"hljs-attr\">internetAccess:</span> <span class=\"hljs-literal\">true</span><br>        <span class=\"hljs-comment\">## &#x589E;&#x52A0;&#x65E5;&#x5FD7;&#x914D;&#x7F6E;</span><br>        <span class=\"hljs-attr\">logConfig:</span><br>          <span class=\"hljs-attr\">enableRequestMetrics:</span> <span class=\"hljs-literal\">true</span><br>          <span class=\"hljs-attr\">logstore:</span> <span class=\"hljs-string\">serverless-cicd-log</span><br>          <span class=\"hljs-attr\">project:</span> <span class=\"hljs-string\">serverless-cicd-log</span><br>      <span class=\"hljs-attr\">function:</span><br>        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">http-trigger-function</span><br>        <span class=\"hljs-attr\">description:</span> <span class=\"hljs-string\">this</span> <span class=\"hljs-string\">is</span> <span class=\"hljs-string\">a</span> <span class=\"hljs-string\">test</span><br>        <span class=\"hljs-attr\">runtime:</span> <span class=\"hljs-string\">nodejs12</span><br>        <span class=\"hljs-attr\">codeUri:</span> <span class=\"hljs-string\">./</span><br>        <span class=\"hljs-attr\">handler:</span> <span class=\"hljs-string\">index.handler</span><br>        <span class=\"hljs-attr\">memorySize:</span> <span class=\"hljs-number\">128</span><br>        <span class=\"hljs-attr\">timeout:</span> <span class=\"hljs-number\">180</span>  <span class=\"hljs-comment\">## &#x589E;&#x52A0;&#x65F6;&#x957F;&#xFF0C;&#x907F;&#x514D;&#x56E0;&#x4E3A;&#x7F51;&#x7EDC;&#x95EE;&#x9898;&#x8D85;&#x65F6;</span><br>      <span class=\"hljs-attr\">triggers:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">httpTrigger</span><br>          <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">http</span><br>          <span class=\"hljs-attr\">config:</span><br>            <span class=\"hljs-attr\">authType:</span> <span class=\"hljs-string\">anonymous</span><br>            <span class=\"hljs-attr\">methods:</span><br>              <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">GET</span><br>              <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">POST</span>  <span class=\"hljs-comment\">## Github Webhook&#x4E3A;POST&#x65B9;&#x5F0F;</span><br>      <span class=\"hljs-attr\">customDomains:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">domainName:</span> <span class=\"hljs-string\">auto</span><br>          <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">HTTP</span><br>          <span class=\"hljs-attr\">routeConfigs:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">/*</span><br>              <span class=\"hljs-attr\">methods:</span><br>                <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">GET</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"&#x5B89;&#x88C5;&#x4F9D;&#x8D56;\"><a href=\"#&#x5B89;&#x88C5;&#x4F9D;&#x8D56;\" class=\"headerlink\" title=\"&#x5B89;&#x88C5;&#x4F9D;&#x8D56;\"></a>&#x5B89;&#x88C5;&#x4F9D;&#x8D56;</h3><p>&#x901A;&#x8FC7;&#x6267;&#x884C;<code>yarn add ali-oss</code>&#x6216;<code>npm install -s ali-oss </code>&#x5B89;&#x88C5;&#x963F;&#x91CC;&#x4E91;OSS SDK</p>\n<h3 id=\"&#x4E0A;&#x4F20;&#x5BC6;&#x94A5;&#x53CA;&#x811A;&#x672C;\"><a href=\"#&#x4E0A;&#x4F20;&#x5BC6;&#x94A5;&#x53CA;&#x811A;&#x672C;\" class=\"headerlink\" title=\"&#x4E0A;&#x4F20;&#x5BC6;&#x94A5;&#x53CA;&#x811A;&#x672C;\"></a>&#x4E0A;&#x4F20;&#x5BC6;&#x94A5;&#x53CA;&#x811A;&#x672C;</h3><p>&#x4E0A;&#x4F20;&#x540D;&#x300C;id_rsa&#x300D;&#x7684;&#x79C1;&#x94A5;&#x6587;&#x4EF6;(&#x7ED1;&#x5B9A;&#x5230;Github &#x7684;SSH&#x5BC6;&#x94A5;)&#x53CA;&#x540D;&#x4E3A;&#x300C;my_ssh_executable.sh&#x300D;&#x7684;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x5230;&#x5BF9;&#x8C61;&#x5B58;&#x50A8;&#x6876;&#x6839;&#x76EE;&#x5F55;&#x4E0B;</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> my_ssh_executable.sh</span><br><span class=\"hljs-meta\">#</span><span class=\"bash\">! /bin/sh</span><br>ID_RSA=/tmp/id_rsa<br>exec /usr/bin/ssh -o StrictHostKeyChecking=no -i $ID_RSA &quot;$@&quot;<br></code></pre></td></tr></table></figure>\n\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsniupvuk3j30xf05sdgd.jpg\"><span class=\"image-caption\">image-20210720170214542</span></p>\n<h3 id=\"&#x4FEE;&#x6539;&#x4EE3;&#x7801;\"><a href=\"#&#x4FEE;&#x6539;&#x4EE3;&#x7801;\" class=\"headerlink\" title=\"&#x4FEE;&#x6539;&#x4EE3;&#x7801;\"></a>&#x4FEE;&#x6539;&#x4EE3;&#x7801;</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">//index.js</span><br><span class=\"hljs-keyword\">const</span> getRawBody = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;raw-body&apos;</span>)<br><span class=\"hljs-keyword\">const</span> getFormBody = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;body/form&apos;</span>)<br><span class=\"hljs-keyword\">const</span> body = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;body&apos;</span>)<br><span class=\"hljs-keyword\">const</span> execSync = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;child_process&apos;</span>).execSync<br><span class=\"hljs-keyword\">const</span> oss = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;ali-oss&apos;</span>)<br><span class=\"hljs-keyword\">const</span> fs = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;fs&apos;</span>)<br><span class=\"hljs-keyword\">const</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;path&apos;</span>)<br><br><span class=\"hljs-built_in\">exports</span>.handler = <span class=\"hljs-keyword\">async</span> (req, resp, context) =&gt; {<br>  <span class=\"hljs-comment\">// &#x8BBE;&#x7F6E;&#x54CD;&#x5E94;&#x7C7B;&#x578B;</span><br>  resp.setHeader(<span class=\"hljs-string\">&apos;Content-type&apos;</span>, <span class=\"hljs-string\">&apos;application/json&apos;</span>)<br><br>  <span class=\"hljs-keyword\">const</span> client = <span class=\"hljs-keyword\">new</span> oss({<br>    <span class=\"hljs-attr\">region</span>: <span class=\"hljs-string\">&apos;oss-cn-shenzhen&apos;</span>, <span class=\"hljs-comment\">// &#x6839;&#x636E;&#x5B9E;&#x9645;&#x8BBE;&#x7F6E;&#x586B;&#x5199;</span><br>    <span class=\"hljs-attr\">accessKeyId</span>: <span class=\"hljs-string\">&apos;&lt;Your accessKeyId&gt;&apos;</span>,<br>    <span class=\"hljs-attr\">accessKeySecret</span>: <span class=\"hljs-string\">&apos;&lt;Your accessKeySecret&gt;&apos;</span>,<br>    <span class=\"hljs-attr\">bucket</span>: <span class=\"hljs-string\">&apos;serverless-cicd&apos;</span><br>  })<br><br>  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">get</span>(<span class=\"hljs-params\">filename, localpath, cmd</span>) </span>{<br>    <span class=\"hljs-keyword\">try</span> {<br>      <span class=\"hljs-keyword\">let</span> res = <span class=\"hljs-keyword\">await</span> client.get(filename, localpath)<br>      <span class=\"hljs-keyword\">if</span> (res.res.status == <span class=\"hljs-number\">200</span>) execSync(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${cmd}</span> <span class=\"hljs-subst\">${localpath}</span>`</span>)<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      <span class=\"hljs-built_in\">console</span>.error(e)<br>    }<br>  }<br>\t<span class=\"hljs-comment\">// &#x4E0B;&#x8F7D;&#x5BC6;&#x94A5;&#x53CA;&#x811A;&#x672C;</span><br>  get(<span class=\"hljs-string\">&apos;id_rsa&apos;</span>, <span class=\"hljs-string\">&apos;/tmp/id_rsa&apos;</span>, <span class=\"hljs-string\">&apos;chmod 0600&apos;</span>)<br>  get(<span class=\"hljs-string\">&apos;my_ssh_executable.sh&apos;</span>, <span class=\"hljs-string\">&apos;/tmp/my_ssh_executable.sh&apos;</span>, <span class=\"hljs-string\">&apos;chmod +x&apos;</span>)<br><br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;&#x4E0B;&#x8F7D;&#x5BC6;&#x94A5;&#x548C;&#x811A;&#x672C;&#x5B8C;&#x6210;&apos;</span>)<br>\t<br>  <span class=\"hljs-comment\">// &#x83B7;&#x53D6;webhook&#x63D0;&#x4EA4;&#x7684;&#x63A8;&#x9001;&#x4FE1;&#x606F;</span><br>  getRawBody(req, <span class=\"hljs-keyword\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, body</span>) </span>{<br>    body = body.toString().replace(<span class=\"hljs-string\">&apos;undefined&apos;</span>, <span class=\"hljs-string\">&apos;&quot;,&apos;</span>)<br>    body = <span class=\"hljs-built_in\">JSON</span>.parse(body)<br>    <span class=\"hljs-keyword\">const</span> ref = body.ref<br>    <span class=\"hljs-keyword\">const</span> ref_type = body.ref_type<br>    <span class=\"hljs-keyword\">const</span> repository_name = body.repository.name<br>    <span class=\"hljs-keyword\">const</span> clone_url = body.repository.clone_url<br><br>    <span class=\"hljs-keyword\">if</span> (ref_type != <span class=\"hljs-string\">&apos;tag&apos;</span>) {<br>      resp.send(<span class=\"hljs-string\">&apos;No tag event&apos;</span>)<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span><br>    }<br><br>    <span class=\"hljs-comment\">// &#x5220;&#x9664;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5E76;&#x91CD;&#x65B0;&#x514B;&#x9686;</span><br>    <span class=\"hljs-keyword\">if</span> (fs.existsSync(<span class=\"hljs-string\">`/tmp/<span class=\"hljs-subst\">${repository_name}</span>/`</span>)) execSync(<span class=\"hljs-string\">`rm -rf /tmp/<span class=\"hljs-subst\">${repository_name}</span>`</span>)<br>    gitclone = <span class=\"hljs-string\">`GIT_SSH=&quot;/tmp/my_ssh_executable.sh&quot; git clone -b <span class=\"hljs-subst\">${ref}</span> <span class=\"hljs-subst\">${clone_url}</span> /tmp/<span class=\"hljs-subst\">${repository_name}</span>`</span><br>    <span class=\"hljs-keyword\">try</span> {<br>      execSync(gitclone)<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;&#x514B;&#x9686;&#x5B8C;&#x6210;&apos;</span>)<br>    } <span class=\"hljs-keyword\">catch</span> (e) {<br>      resp.send(<span class=\"hljs-string\">&apos;git clone fail&apos;</span>)<br>    }<br>    <br>    <span class=\"hljs-comment\">// &#x6267;&#x884C;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x6253;&#x5305;&#x811A;&#x672C;</span><br>    <span class=\"hljs-comment\">// execSync(`cd /tmp/${repository_name} &amp;&amp; sh build.sh`)</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getFilesList</span>(<span class=\"hljs-params\">dir</span>) </span>{<br>      <span class=\"hljs-keyword\">let</span> res = []<br>      <span class=\"hljs-keyword\">let</span> files = fs.readdirSync(dir)<br>      files.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">filename</span> =&gt;</span> {<br>        <span class=\"hljs-keyword\">if</span> (filename[<span class=\"hljs-number\">0</span>] == <span class=\"hljs-string\">&apos;.&apos;</span>) <span class=\"hljs-keyword\">return</span><br>        <span class=\"hljs-keyword\">let</span> filepath = path.join(dir, filename)<br>        <span class=\"hljs-keyword\">let</span> info = fs.statSync(filepath)<br>        <span class=\"hljs-keyword\">if</span> (info.isFile()) res.push({ filename, filepath })<br>        <span class=\"hljs-keyword\">else</span> res = res.concat(getFilesList(filepath))<br>      })<br>      <span class=\"hljs-keyword\">return</span> res<br>    }<br><br>    <span class=\"hljs-comment\">// &#x83B7;&#x53D6;&#x6587;&#x4EF6;&#x5217;&#x8868;</span><br>    <span class=\"hljs-keyword\">const</span> files = getFilesList(<span class=\"hljs-string\">`/tmp/<span class=\"hljs-subst\">${repository_name}</span>/`</span>)<br>    <span class=\"hljs-comment\">// &#x904D;&#x5386;&#x4E0A;&#x4F20;&#x6587;&#x4EF6;</span><br>    <span class=\"hljs-built_in\">Promise</span>.all(files.map(<span class=\"hljs-function\"><span class=\"hljs-params\">file</span> =&gt;</span> {<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-keyword\">async</span> (resolve) =&gt; {<br>        <span class=\"hljs-keyword\">let</span> res = <span class=\"hljs-keyword\">await</span> client.put(file.filepath.replace(<span class=\"hljs-string\">`/tmp`</span>, <span class=\"hljs-string\">``</span>), file.filepath)<br>        resolve(<span class=\"hljs-string\">`<span class=\"hljs-subst\">${file.filename}</span> uploading: <span class=\"hljs-subst\">${res.res.status == <span class=\"hljs-number\">200</span>}</span>`</span>)<br>      })<br>    })).then(<span class=\"hljs-function\"><span class=\"hljs-params\">r</span> =&gt;</span> {<br>      <span class=\"hljs-built_in\">console</span>.log(r)<br>      resp.send(<span class=\"hljs-built_in\">JSON</span>.stringify({<br>        ref, ref_type, repository_name, clone_url<br>      }))<br>    }) <br>  })<br>}<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"&#x90E8;&#x7F72;\"><a href=\"#&#x90E8;&#x7F72;\" class=\"headerlink\" title=\"&#x90E8;&#x7F72;\"></a>&#x90E8;&#x7F72;</h3><p>&#x6267;&#x884C;<code>s deploy</code>&#x4E00;&#x952E;&#x90E8;&#x7F72;&#xFF0C;&#x901A;&#x8FC7;&#x63A7;&#x5236;&#x53F0;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x5230;&#x90E8;&#x7F72;&#x7ED3;&#x679C;</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsnjfonhokj30s00a10tr.jpg\"><span class=\"image-caption\">image-20210720172223703</span></p>\n<h3 id=\"&#x914D;&#x7F6E;GitHub\"><a href=\"#&#x914D;&#x7F6E;GitHub\" class=\"headerlink\" title=\"&#x914D;&#x7F6E;GitHub\"></a>&#x914D;&#x7F6E;GitHub</h3><p>&#x8FDB;&#x5165;GitHub&#x524D;&#x7AEF;&#x4ED3;&#x5E93; &#x27A1;&#xFE0F; Settings &#x27A1;&#xFE0F; Webhooks&#xFF1A;</p>\n<ul>\n<li>payload&#xFF1A;&#x89E6;&#x53D1;&#x5668;&#x8DEF;&#x5F84;&#xFF0C;&#x53EF;&#x590D;&#x5236;&#x547D;&#x4EE4;&#x884C;&#x8F93;&#x51FA;&#x6216;&#x5230;&#x63A7;&#x5236;&#x53F0;&#x67E5;&#x770B;</li>\n<li>Content type&#xFF1A;application/json</li>\n<li>events&#xFF1A;&#x4EC5;&#x52FE;&#x9009; &#x2611;&#xFE0F; Branch or tag creation</li>\n</ul>\n<h3 id=\"&#x89E6;&#x53D1;&#x6D4B;&#x8BD5;\"><a href=\"#&#x89E6;&#x53D1;&#x6D4B;&#x8BD5;\" class=\"headerlink\" title=\"&#x89E6;&#x53D1;&#x6D4B;&#x8BD5;\"></a>&#x89E6;&#x53D1;&#x6D4B;&#x8BD5;</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">cd frontend-project-dir<br>git tag v1.0 -m &apos;new version&apos;<br>git push origin tag v1.0<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"&#x8F93;&#x51FA;\"><a href=\"#&#x8F93;&#x51FA;\" class=\"headerlink\" title=\"&#x8F93;&#x51FA;\"></a>&#x8F93;&#x51FA;</h3><p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsnkxfcz71j30n50ebabh.jpg\"><span class=\"image-caption\">image-20210720181402727</span></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsnkxn8w92j30h606rdg2.jpg\"><span class=\"image-caption\">image-20210720181415414</span></p>\n<h2 id=\"&#x9644;&#x5F55;&#x4E0E;&#x53C2;&#x8003;\"><a href=\"#&#x9644;&#x5F55;&#x4E0E;&#x53C2;&#x8003;\" class=\"headerlink\" title=\"&#x9644;&#x5F55;&#x4E0E;&#x53C2;&#x8003;\"></a>&#x9644;&#x5F55;&#x4E0E;&#x53C2;&#x8003;</h2><p><a href=\"https://github.com/JasonLamv-t/serverless-devs-node-based-cicd\">&#x672C;&#x6587;&#x4EE3;&#x7801;</a></p>\n<p><a href=\"https://bp.aliyun.com/detail/73?spm=a2c4g.11186623.2.8.2e8962b39fPYAm\">Function Compute&#x642D;&#x5EFA;&#x524D;&#x7AEF;CICD&#x7CFB;&#x7EDF;-&#x6700;&#x4F73;&#x5B9E;&#x8DF5;-&#x963F;&#x91CC;&#x4E91; (aliyun.com)</a></p>\n<p><a href=\"https://github.com/JasonLamv-t/serverless-cicd-example-vue\">&#x524D;&#x7AEF;&#x9879;&#x76EE;&#x793A;&#x4F8B;</a></p>\n","site":{"data":{"galleries":[{"name":"深圳日记","cover":"/images/galleries/shenzhen/IMG_0.jpeg","description":"不要沉沦","photos":["/images/galleries/shenzhen/IMG_0.jpeg","/images/galleries/shenzhen/IMG_1.JPG","/images/galleries/shenzhen/IMG_2.JPG","/images/galleries/shenzhen/IMG_3.jpeg","/images/galleries/shenzhen/IMG_4.jpeg","/images/galleries/shenzhen/IMG_5.jpeg","/images/galleries/shenzhen/IMG_6.jpeg","/images/galleries/shenzhen/IMG_7.PNG","/images/galleries/shenzhen/IMG_8.JPG","/images/galleries/shenzhen/IMG_9.jpeg","/images/galleries/shenzhen/IMG_10.jpeg","/images/galleries/shenzhen/IMG_11.jpeg","/images/galleries/shenzhen/IMG_12.JPG","/images/galleries/shenzhen/IMG_13.jpeg","/images/galleries/shenzhen/IMG_14.jpeg"]}]}},"excerpt":"","more":"<h1 id=\"Serverless-Devs实践-基于Node的前端CICD\"><a href=\"#Serverless-Devs实践-基于Node的前端CICD\" class=\"headerlink\" title=\"Serverless-Devs实践-基于Node的前端CICD\"></a>Serverless-Devs实践-基于Node的前端CICD</h1><p><a href=\"https://github.com/Serverless-Devs/Serverless-Devs/blob/master/readme_zh.md\">Serverless Devs</a>是一个开源开放的 Serverless 开发者平台，致力于为开发者提供强大的工具链体系。通过该平台，开发者可以一键体验多云 Serverless 产品，极速部署 Serverless 项目。本文介绍通过Serverless-Devs部署一个前端CICD系统。</p>\n<h2 id=\"基本信息\"><a href=\"#基本信息\" class=\"headerlink\" title=\"基本信息\"></a>基本信息</h2><p>自动将前端项目托管至阿里云对象存储平台，无需服务器及额外运维操作，并实现CDN访问加速。</p>\n<p>方案架构：</p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsnk6k0ynqj30ik0cddgi.jpg\"  ><span class=\"image-caption\">1 (1)</span></p>\n<h2 id=\"开始之前\"><a href=\"#开始之前\" class=\"headerlink\" title=\"开始之前\"></a>开始之前</h2><h3 id=\"Serverless-Devs\"><a href=\"#Serverless-Devs\" class=\"headerlink\" title=\"Serverless Devs\"></a>Serverless Devs</h3><p>如果您的开发环境没有Serverless Devs，请参考<a href=\"https://github.com/devsapp/fc/blob/main/docs/Getting-started/Install-tutorial.md\">Serverless Devs Install-tutorial</a>进行安装。</p>\n<h3 id=\"Docker\"><a href=\"#Docker\" class=\"headerlink\" title=\"Docker\"></a>Docker</h3><p>本文档涉及本地调试，因此需要开发环境具有Docker，您可根据您开发平台的不同安装不同版本，可参考<a href=\"https://github.com/devsapp/fc/blob/main/docs/Getting-started/Install-tutorial.md\">Serverless Devs Install-tutorial</a>可选部分。</p>\n<h3 id=\"Github\"><a href=\"#Github\" class=\"headerlink\" title=\"Github\"></a>Github</h3><ul>\n<li>本文档基于Github进行实践，因此不保证在其他代码托管平台的可用性，您可以根据您具体使用的代码平台的webhook参数对本文代码进行修改。<strong>您需要准备一个前端项目以便进行下一步</strong>，本文准备了<a href=\"https://github.com/JasonLamv-t/serverless-cicd-example-vue\">serverless-cicd-example-vue</a>便于实践</li>\n<li>创建密钥对并绑定到github，可参考<a href=\"https://docs.github.com/cn/github/authenticating-to-github/connecting-to-github-with-ssh\">使用 SSH 连接到 GitHub - GitHub Docs</a></li>\n</ul>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><h3 id=\"RAM账号\"><a href=\"#RAM账号\" class=\"headerlink\" title=\"RAM账号\"></a>RAM账号</h3><p>前往<a href=\"https://ram.console.aliyun.com/users\">RAM 访问控制</a>创建一个子用户，赋予其对象存储服务权限「AliyunOSSFullAccess」及管理函数计算(FC)服务权限「AliyunFCFullAccess」并创建AccessKey。</p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsncse20oij30s30823z3.jpg\"  ><span class=\"image-caption\">image-20210720133222847</span></p>\n<h3 id=\"对象存储服务-OSS\"><a href=\"#对象存储服务-OSS\" class=\"headerlink\" title=\"对象存储服务(OSS)\"></a>对象存储服务(OSS)</h3><p>前往<a href=\"https://oss.console.aliyun.com/overview\">OSS管理控制台</a>开通对象存储服务，并创建一个Bucket，Bucket名称为serverless-cicd，存储地域为华南1(深圳)，其他参数为默认值。<strong>您可以选择不同的地域及Bucket名称，但需要对代码进行相应修改</strong></p>\n<h3 id=\"函数计算服务-FC\"><a href=\"#函数计算服务-FC\" class=\"headerlink\" title=\"函数计算服务(FC)\"></a>函数计算服务(FC)</h3><p>前往<a href=\"https://fc.console.aliyun.com/fc/overview/cn-shenzhen\">函数计算控制台</a>开通函数计算服务，请注意，函数计算服务分服务地域进行管理，您可能需要切换地域才能查看相应的服务及函数。</p>\n<h3 id=\"日志服务-SLS\"><a href=\"#日志服务-SLS\" class=\"headerlink\" title=\"日志服务(SLS)\"></a>日志服务(SLS)</h3><p>前往<a href=\"https://sls.console.aliyun.com/lognext/profile\">日志服务</a>开通日志服务，并创建一个名为serverless-cicd-log的Project，创建成功后会提示是否创建logStore，我们选择确认。</p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsndh8gt29j30ap0bwwev.jpg\"  ><span class=\"image-caption\">image-20210720135617456</span></p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsndhen30aj308d05dt8n.jpg\"  ><span class=\"image-caption\">image-20210720135627586</span></p>\n<p>logStore我们填写名称，其他保持默认。</p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsndj2z7npj30es0iyt9v.jpg\"  ><span class=\"image-caption\">image-20210720135804507</span></p>\n<p>创建成功后会提示是否立即接入数据，我们选择取消。</p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsng4itwpij30aw04ut8n.jpg\"  ><span class=\"image-caption\">image-20210720152752200</span></p>\n<h3 id=\"Serverless-Devs密钥配置\"><a href=\"#Serverless-Devs密钥配置\" class=\"headerlink\" title=\"Serverless-Devs密钥配置\"></a>Serverless-Devs密钥配置</h3><p>参考<a href=\"https://github.com/devsapp/fc/blob/main/docs/Getting-started/Setting-up-credentials.md\">配置阿里云密钥</a>及<a href=\"http://www.serverless-devs.com/docs/command#config%E6%8C%87%E4%BB%A4\">S config</a>，将前文添加的子用户AccessKey配置到S中。</p>\n<h2 id=\"Serverless-Devs实践-基于Node的前端CICD-1\"><a href=\"#Serverless-Devs实践-基于Node的前端CICD-1\" class=\"headerlink\" title=\"Serverless-Devs实践-基于Node的前端CICD\"></a>Serverless-Devs实践-基于Node的前端CICD</h2><h3 id=\"初始化项目\"><a href=\"#初始化项目\" class=\"headerlink\" title=\"初始化项目\"></a>初始化项目</h3><p>执行<code>s init</code>来创建项目，我们选择<em>Alibaba Cloud Serverless ➡️ HTTP Function-Node.js 12 Example ➡️ 输入文件夹名称</em>。</p>\n<h3 id=\"修改s-yaml\"><a href=\"#修改s-yaml\" class=\"headerlink\" title=\"修改s.yaml\"></a>修改s.yaml</h3><p>注意<code>双##</code>注释内容与项目生成配置文件的差异，主要有增加日志配置，修改超时时长以及修改http触发器合法请求方式：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">services:</span><br>  <span class=\"hljs-attr\">fc-deploy-test:</span> <span class=\"hljs-comment\">#  服务名称</span><br>    <span class=\"hljs-attr\">component:</span> <span class=\"hljs-string\">devsapp/fc</span>  <span class=\"hljs-comment\"># 组件名称</span><br>    <span class=\"hljs-attr\">props:</span> <span class=\"hljs-comment\">#  组件的属性值</span><br>      <span class=\"hljs-attr\">region:</span> <span class=\"hljs-string\">cn-shenzhen</span>   <span class=\"hljs-comment\">## 此处可不修改</span><br>      <span class=\"hljs-attr\">service:</span><br>        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">fc-deploy-cicd</span><br>        <span class=\"hljs-attr\">description:</span> <span class=\"hljs-string\">&#x27;demo for fc-node-cicd component&#x27;</span><br>        <span class=\"hljs-attr\">internetAccess:</span> <span class=\"hljs-literal\">true</span><br>        <span class=\"hljs-comment\">## 增加日志配置</span><br>        <span class=\"hljs-attr\">logConfig:</span><br>          <span class=\"hljs-attr\">enableRequestMetrics:</span> <span class=\"hljs-literal\">true</span><br>          <span class=\"hljs-attr\">logstore:</span> <span class=\"hljs-string\">serverless-cicd-log</span><br>          <span class=\"hljs-attr\">project:</span> <span class=\"hljs-string\">serverless-cicd-log</span><br>      <span class=\"hljs-attr\">function:</span><br>        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">http-trigger-function</span><br>        <span class=\"hljs-attr\">description:</span> <span class=\"hljs-string\">this</span> <span class=\"hljs-string\">is</span> <span class=\"hljs-string\">a</span> <span class=\"hljs-string\">test</span><br>        <span class=\"hljs-attr\">runtime:</span> <span class=\"hljs-string\">nodejs12</span><br>        <span class=\"hljs-attr\">codeUri:</span> <span class=\"hljs-string\">./</span><br>        <span class=\"hljs-attr\">handler:</span> <span class=\"hljs-string\">index.handler</span><br>        <span class=\"hljs-attr\">memorySize:</span> <span class=\"hljs-number\">128</span><br>        <span class=\"hljs-attr\">timeout:</span> <span class=\"hljs-number\">180</span>  <span class=\"hljs-comment\">## 增加时长，避免因为网络问题超时</span><br>      <span class=\"hljs-attr\">triggers:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">httpTrigger</span><br>          <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">http</span><br>          <span class=\"hljs-attr\">config:</span><br>            <span class=\"hljs-attr\">authType:</span> <span class=\"hljs-string\">anonymous</span><br>            <span class=\"hljs-attr\">methods:</span><br>              <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">GET</span><br>              <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">POST</span>  <span class=\"hljs-comment\">## Github Webhook为POST方式</span><br>      <span class=\"hljs-attr\">customDomains:</span><br>        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">domainName:</span> <span class=\"hljs-string\">auto</span><br>          <span class=\"hljs-attr\">protocol:</span> <span class=\"hljs-string\">HTTP</span><br>          <span class=\"hljs-attr\">routeConfigs:</span><br>            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">/*</span><br>              <span class=\"hljs-attr\">methods:</span><br>                <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">GET</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h3><p>通过执行<code>yarn add ali-oss</code>或<code>npm install -s ali-oss </code>安装阿里云OSS SDK</p>\n<h3 id=\"上传密钥及脚本\"><a href=\"#上传密钥及脚本\" class=\"headerlink\" title=\"上传密钥及脚本\"></a>上传密钥及脚本</h3><p>上传名「id_rsa」的私钥文件(绑定到Github 的SSH密钥)及名为「my_ssh_executable.sh」的脚本文件到对象存储桶根目录下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> my_ssh_executable.sh</span><br><span class=\"hljs-meta\">#</span><span class=\"bash\">! /bin/sh</span><br>ID_RSA=/tmp/id_rsa<br>exec /usr/bin/ssh -o StrictHostKeyChecking=no -i $ID_RSA &quot;$@&quot;<br></code></pre></td></tr></table></figure>\n\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsniupvuk3j30xf05sdgd.jpg\"  ><span class=\"image-caption\">image-20210720170214542</span></p>\n<h3 id=\"修改代码\"><a href=\"#修改代码\" class=\"headerlink\" title=\"修改代码\"></a>修改代码</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">//index.js</span><br><span class=\"hljs-keyword\">const</span> getRawBody = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;raw-body&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> getFormBody = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;body/form&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> body = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;body&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> execSync = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;child_process&#x27;</span>).execSync<br><span class=\"hljs-keyword\">const</span> oss = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;ali-oss&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> fs = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;fs&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;path&#x27;</span>)<br><br><span class=\"hljs-built_in\">exports</span>.handler = <span class=\"hljs-keyword\">async</span> (req, resp, context) =&gt; &#123;<br>  <span class=\"hljs-comment\">// 设置响应类型</span><br>  resp.setHeader(<span class=\"hljs-string\">&#x27;Content-type&#x27;</span>, <span class=\"hljs-string\">&#x27;application/json&#x27;</span>)<br><br>  <span class=\"hljs-keyword\">const</span> client = <span class=\"hljs-keyword\">new</span> oss(&#123;<br>    <span class=\"hljs-attr\">region</span>: <span class=\"hljs-string\">&#x27;oss-cn-shenzhen&#x27;</span>, <span class=\"hljs-comment\">// 根据实际设置填写</span><br>    <span class=\"hljs-attr\">accessKeyId</span>: <span class=\"hljs-string\">&#x27;&lt;Your accessKeyId&gt;&#x27;</span>,<br>    <span class=\"hljs-attr\">accessKeySecret</span>: <span class=\"hljs-string\">&#x27;&lt;Your accessKeySecret&gt;&#x27;</span>,<br>    <span class=\"hljs-attr\">bucket</span>: <span class=\"hljs-string\">&#x27;serverless-cicd&#x27;</span><br>  &#125;)<br><br>  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">get</span>(<span class=\"hljs-params\">filename, localpath, cmd</span>) </span>&#123;<br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      <span class=\"hljs-keyword\">let</span> res = <span class=\"hljs-keyword\">await</span> client.get(filename, localpath)<br>      <span class=\"hljs-keyword\">if</span> (res.res.status == <span class=\"hljs-number\">200</span>) execSync(<span class=\"hljs-string\">`<span class=\"hljs-subst\">$&#123;cmd&#125;</span> <span class=\"hljs-subst\">$&#123;localpath&#125;</span>`</span>)<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;<br>      <span class=\"hljs-built_in\">console</span>.error(e)<br>    &#125;<br>  &#125;<br>\t<span class=\"hljs-comment\">// 下载密钥及脚本</span><br>  get(<span class=\"hljs-string\">&#x27;id_rsa&#x27;</span>, <span class=\"hljs-string\">&#x27;/tmp/id_rsa&#x27;</span>, <span class=\"hljs-string\">&#x27;chmod 0600&#x27;</span>)<br>  get(<span class=\"hljs-string\">&#x27;my_ssh_executable.sh&#x27;</span>, <span class=\"hljs-string\">&#x27;/tmp/my_ssh_executable.sh&#x27;</span>, <span class=\"hljs-string\">&#x27;chmod +x&#x27;</span>)<br><br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;下载密钥和脚本完成&#x27;</span>)<br>\t<br>  <span class=\"hljs-comment\">// 获取webhook提交的推送信息</span><br>  getRawBody(req, <span class=\"hljs-keyword\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err, body</span>) </span>&#123;<br>    body = body.toString().replace(<span class=\"hljs-string\">&#x27;undefined&#x27;</span>, <span class=\"hljs-string\">&#x27;&quot;,&#x27;</span>)<br>    body = <span class=\"hljs-built_in\">JSON</span>.parse(body)<br>    <span class=\"hljs-keyword\">const</span> ref = body.ref<br>    <span class=\"hljs-keyword\">const</span> ref_type = body.ref_type<br>    <span class=\"hljs-keyword\">const</span> repository_name = body.repository.name<br>    <span class=\"hljs-keyword\">const</span> clone_url = body.repository.clone_url<br><br>    <span class=\"hljs-keyword\">if</span> (ref_type != <span class=\"hljs-string\">&#x27;tag&#x27;</span>) &#123;<br>      resp.send(<span class=\"hljs-string\">&#x27;No tag event&#x27;</span>)<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span><br>    &#125;<br><br>    <span class=\"hljs-comment\">// 删除可能存在的代码，并重新克隆</span><br>    <span class=\"hljs-keyword\">if</span> (fs.existsSync(<span class=\"hljs-string\">`/tmp/<span class=\"hljs-subst\">$&#123;repository_name&#125;</span>/`</span>)) execSync(<span class=\"hljs-string\">`rm -rf /tmp/<span class=\"hljs-subst\">$&#123;repository_name&#125;</span>`</span>)<br>    gitclone = <span class=\"hljs-string\">`GIT_SSH=&quot;/tmp/my_ssh_executable.sh&quot; git clone -b <span class=\"hljs-subst\">$&#123;ref&#125;</span> <span class=\"hljs-subst\">$&#123;clone_url&#125;</span> /tmp/<span class=\"hljs-subst\">$&#123;repository_name&#125;</span>`</span><br>    <span class=\"hljs-keyword\">try</span> &#123;<br>      execSync(gitclone)<br>      <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;克隆完成&#x27;</span>)<br>    &#125; <span class=\"hljs-keyword\">catch</span> (e) &#123;<br>      resp.send(<span class=\"hljs-string\">&#x27;git clone fail&#x27;</span>)<br>    &#125;<br>    <br>    <span class=\"hljs-comment\">// 执行自定义的打包脚本</span><br>    <span class=\"hljs-comment\">// execSync(`cd /tmp/$&#123;repository_name&#125; &amp;&amp; sh build.sh`)</span><br><br>    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getFilesList</span>(<span class=\"hljs-params\">dir</span>) </span>&#123;<br>      <span class=\"hljs-keyword\">let</span> res = []<br>      <span class=\"hljs-keyword\">let</span> files = fs.readdirSync(dir)<br>      files.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">filename</span> =&gt;</span> &#123;<br>        <span class=\"hljs-keyword\">if</span> (filename[<span class=\"hljs-number\">0</span>] == <span class=\"hljs-string\">&#x27;.&#x27;</span>) <span class=\"hljs-keyword\">return</span><br>        <span class=\"hljs-keyword\">let</span> filepath = path.join(dir, filename)<br>        <span class=\"hljs-keyword\">let</span> info = fs.statSync(filepath)<br>        <span class=\"hljs-keyword\">if</span> (info.isFile()) res.push(&#123; filename, filepath &#125;)<br>        <span class=\"hljs-keyword\">else</span> res = res.concat(getFilesList(filepath))<br>      &#125;)<br>      <span class=\"hljs-keyword\">return</span> res<br>    &#125;<br><br>    <span class=\"hljs-comment\">// 获取文件列表</span><br>    <span class=\"hljs-keyword\">const</span> files = getFilesList(<span class=\"hljs-string\">`/tmp/<span class=\"hljs-subst\">$&#123;repository_name&#125;</span>/`</span>)<br>    <span class=\"hljs-comment\">// 遍历上传文件</span><br>    <span class=\"hljs-built_in\">Promise</span>.all(files.map(<span class=\"hljs-function\"><span class=\"hljs-params\">file</span> =&gt;</span> &#123;<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-keyword\">async</span> (resolve) =&gt; &#123;<br>        <span class=\"hljs-keyword\">let</span> res = <span class=\"hljs-keyword\">await</span> client.put(file.filepath.replace(<span class=\"hljs-string\">`/tmp`</span>, <span class=\"hljs-string\">``</span>), file.filepath)<br>        resolve(<span class=\"hljs-string\">`<span class=\"hljs-subst\">$&#123;file.filename&#125;</span> uploading: <span class=\"hljs-subst\">$&#123;res.res.status == <span class=\"hljs-number\">200</span>&#125;</span>`</span>)<br>      &#125;)<br>    &#125;)).then(<span class=\"hljs-function\"><span class=\"hljs-params\">r</span> =&gt;</span> &#123;<br>      <span class=\"hljs-built_in\">console</span>.log(r)<br>      resp.send(<span class=\"hljs-built_in\">JSON</span>.stringify(&#123;<br>        ref, ref_type, repository_name, clone_url<br>      &#125;))<br>    &#125;) <br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><p>执行<code>s deploy</code>一键部署，通过控制台可以查看到部署结果</p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsnjfonhokj30s00a10tr.jpg\"  ><span class=\"image-caption\">image-20210720172223703</span></p>\n<h3 id=\"配置GitHub\"><a href=\"#配置GitHub\" class=\"headerlink\" title=\"配置GitHub\"></a>配置GitHub</h3><p>进入GitHub前端仓库 ➡️ Settings ➡️ Webhooks：</p>\n<ul>\n<li>payload：触发器路径，可复制命令行输出或到控制台查看</li>\n<li>Content type：application/json</li>\n<li>events：仅勾选 ☑️ Branch or tag creation</li>\n</ul>\n<h3 id=\"触发测试\"><a href=\"#触发测试\" class=\"headerlink\" title=\"触发测试\"></a>触发测试</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs shell\">cd frontend-project-dir<br>git tag v1.0 -m &#x27;new version&#x27;<br>git push origin tag v1.0<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"输出\"><a href=\"#输出\" class=\"headerlink\" title=\"输出\"></a>输出</h3><p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsnkxfcz71j30n50ebabh.jpg\"  ><span class=\"image-caption\">image-20210720181402727</span></p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gsnkxn8w92j30h606rdg2.jpg\"  ><span class=\"image-caption\">image-20210720181415414</span></p>\n<h2 id=\"附录与参考\"><a href=\"#附录与参考\" class=\"headerlink\" title=\"附录与参考\"></a>附录与参考</h2><p><a href=\"https://github.com/JasonLamv-t/serverless-devs-node-based-cicd\">本文代码</a></p>\n<p><a href=\"https://bp.aliyun.com/detail/73?spm=a2c4g.11186623.2.8.2e8962b39fPYAm\">Function Compute搭建前端CICD系统-最佳实践-阿里云 (aliyun.com)</a></p>\n<p><a href=\"https://github.com/JasonLamv-t/serverless-cicd-example-vue\">前端项目示例</a></p>\n"},{"title":"WebMonitor-CLI Node Commander命令行工具实战","date":"2021-06-16T03:39:32.000Z","keywords":"node, commander, inquirer, chalk, Command line tool","_content":"\n# WebMonitor-CLI Node Commander命令行工具实战\n\n开始之前，先放上\n源码与使用说明：[JasonLamv-t/WebMonitor](https://github.com/JasonLamv-t/WebMonitor)\n\n参考文档：\n基础框架：[commander.js中文文档](https://github.com/tj/commander.js/blob/master/Readme_zh-CN.md)\n交互式命令行工具：[inquirer](https://www.npmjs.com/package/inquirer)\n控制台输出样式：[chalk](https://www.npmjs.com/package/chalk)\nnode Jquery实现：[cheerio中文文档](https://github.com/cheeriojs/cheerio/wiki/Chinese-README)\n\n## 功能设计\n\n- 本地运行\n- ~~远程运行~~\n- ~~每日自动运行~~\n- ~~任务管理~~\n- 微信推送消息\n- ~~邮件提醒~~\n- ~~短信提醒~~\n\n## 开发\n\n### 项目的初始化与目录结构\n\n项目使用了yarn作为包和依赖管理器，当然，你可以根据喜好执行`yarn init`或`npm init`来初始化项目\n以下是本项目的结构，你自己的项目当然可以不同，有条理即可:\n\n```\nWebMonitor\n├── README.md\n├── bin\t\t\t\t\t\t\t\t\n│   ├── app.js        // 程序入口文件\n│   ├── config.js     // 配置命令子文件\n│   └── run.js        // 运行命令子文件\n├── package.json\n├── plugins\n│   ├── notify.js     // 通知处理器\n│   ├── theme.js      // 主题设置\n│   └── validator.js  // 数据验证器和处理器\n├── test.html\n├── yarn.lock\t\t\t\n└── node_modules\n```\n\n### 安装项目所需依赖\n\n执行`yarn add commander inquirer chalk cheerio axios`，当然`npm`也行\n\n### 程序入口\n\n#### 定义程序的根命令和入口\n\n创建一个app.js文件或者index.js文件，在根目录或其他定义的目录均可，以下示例均以本项目为参考：[/bin/app.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/app.js)\n\n```javascript\n#! /usr/bin/env node\n// 指定脚本解析执行器，所有命令脚本文件都是必须的\n\nconst { Command } = require('commander')\nconst program = new Command()\n\nprogram\n  .version('1.1.0')\n  .command('run', 'run a monitor process immediately', { executableFile: 'run' }).alias('r')\n  .command('config', 'config',{ executableFile: 'config' }).alias('c')\n  // .command('子命令', '命令描述', { executableFile: '子命令文件路径' }).alias('命令别称')\n\nprogram.parse(process.argv)  // 无论子命令还是根命令都需要执行program.parse方法，参数详见commander文档\n```\n\n```\n$ node bin/app.js -V\n1.1.0\n```\n\n#### 连接到本地依赖\n\npackage.json中添加以下项\n\n```json\n...\n\"bin\": {\n    \"webmonitor\": \"./bin/app.js\",\n    \"wmcli\": \"./bin/app.js\"\n  },\n...\n```\n\n执行`yarn link`\n\n```\n$ yarn link\nyarn link v1.22.10\nsuccess Registered \"webmonitor-cli\".\ninfo You can now run `yarn link \"webmonitor-cli\"` in the projects where you want to use this package and it will be used instead.\n✨  Done in 0.05s.\n$ webmonitor -V\n1.1.0\n$ wmcli --version\n1.1.0\n```\n\n到这一步，就完成了一个根命令的入口定义并能在命令行中调用，这将方便我们后面的调试\n\n### 特定输出主题定义\n\n创建一个主题文件/plugins/theme.js，用于定义一些特定输出的主题，你可以根据自己喜好修改\n\n```javascript\nconst chalk = require('chalk')\nconst error = chalk.bgRedBright.white\nconst warning = chalk.keyword('orange')\nconst info = chalk.yellowBright\n\nconsole.log(error('error test'))\nconsole.log(warning('warning test'))\nconsole.log(info('info test'))\n\nmodule.exports = {\n  error, warning, info\n}\n```\n\n### 子命令\n\n#### config命令\n\n[/bin/config.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/config.js)\n\n```javascript\n#! /usr/bin/env node\n\nconst inquirer = require('inquirer')\nconst fs = require('fs')\nconst os = require('os')\nconst { Command } = require('commander')\nconst program = new Command()  // 同样适用new Command对象创建子命令实例\nconst { error, warning, info } = require('../plugins/theme')\n\nprogram\n// .option('-p --path <absolue path>', 'config file path')\n\nprogram.parse(process.argv)  // 无论子命令还是根命令都需要执行program.parse方法，参数详见commander文档\nconst options = program.opts()  // 通过执行program.opts方法获取全部参数对象\n\n// 定义提示列表，对应对象属性详见inquirer文档\nconst promptList = [{\n  type: 'input',  // 输入类型\n  message: '请输入Server酱的SCKEY:',  // 提示消息\n  name: 'server_sckey'  // 变量亩\n}]\n\n// 执行inquirer.prompt方法显示提示\n// 需要注意的是，一旦执行此方法会按顺序显示传入列表的所有提示并获取输入\n// 显然，这是一个异步操作，复杂的表单需要多次按照表单逻辑调用inquirer.prompt方法来实现\ninquirer.prompt(promptList).then(answers => {\n  const configDirPath = os.homedir() + '/.webmonitor/'  // 获取用户目录绝对路径拼接配置文件夹路径\n  let config = {}\n  // 判断配置文件路径是否存在，不存在则创建路径\n  if (fs.existsSync(configDirPath + 'config.json')) {\n    const rawdata = fs.readFileSync(configDirPath + 'config.json')\n    config = JSON.parse(rawdata)\n  } else if (!fs.existsSync(configDirPath)) fs.mkdirSync(configDirPath)\n\n  config.server_sckey = answers.server_sckey // 读入输入\n\n  // 保存到配置文件\n  fs.writeFileSync(configDirPath + 'config.json', JSON.stringify(config), { flag: 'w+' })\n  console.log(info(`Config file save as ${configDirPath}config.json`))\n})\n\n```\n\n#### run命令参数定义\n\n[/bin/run.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/run.js)\n\n```javascript\nprogram\n  .usage('-u <target url> [options]')  // 输出：命令 + usage内容\n  .requiredOption('-u --url <url>', 'monitoring target', validator.isUrl)\n  // 必须参数，第三个参数为验证和处理函数，返回验证处理后的值，详见参数处理\n  .option('-l, --log', 'log mode', false)\n  // 此处第三个参数为默认值，无输入变量，即第一个参数无 <any> 的，检测到该参数则对应值为true，否则为undefined，所以设置了默认值为false\n  .option('-i, --interval <delay>', 'the interval between initiating a web request in seconds', validator.isInt, 60)\n  // 此处第三个参数为验证函数，第四个参数为默认值\n  .option('-D, --debug', 'debug mode', false)\n  .option('-d, --daemon', 'monitor whether to continue after the change of the web page is detected', false)\n  .addOption(new Option('-M, --mode <operation mode>', 'currently local only').choices(['local']).default('local'))\n  // 自定义参数，使用new Option方法创建，choices要求输入值在枚举范围内，default设置默认值，其他方法commander.js文档并无说明，但是可以通过查看Option方法定义代码找到对应接口\n  .addOption(new Option('-m, --method <request method>', 'current get only').choices(['get']).default('get'))\n  .option('-r, --retry <retry time>', 'retry times limit', validator.isInt, 5)\n  .option('-w, --wechat', 'enable Wechat push notification')\n\nprogram.parse(process.argv)\n\nconst options = program.opts()\t// 解析获取参数对象\nif (options.debug) console.log('options: ', options)  // 如果是调试模式则打印全部参数\n```\n\n#### 实现逻辑\n\n获取网页内容，并进行比较\n由于网页源码可能发生动态改变，因此我们使用cheerio对网页内容进行解析，获取网页的显示进行比较，同时方便后续对自定义监测内容的升级。\n\n#### 获取网页内容\n\n[/bin/run.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/run.js)\n\n```javascript\nconst getRes = async () => {\n  return new Promise((resolve, reject) => {\n    axios[options.method](options.url)\n      .then(r => {\n        const $ = cheerio.load(r.data)\n        if (options.debug) console.log($.text())\n        resolve($.text())\n      }).catch(e => {\n        if (e.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.log(error('Error! Request error. StatusCode:', e.response.status))\n          if (options.debug || options.log) {\n            console.log('Response Data:', e.response.data)\n            console.log('Response Header:', e.response.headers)\n          }\n        } else if (e.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n          console.log(error('The request was made but no response was received'))\n          if (options.debug || options.log) console.log('Request:', e.request)\n          else console.log(warning('add \\'-l\\' flag for more info'))\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log('Error', e.message)\n        }\n        if (options.debug) console.log(e.config)\n        reject(e)\n      })\n  })\n}\n```\n\n#### 主函数\n\n```javascript\nconst main = async () => {\n  // 如果配置了微信推送，读取配置并构建通知方法\n  if (options.wechat) options.wechat = await notify.wechat()\n  if (!options.wechat) return -1 // 检查是否构建通知方法成功\n\n  let requestCount = 0, retryCount = 0\n  let origin = await getRes()  // 获取初始页面\n    .then(r => { return r })\n    .catch(e => {\n      console.log(e)\n      return false\n    })\n\n  console.log(origin)\n\n  if (!origin) return { code: -1, message: 'Failed to request a web page for the first time.' }\n  console.log('The request for the web page is successful. Start monitoring.')\n\t\n  // 构建定时循环\n  let pro = setInterval(async () => {\n    // 获取新的页面内容\n    let newWeb = await getRes().then(r => {\n      requestCount++\n      retryCount = 0\n      return r\n    }).catch(e => {\n      retryCount++\n      return false\n    })\n\n    // The web page has not changed and is in log mode\n    if (newWeb && newWeb == origin && options.log) console.log(`Request ${requestCount} times. The web page remains unchanged.`)\n    else if (newWeb && newWeb != origin) {\n      console.log(info('The web page has changed!'))\n      if (options.wechat) options.wechat()  // 调用微信通知\n      if (!options.daemon) {  // 非守护模式则退出\n        console.log('process exit')\n        clearInterval(pro)\n      } else origin = newWeb\n    }\n    else if (!newWeb && retryCount <= options.retry) console.log(warning(`Request fail, retry for ${retryCount} times`))\n    else if (!newWeb && retryCount > options.retry) {\n      console.log(error('The number of retries exceeds the limit! Process exit.'))\n      clearInterval(pro)\n    }\n  }, 1000 * options.interval)\n}\n\nmain()\n```\n\n### 其他\n\n#### 微信通知\n\n[/plugins/notify.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/plugins/notify.js)\n\n```javascript\nconst wechat = async () => {\n  const configDirPath = os.homedir() + '/.webmonitor/'\n  let config = {}\n  if (fs.existsSync(configDirPath + 'config.json')) {\n    const rawdata = fs.readFileSync(configDirPath + 'config.json')\n    config = JSON.parse(rawdata)\n  }\n\n  if (!config.server_sckey) {\n    console.log(error('Error: server酱 SCKEY no configured.'))\n    console.log(info('please run \\'wmcli config\\' to config SCKEY'))\n    console.log('process exit.')\n    return false\n  }\n\n  const promptList = [{\n    type: 'input',\n    message: '请输入通知消息标题:',\n    name: 'title'\n  }, {\n    type: 'input',\n    message: '请输入通知消息内容:',\n    name: 'content'\n  },]\n\n  return await inquirer.prompt(promptList).then(answers => {\n    return function () {\n      axios.get(`https://sc.ftqq.com/${config.server_sckey}.send`, {\n        params: {\n          text: answers.title,\n          desp: answers.content\n        }\n      })\n    }\n  })\n}\n```\n\n#### 参数处理验证器\n\n[/plugins/validator.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/plugins/validator.js)\n\n```javascript\nconst { InvalidOptionArgumentError } = require('commander')  // commander自带的异常\n\nfunction isUrl(url) {\n  const r = new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$', 'g')\n  if (!r.test(url)) throw new InvalidOptionArgumentError('Not a legitimate URL.')  // 抛出异常\n  return url\n}\n\nfunction isInt(value, dummyPrevious) {\n  // parseInt takes a string and a radix\n  const parsedValue = parseInt(value, 10)\n  if (isNaN(parsedValue)) throw new InvalidOptionArgumentError('Not a number.')\n  return parsedValue\n}\n```\n\n## 发布\n\n1. 到[npm官网](https://www.npmjs.com/)注册一个账户\n2. 执行`npm login`并输入注册信息进行登陆\n3. 修改`package.json`或重新执行`yarn init`或者`npm init`补全信息\n4. 执行`npm publish`\n\n","source":"_posts/webmonitor.md","raw":"---\ntitle: WebMonitor-CLI Node Commander命令行工具实战\ndate: 2021-06-16 11:39:32\ncategories:\n- 项目详述\ntags: [Node]\nkeywords: node, commander, inquirer, chalk, Command line tool \n---\n\n# WebMonitor-CLI Node Commander命令行工具实战\n\n开始之前，先放上\n源码与使用说明：[JasonLamv-t/WebMonitor](https://github.com/JasonLamv-t/WebMonitor)\n\n参考文档：\n基础框架：[commander.js中文文档](https://github.com/tj/commander.js/blob/master/Readme_zh-CN.md)\n交互式命令行工具：[inquirer](https://www.npmjs.com/package/inquirer)\n控制台输出样式：[chalk](https://www.npmjs.com/package/chalk)\nnode Jquery实现：[cheerio中文文档](https://github.com/cheeriojs/cheerio/wiki/Chinese-README)\n\n## 功能设计\n\n- 本地运行\n- ~~远程运行~~\n- ~~每日自动运行~~\n- ~~任务管理~~\n- 微信推送消息\n- ~~邮件提醒~~\n- ~~短信提醒~~\n\n## 开发\n\n### 项目的初始化与目录结构\n\n项目使用了yarn作为包和依赖管理器，当然，你可以根据喜好执行`yarn init`或`npm init`来初始化项目\n以下是本项目的结构，你自己的项目当然可以不同，有条理即可:\n\n```\nWebMonitor\n├── README.md\n├── bin\t\t\t\t\t\t\t\t\n│   ├── app.js        // 程序入口文件\n│   ├── config.js     // 配置命令子文件\n│   └── run.js        // 运行命令子文件\n├── package.json\n├── plugins\n│   ├── notify.js     // 通知处理器\n│   ├── theme.js      // 主题设置\n│   └── validator.js  // 数据验证器和处理器\n├── test.html\n├── yarn.lock\t\t\t\n└── node_modules\n```\n\n### 安装项目所需依赖\n\n执行`yarn add commander inquirer chalk cheerio axios`，当然`npm`也行\n\n### 程序入口\n\n#### 定义程序的根命令和入口\n\n创建一个app.js文件或者index.js文件，在根目录或其他定义的目录均可，以下示例均以本项目为参考：[/bin/app.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/app.js)\n\n```javascript\n#! /usr/bin/env node\n// 指定脚本解析执行器，所有命令脚本文件都是必须的\n\nconst { Command } = require('commander')\nconst program = new Command()\n\nprogram\n  .version('1.1.0')\n  .command('run', 'run a monitor process immediately', { executableFile: 'run' }).alias('r')\n  .command('config', 'config',{ executableFile: 'config' }).alias('c')\n  // .command('子命令', '命令描述', { executableFile: '子命令文件路径' }).alias('命令别称')\n\nprogram.parse(process.argv)  // 无论子命令还是根命令都需要执行program.parse方法，参数详见commander文档\n```\n\n```\n$ node bin/app.js -V\n1.1.0\n```\n\n#### 连接到本地依赖\n\npackage.json中添加以下项\n\n```json\n...\n\"bin\": {\n    \"webmonitor\": \"./bin/app.js\",\n    \"wmcli\": \"./bin/app.js\"\n  },\n...\n```\n\n执行`yarn link`\n\n```\n$ yarn link\nyarn link v1.22.10\nsuccess Registered \"webmonitor-cli\".\ninfo You can now run `yarn link \"webmonitor-cli\"` in the projects where you want to use this package and it will be used instead.\n✨  Done in 0.05s.\n$ webmonitor -V\n1.1.0\n$ wmcli --version\n1.1.0\n```\n\n到这一步，就完成了一个根命令的入口定义并能在命令行中调用，这将方便我们后面的调试\n\n### 特定输出主题定义\n\n创建一个主题文件/plugins/theme.js，用于定义一些特定输出的主题，你可以根据自己喜好修改\n\n```javascript\nconst chalk = require('chalk')\nconst error = chalk.bgRedBright.white\nconst warning = chalk.keyword('orange')\nconst info = chalk.yellowBright\n\nconsole.log(error('error test'))\nconsole.log(warning('warning test'))\nconsole.log(info('info test'))\n\nmodule.exports = {\n  error, warning, info\n}\n```\n\n### 子命令\n\n#### config命令\n\n[/bin/config.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/config.js)\n\n```javascript\n#! /usr/bin/env node\n\nconst inquirer = require('inquirer')\nconst fs = require('fs')\nconst os = require('os')\nconst { Command } = require('commander')\nconst program = new Command()  // 同样适用new Command对象创建子命令实例\nconst { error, warning, info } = require('../plugins/theme')\n\nprogram\n// .option('-p --path <absolue path>', 'config file path')\n\nprogram.parse(process.argv)  // 无论子命令还是根命令都需要执行program.parse方法，参数详见commander文档\nconst options = program.opts()  // 通过执行program.opts方法获取全部参数对象\n\n// 定义提示列表，对应对象属性详见inquirer文档\nconst promptList = [{\n  type: 'input',  // 输入类型\n  message: '请输入Server酱的SCKEY:',  // 提示消息\n  name: 'server_sckey'  // 变量亩\n}]\n\n// 执行inquirer.prompt方法显示提示\n// 需要注意的是，一旦执行此方法会按顺序显示传入列表的所有提示并获取输入\n// 显然，这是一个异步操作，复杂的表单需要多次按照表单逻辑调用inquirer.prompt方法来实现\ninquirer.prompt(promptList).then(answers => {\n  const configDirPath = os.homedir() + '/.webmonitor/'  // 获取用户目录绝对路径拼接配置文件夹路径\n  let config = {}\n  // 判断配置文件路径是否存在，不存在则创建路径\n  if (fs.existsSync(configDirPath + 'config.json')) {\n    const rawdata = fs.readFileSync(configDirPath + 'config.json')\n    config = JSON.parse(rawdata)\n  } else if (!fs.existsSync(configDirPath)) fs.mkdirSync(configDirPath)\n\n  config.server_sckey = answers.server_sckey // 读入输入\n\n  // 保存到配置文件\n  fs.writeFileSync(configDirPath + 'config.json', JSON.stringify(config), { flag: 'w+' })\n  console.log(info(`Config file save as ${configDirPath}config.json`))\n})\n\n```\n\n#### run命令参数定义\n\n[/bin/run.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/run.js)\n\n```javascript\nprogram\n  .usage('-u <target url> [options]')  // 输出：命令 + usage内容\n  .requiredOption('-u --url <url>', 'monitoring target', validator.isUrl)\n  // 必须参数，第三个参数为验证和处理函数，返回验证处理后的值，详见参数处理\n  .option('-l, --log', 'log mode', false)\n  // 此处第三个参数为默认值，无输入变量，即第一个参数无 <any> 的，检测到该参数则对应值为true，否则为undefined，所以设置了默认值为false\n  .option('-i, --interval <delay>', 'the interval between initiating a web request in seconds', validator.isInt, 60)\n  // 此处第三个参数为验证函数，第四个参数为默认值\n  .option('-D, --debug', 'debug mode', false)\n  .option('-d, --daemon', 'monitor whether to continue after the change of the web page is detected', false)\n  .addOption(new Option('-M, --mode <operation mode>', 'currently local only').choices(['local']).default('local'))\n  // 自定义参数，使用new Option方法创建，choices要求输入值在枚举范围内，default设置默认值，其他方法commander.js文档并无说明，但是可以通过查看Option方法定义代码找到对应接口\n  .addOption(new Option('-m, --method <request method>', 'current get only').choices(['get']).default('get'))\n  .option('-r, --retry <retry time>', 'retry times limit', validator.isInt, 5)\n  .option('-w, --wechat', 'enable Wechat push notification')\n\nprogram.parse(process.argv)\n\nconst options = program.opts()\t// 解析获取参数对象\nif (options.debug) console.log('options: ', options)  // 如果是调试模式则打印全部参数\n```\n\n#### 实现逻辑\n\n获取网页内容，并进行比较\n由于网页源码可能发生动态改变，因此我们使用cheerio对网页内容进行解析，获取网页的显示进行比较，同时方便后续对自定义监测内容的升级。\n\n#### 获取网页内容\n\n[/bin/run.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/run.js)\n\n```javascript\nconst getRes = async () => {\n  return new Promise((resolve, reject) => {\n    axios[options.method](options.url)\n      .then(r => {\n        const $ = cheerio.load(r.data)\n        if (options.debug) console.log($.text())\n        resolve($.text())\n      }).catch(e => {\n        if (e.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.log(error('Error! Request error. StatusCode:', e.response.status))\n          if (options.debug || options.log) {\n            console.log('Response Data:', e.response.data)\n            console.log('Response Header:', e.response.headers)\n          }\n        } else if (e.request) {\n          // The request was made but no response was received\n          // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n          // http.ClientRequest in node.js\n          console.log(error('The request was made but no response was received'))\n          if (options.debug || options.log) console.log('Request:', e.request)\n          else console.log(warning('add \\'-l\\' flag for more info'))\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log('Error', e.message)\n        }\n        if (options.debug) console.log(e.config)\n        reject(e)\n      })\n  })\n}\n```\n\n#### 主函数\n\n```javascript\nconst main = async () => {\n  // 如果配置了微信推送，读取配置并构建通知方法\n  if (options.wechat) options.wechat = await notify.wechat()\n  if (!options.wechat) return -1 // 检查是否构建通知方法成功\n\n  let requestCount = 0, retryCount = 0\n  let origin = await getRes()  // 获取初始页面\n    .then(r => { return r })\n    .catch(e => {\n      console.log(e)\n      return false\n    })\n\n  console.log(origin)\n\n  if (!origin) return { code: -1, message: 'Failed to request a web page for the first time.' }\n  console.log('The request for the web page is successful. Start monitoring.')\n\t\n  // 构建定时循环\n  let pro = setInterval(async () => {\n    // 获取新的页面内容\n    let newWeb = await getRes().then(r => {\n      requestCount++\n      retryCount = 0\n      return r\n    }).catch(e => {\n      retryCount++\n      return false\n    })\n\n    // The web page has not changed and is in log mode\n    if (newWeb && newWeb == origin && options.log) console.log(`Request ${requestCount} times. The web page remains unchanged.`)\n    else if (newWeb && newWeb != origin) {\n      console.log(info('The web page has changed!'))\n      if (options.wechat) options.wechat()  // 调用微信通知\n      if (!options.daemon) {  // 非守护模式则退出\n        console.log('process exit')\n        clearInterval(pro)\n      } else origin = newWeb\n    }\n    else if (!newWeb && retryCount <= options.retry) console.log(warning(`Request fail, retry for ${retryCount} times`))\n    else if (!newWeb && retryCount > options.retry) {\n      console.log(error('The number of retries exceeds the limit! Process exit.'))\n      clearInterval(pro)\n    }\n  }, 1000 * options.interval)\n}\n\nmain()\n```\n\n### 其他\n\n#### 微信通知\n\n[/plugins/notify.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/plugins/notify.js)\n\n```javascript\nconst wechat = async () => {\n  const configDirPath = os.homedir() + '/.webmonitor/'\n  let config = {}\n  if (fs.existsSync(configDirPath + 'config.json')) {\n    const rawdata = fs.readFileSync(configDirPath + 'config.json')\n    config = JSON.parse(rawdata)\n  }\n\n  if (!config.server_sckey) {\n    console.log(error('Error: server酱 SCKEY no configured.'))\n    console.log(info('please run \\'wmcli config\\' to config SCKEY'))\n    console.log('process exit.')\n    return false\n  }\n\n  const promptList = [{\n    type: 'input',\n    message: '请输入通知消息标题:',\n    name: 'title'\n  }, {\n    type: 'input',\n    message: '请输入通知消息内容:',\n    name: 'content'\n  },]\n\n  return await inquirer.prompt(promptList).then(answers => {\n    return function () {\n      axios.get(`https://sc.ftqq.com/${config.server_sckey}.send`, {\n        params: {\n          text: answers.title,\n          desp: answers.content\n        }\n      })\n    }\n  })\n}\n```\n\n#### 参数处理验证器\n\n[/plugins/validator.js](https://github.com/JasonLamv-t/WebMonitor/blob/main/plugins/validator.js)\n\n```javascript\nconst { InvalidOptionArgumentError } = require('commander')  // commander自带的异常\n\nfunction isUrl(url) {\n  const r = new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$', 'g')\n  if (!r.test(url)) throw new InvalidOptionArgumentError('Not a legitimate URL.')  // 抛出异常\n  return url\n}\n\nfunction isInt(value, dummyPrevious) {\n  // parseInt takes a string and a radix\n  const parsedValue = parseInt(value, 10)\n  if (isNaN(parsedValue)) throw new InvalidOptionArgumentError('Not a number.')\n  return parsedValue\n}\n```\n\n## 发布\n\n1. 到[npm官网](https://www.npmjs.com/)注册一个账户\n2. 执行`npm login`并输入注册信息进行登陆\n3. 修改`package.json`或重新执行`yarn init`或者`npm init`补全信息\n4. 执行`npm publish`\n\n","slug":"webmonitor","published":1,"updated":"2021-10-22T18:12:41.061Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv2ro26h00092r4a3qv5d5ew","content":"<h1 id=\"WebMonitor-CLI-Node-Commander&#x547D;&#x4EE4;&#x884C;&#x5DE5;&#x5177;&#x5B9E;&#x6218;\"><a href=\"#WebMonitor-CLI-Node-Commander&#x547D;&#x4EE4;&#x884C;&#x5DE5;&#x5177;&#x5B9E;&#x6218;\" class=\"headerlink\" title=\"WebMonitor-CLI Node Commander&#x547D;&#x4EE4;&#x884C;&#x5DE5;&#x5177;&#x5B9E;&#x6218;\"></a>WebMonitor-CLI Node Commander&#x547D;&#x4EE4;&#x884C;&#x5DE5;&#x5177;&#x5B9E;&#x6218;</h1><p>&#x5F00;&#x59CB;&#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x653E;&#x4E0A;<br>&#x6E90;&#x7801;&#x4E0E;&#x4F7F;&#x7528;&#x8BF4;&#x660E;&#xFF1A;<a href=\"https://github.com/JasonLamv-t/WebMonitor\">JasonLamv-t/WebMonitor</a></p>\n<p>&#x53C2;&#x8003;&#x6587;&#x6863;&#xFF1A;<br>&#x57FA;&#x7840;&#x6846;&#x67B6;&#xFF1A;<a href=\"https://github.com/tj/commander.js/blob/master/Readme_zh-CN.md\">commander.js&#x4E2D;&#x6587;&#x6587;&#x6863;</a><br>&#x4EA4;&#x4E92;&#x5F0F;&#x547D;&#x4EE4;&#x884C;&#x5DE5;&#x5177;&#xFF1A;<a href=\"https://www.npmjs.com/package/inquirer\">inquirer</a><br>&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#x6837;&#x5F0F;&#xFF1A;<a href=\"https://www.npmjs.com/package/chalk\">chalk</a><br>node Jquery&#x5B9E;&#x73B0;&#xFF1A;<a href=\"https://github.com/cheeriojs/cheerio/wiki/Chinese-README\">cheerio&#x4E2D;&#x6587;&#x6587;&#x6863;</a></p>\n<h2 id=\"&#x529F;&#x80FD;&#x8BBE;&#x8BA1;\"><a href=\"#&#x529F;&#x80FD;&#x8BBE;&#x8BA1;\" class=\"headerlink\" title=\"&#x529F;&#x80FD;&#x8BBE;&#x8BA1;\"></a>&#x529F;&#x80FD;&#x8BBE;&#x8BA1;</h2><ul>\n<li>&#x672C;&#x5730;&#x8FD0;&#x884C;</li>\n<li><del>&#x8FDC;&#x7A0B;&#x8FD0;&#x884C;</del></li>\n<li><del>&#x6BCF;&#x65E5;&#x81EA;&#x52A8;&#x8FD0;&#x884C;</del></li>\n<li><del>&#x4EFB;&#x52A1;&#x7BA1;&#x7406;</del></li>\n<li>&#x5FAE;&#x4FE1;&#x63A8;&#x9001;&#x6D88;&#x606F;</li>\n<li><del>&#x90AE;&#x4EF6;&#x63D0;&#x9192;</del></li>\n<li><del>&#x77ED;&#x4FE1;&#x63D0;&#x9192;</del></li>\n</ul>\n<h2 id=\"&#x5F00;&#x53D1;\"><a href=\"#&#x5F00;&#x53D1;\" class=\"headerlink\" title=\"&#x5F00;&#x53D1;\"></a>&#x5F00;&#x53D1;</h2><h3 id=\"&#x9879;&#x76EE;&#x7684;&#x521D;&#x59CB;&#x5316;&#x4E0E;&#x76EE;&#x5F55;&#x7ED3;&#x6784;\"><a href=\"#&#x9879;&#x76EE;&#x7684;&#x521D;&#x59CB;&#x5316;&#x4E0E;&#x76EE;&#x5F55;&#x7ED3;&#x6784;\" class=\"headerlink\" title=\"&#x9879;&#x76EE;&#x7684;&#x521D;&#x59CB;&#x5316;&#x4E0E;&#x76EE;&#x5F55;&#x7ED3;&#x6784;\"></a>&#x9879;&#x76EE;&#x7684;&#x521D;&#x59CB;&#x5316;&#x4E0E;&#x76EE;&#x5F55;&#x7ED3;&#x6784;</h3><p>&#x9879;&#x76EE;&#x4F7F;&#x7528;&#x4E86;yarn&#x4F5C;&#x4E3A;&#x5305;&#x548C;&#x4F9D;&#x8D56;&#x7BA1;&#x7406;&#x5668;&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x559C;&#x597D;&#x6267;&#x884C;<code>yarn init</code>&#x6216;<code>npm init</code>&#x6765;&#x521D;&#x59CB;&#x5316;&#x9879;&#x76EE;<br>&#x4EE5;&#x4E0B;&#x662F;&#x672C;&#x9879;&#x76EE;&#x7684;&#x7ED3;&#x6784;&#xFF0C;&#x4F60;&#x81EA;&#x5DF1;&#x7684;&#x9879;&#x76EE;&#x5F53;&#x7136;&#x53EF;&#x4EE5;&#x4E0D;&#x540C;&#xFF0C;&#x6709;&#x6761;&#x7406;&#x5373;&#x53EF;:</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">WebMonitor<br>&#x251C;&#x2500;&#x2500; README<span class=\"hljs-selector-class\">.md</span><br>&#x251C;&#x2500;&#x2500; bin\t\t\t\t\t\t\t\t<br>&#x2502;   &#x251C;&#x2500;&#x2500; app<span class=\"hljs-selector-class\">.js</span>        <span class=\"hljs-comment\">// &#x7A0B;&#x5E8F;&#x5165;&#x53E3;&#x6587;&#x4EF6;</span><br>&#x2502;   &#x251C;&#x2500;&#x2500; config<span class=\"hljs-selector-class\">.js</span>     <span class=\"hljs-comment\">// &#x914D;&#x7F6E;&#x547D;&#x4EE4;&#x5B50;&#x6587;&#x4EF6;</span><br>&#x2502;   &#x2514;&#x2500;&#x2500; run<span class=\"hljs-selector-class\">.js</span>        <span class=\"hljs-comment\">// &#x8FD0;&#x884C;&#x547D;&#x4EE4;&#x5B50;&#x6587;&#x4EF6;</span><br>&#x251C;&#x2500;&#x2500; package<span class=\"hljs-selector-class\">.json</span><br>&#x251C;&#x2500;&#x2500; plugins<br>&#x2502;   &#x251C;&#x2500;&#x2500; notify<span class=\"hljs-selector-class\">.js</span>     <span class=\"hljs-comment\">// &#x901A;&#x77E5;&#x5904;&#x7406;&#x5668;</span><br>&#x2502;   &#x251C;&#x2500;&#x2500; theme<span class=\"hljs-selector-class\">.js</span>      <span class=\"hljs-comment\">// &#x4E3B;&#x9898;&#x8BBE;&#x7F6E;</span><br>&#x2502;   &#x2514;&#x2500;&#x2500; validator<span class=\"hljs-selector-class\">.js</span>  <span class=\"hljs-comment\">// &#x6570;&#x636E;&#x9A8C;&#x8BC1;&#x5668;&#x548C;&#x5904;&#x7406;&#x5668;</span><br>&#x251C;&#x2500;&#x2500; test<span class=\"hljs-selector-class\">.html</span><br>&#x251C;&#x2500;&#x2500; yarn<span class=\"hljs-selector-class\">.lock</span>\t\t\t<br>&#x2514;&#x2500;&#x2500; node_modules<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"&#x5B89;&#x88C5;&#x9879;&#x76EE;&#x6240;&#x9700;&#x4F9D;&#x8D56;\"><a href=\"#&#x5B89;&#x88C5;&#x9879;&#x76EE;&#x6240;&#x9700;&#x4F9D;&#x8D56;\" class=\"headerlink\" title=\"&#x5B89;&#x88C5;&#x9879;&#x76EE;&#x6240;&#x9700;&#x4F9D;&#x8D56;\"></a>&#x5B89;&#x88C5;&#x9879;&#x76EE;&#x6240;&#x9700;&#x4F9D;&#x8D56;</h3><p>&#x6267;&#x884C;<code>yarn add commander inquirer chalk cheerio axios</code>&#xFF0C;&#x5F53;&#x7136;<code>npm</code>&#x4E5F;&#x884C;</p>\n<h3 id=\"&#x7A0B;&#x5E8F;&#x5165;&#x53E3;\"><a href=\"#&#x7A0B;&#x5E8F;&#x5165;&#x53E3;\" class=\"headerlink\" title=\"&#x7A0B;&#x5E8F;&#x5165;&#x53E3;\"></a>&#x7A0B;&#x5E8F;&#x5165;&#x53E3;</h3><h4 id=\"&#x5B9A;&#x4E49;&#x7A0B;&#x5E8F;&#x7684;&#x6839;&#x547D;&#x4EE4;&#x548C;&#x5165;&#x53E3;\"><a href=\"#&#x5B9A;&#x4E49;&#x7A0B;&#x5E8F;&#x7684;&#x6839;&#x547D;&#x4EE4;&#x548C;&#x5165;&#x53E3;\" class=\"headerlink\" title=\"&#x5B9A;&#x4E49;&#x7A0B;&#x5E8F;&#x7684;&#x6839;&#x547D;&#x4EE4;&#x548C;&#x5165;&#x53E3;\"></a>&#x5B9A;&#x4E49;&#x7A0B;&#x5E8F;&#x7684;&#x6839;&#x547D;&#x4EE4;&#x548C;&#x5165;&#x53E3;</h4><p>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;app.js&#x6587;&#x4EF6;&#x6216;&#x8005;index.js&#x6587;&#x4EF6;&#xFF0C;&#x5728;&#x6839;&#x76EE;&#x5F55;&#x6216;&#x5176;&#x4ED6;&#x5B9A;&#x4E49;&#x7684;&#x76EE;&#x5F55;&#x5747;&#x53EF;&#xFF0C;&#x4EE5;&#x4E0B;&#x793A;&#x4F8B;&#x5747;&#x4EE5;&#x672C;&#x9879;&#x76EE;&#x4E3A;&#x53C2;&#x8003;&#xFF1A;<a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/app.js\">/bin/app.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-meta\">#! /usr/bin/env node</span><br><span class=\"hljs-comment\">// &#x6307;&#x5B9A;&#x811A;&#x672C;&#x89E3;&#x6790;&#x6267;&#x884C;&#x5668;&#xFF0C;&#x6240;&#x6709;&#x547D;&#x4EE4;&#x811A;&#x672C;&#x6587;&#x4EF6;&#x90FD;&#x662F;&#x5FC5;&#x987B;&#x7684;</span><br><br><span class=\"hljs-keyword\">const</span> { Command } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;commander&apos;</span>)<br><span class=\"hljs-keyword\">const</span> program = <span class=\"hljs-keyword\">new</span> Command()<br><br>program<br>  .version(<span class=\"hljs-string\">&apos;1.1.0&apos;</span>)<br>  .command(<span class=\"hljs-string\">&apos;run&apos;</span>, <span class=\"hljs-string\">&apos;run a monitor process immediately&apos;</span>, { <span class=\"hljs-attr\">executableFile</span>: <span class=\"hljs-string\">&apos;run&apos;</span> }).alias(<span class=\"hljs-string\">&apos;r&apos;</span>)<br>  .command(<span class=\"hljs-string\">&apos;config&apos;</span>, <span class=\"hljs-string\">&apos;config&apos;</span>,{ <span class=\"hljs-attr\">executableFile</span>: <span class=\"hljs-string\">&apos;config&apos;</span> }).alias(<span class=\"hljs-string\">&apos;c&apos;</span>)<br>  <span class=\"hljs-comment\">// .command(&apos;&#x5B50;&#x547D;&#x4EE4;&apos;, &apos;&#x547D;&#x4EE4;&#x63CF;&#x8FF0;&apos;, { executableFile: &apos;&#x5B50;&#x547D;&#x4EE4;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&apos; }).alias(&apos;&#x547D;&#x4EE4;&#x522B;&#x79F0;&apos;)</span><br><br>program.parse(process.argv)  <span class=\"hljs-comment\">// &#x65E0;&#x8BBA;&#x5B50;&#x547D;&#x4EE4;&#x8FD8;&#x662F;&#x6839;&#x547D;&#x4EE4;&#x90FD;&#x9700;&#x8981;&#x6267;&#x884C;program.parse&#x65B9;&#x6CD5;&#xFF0C;&#x53C2;&#x6570;&#x8BE6;&#x89C1;commander&#x6587;&#x6863;</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">$ <span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">bin</span>/app.js -V<br><span class=\"hljs-number\">1.1</span>.<span class=\"hljs-number\">0</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"&#x8FDE;&#x63A5;&#x5230;&#x672C;&#x5730;&#x4F9D;&#x8D56;\"><a href=\"#&#x8FDE;&#x63A5;&#x5230;&#x672C;&#x5730;&#x4F9D;&#x8D56;\" class=\"headerlink\" title=\"&#x8FDE;&#x63A5;&#x5230;&#x672C;&#x5730;&#x4F9D;&#x8D56;\"></a>&#x8FDE;&#x63A5;&#x5230;&#x672C;&#x5730;&#x4F9D;&#x8D56;</h4><p>package.json&#x4E2D;&#x6DFB;&#x52A0;&#x4EE5;&#x4E0B;&#x9879;</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">...<br><span class=\"hljs-string\">&quot;bin&quot;</span>: {<br>    <span class=\"hljs-attr\">&quot;webmonitor&quot;</span>: <span class=\"hljs-string\">&quot;./bin/app.js&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;wmcli&quot;</span>: <span class=\"hljs-string\">&quot;./bin/app.js&quot;</span><br>  },<br>...<br></code></pre></td></tr></table></figure>\n\n<p>&#x6267;&#x884C;<code>yarn link</code></p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs subunit\">$ yarn link<br>yarn link v1.22.10<br><span class=\"hljs-keyword\">success </span>Registered &quot;webmonitor-cli&quot;.<br>info You can now run `yarn link &quot;webmonitor-cli&quot;` in the projects where you want to use this package and it will be used instead.<br>&#x2728;  Done in 0.05s.<br>$ webmonitor -V<br>1.1.0<br>$ wmcli --version<br>1.1.0<br></code></pre></td></tr></table></figure>\n\n<p>&#x5230;&#x8FD9;&#x4E00;&#x6B65;&#xFF0C;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x6839;&#x547D;&#x4EE4;&#x7684;&#x5165;&#x53E3;&#x5B9A;&#x4E49;&#x5E76;&#x80FD;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x8C03;&#x7528;&#xFF0C;&#x8FD9;&#x5C06;&#x65B9;&#x4FBF;&#x6211;&#x4EEC;&#x540E;&#x9762;&#x7684;&#x8C03;&#x8BD5;</p>\n<h3 id=\"&#x7279;&#x5B9A;&#x8F93;&#x51FA;&#x4E3B;&#x9898;&#x5B9A;&#x4E49;\"><a href=\"#&#x7279;&#x5B9A;&#x8F93;&#x51FA;&#x4E3B;&#x9898;&#x5B9A;&#x4E49;\" class=\"headerlink\" title=\"&#x7279;&#x5B9A;&#x8F93;&#x51FA;&#x4E3B;&#x9898;&#x5B9A;&#x4E49;\"></a>&#x7279;&#x5B9A;&#x8F93;&#x51FA;&#x4E3B;&#x9898;&#x5B9A;&#x4E49;</h3><p>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4E3B;&#x9898;&#x6587;&#x4EF6;/plugins/theme.js&#xFF0C;&#x7528;&#x4E8E;&#x5B9A;&#x4E49;&#x4E00;&#x4E9B;&#x7279;&#x5B9A;&#x8F93;&#x51FA;&#x7684;&#x4E3B;&#x9898;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x559C;&#x597D;&#x4FEE;&#x6539;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> chalk = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;chalk&apos;</span>)<br><span class=\"hljs-keyword\">const</span> error = chalk.bgRedBright.white<br><span class=\"hljs-keyword\">const</span> warning = chalk.keyword(<span class=\"hljs-string\">&apos;orange&apos;</span>)<br><span class=\"hljs-keyword\">const</span> info = chalk.yellowBright<br><br><span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&apos;error test&apos;</span>))<br><span class=\"hljs-built_in\">console</span>.log(warning(<span class=\"hljs-string\">&apos;warning test&apos;</span>))<br><span class=\"hljs-built_in\">console</span>.log(info(<span class=\"hljs-string\">&apos;info test&apos;</span>))<br><br><span class=\"hljs-built_in\">module</span>.exports = {<br>  error, warning, info<br>}<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"&#x5B50;&#x547D;&#x4EE4;\"><a href=\"#&#x5B50;&#x547D;&#x4EE4;\" class=\"headerlink\" title=\"&#x5B50;&#x547D;&#x4EE4;\"></a>&#x5B50;&#x547D;&#x4EE4;</h3><h4 id=\"config&#x547D;&#x4EE4;\"><a href=\"#config&#x547D;&#x4EE4;\" class=\"headerlink\" title=\"config&#x547D;&#x4EE4;\"></a>config&#x547D;&#x4EE4;</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/config.js\">/bin/config.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-meta\">#! /usr/bin/env node</span><br><br><span class=\"hljs-keyword\">const</span> inquirer = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;inquirer&apos;</span>)<br><span class=\"hljs-keyword\">const</span> fs = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;fs&apos;</span>)<br><span class=\"hljs-keyword\">const</span> os = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;os&apos;</span>)<br><span class=\"hljs-keyword\">const</span> { Command } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;commander&apos;</span>)<br><span class=\"hljs-keyword\">const</span> program = <span class=\"hljs-keyword\">new</span> Command()  <span class=\"hljs-comment\">// &#x540C;&#x6837;&#x9002;&#x7528;new Command&#x5BF9;&#x8C61;&#x521B;&#x5EFA;&#x5B50;&#x547D;&#x4EE4;&#x5B9E;&#x4F8B;</span><br><span class=\"hljs-keyword\">const</span> { error, warning, info } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;../plugins/theme&apos;</span>)<br><br>program<br><span class=\"hljs-comment\">// .option(&apos;-p --path &lt;absolue path&gt;&apos;, &apos;config file path&apos;)</span><br><br>program.parse(process.argv)  <span class=\"hljs-comment\">// &#x65E0;&#x8BBA;&#x5B50;&#x547D;&#x4EE4;&#x8FD8;&#x662F;&#x6839;&#x547D;&#x4EE4;&#x90FD;&#x9700;&#x8981;&#x6267;&#x884C;program.parse&#x65B9;&#x6CD5;&#xFF0C;&#x53C2;&#x6570;&#x8BE6;&#x89C1;commander&#x6587;&#x6863;</span><br><span class=\"hljs-keyword\">const</span> options = program.opts()  <span class=\"hljs-comment\">// &#x901A;&#x8FC7;&#x6267;&#x884C;program.opts&#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x5168;&#x90E8;&#x53C2;&#x6570;&#x5BF9;&#x8C61;</span><br><br><span class=\"hljs-comment\">// &#x5B9A;&#x4E49;&#x63D0;&#x793A;&#x5217;&#x8868;&#xFF0C;&#x5BF9;&#x5E94;&#x5BF9;&#x8C61;&#x5C5E;&#x6027;&#x8BE6;&#x89C1;inquirer&#x6587;&#x6863;</span><br><span class=\"hljs-keyword\">const</span> promptList = [{<br>  <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&apos;input&apos;</span>,  <span class=\"hljs-comment\">// &#x8F93;&#x5165;&#x7C7B;&#x578B;</span><br>  <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&apos;&#x8BF7;&#x8F93;&#x5165;Server&#x9171;&#x7684;SCKEY:&apos;</span>,  <span class=\"hljs-comment\">// &#x63D0;&#x793A;&#x6D88;&#x606F;</span><br>  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&apos;server_sckey&apos;</span>  <span class=\"hljs-comment\">// &#x53D8;&#x91CF;&#x4EA9;</span><br>}]<br><br><span class=\"hljs-comment\">// &#x6267;&#x884C;inquirer.prompt&#x65B9;&#x6CD5;&#x663E;&#x793A;&#x63D0;&#x793A;</span><br><span class=\"hljs-comment\">// &#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x4E00;&#x65E6;&#x6267;&#x884C;&#x6B64;&#x65B9;&#x6CD5;&#x4F1A;&#x6309;&#x987A;&#x5E8F;&#x663E;&#x793A;&#x4F20;&#x5165;&#x5217;&#x8868;&#x7684;&#x6240;&#x6709;&#x63D0;&#x793A;&#x5E76;&#x83B7;&#x53D6;&#x8F93;&#x5165;</span><br><span class=\"hljs-comment\">// &#x663E;&#x7136;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#xFF0C;&#x590D;&#x6742;&#x7684;&#x8868;&#x5355;&#x9700;&#x8981;&#x591A;&#x6B21;&#x6309;&#x7167;&#x8868;&#x5355;&#x903B;&#x8F91;&#x8C03;&#x7528;inquirer.prompt&#x65B9;&#x6CD5;&#x6765;&#x5B9E;&#x73B0;</span><br>inquirer.prompt(promptList).then(<span class=\"hljs-function\"><span class=\"hljs-params\">answers</span> =&gt;</span> {<br>  <span class=\"hljs-keyword\">const</span> configDirPath = os.homedir() + <span class=\"hljs-string\">&apos;/.webmonitor/&apos;</span>  <span class=\"hljs-comment\">// &#x83B7;&#x53D6;&#x7528;&#x6237;&#x76EE;&#x5F55;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x62FC;&#x63A5;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5939;&#x8DEF;&#x5F84;</span><br>  <span class=\"hljs-keyword\">let</span> config = {}<br>  <span class=\"hljs-comment\">// &#x5224;&#x65AD;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x662F;&#x5426;&#x5B58;&#x5728;&#xFF0C;&#x4E0D;&#x5B58;&#x5728;&#x5219;&#x521B;&#x5EFA;&#x8DEF;&#x5F84;</span><br>  <span class=\"hljs-keyword\">if</span> (fs.existsSync(configDirPath + <span class=\"hljs-string\">&apos;config.json&apos;</span>)) {<br>    <span class=\"hljs-keyword\">const</span> rawdata = fs.readFileSync(configDirPath + <span class=\"hljs-string\">&apos;config.json&apos;</span>)<br>    config = <span class=\"hljs-built_in\">JSON</span>.parse(rawdata)<br>  } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (!fs.existsSync(configDirPath)) fs.mkdirSync(configDirPath)<br><br>  config.server_sckey = answers.server_sckey <span class=\"hljs-comment\">// &#x8BFB;&#x5165;&#x8F93;&#x5165;</span><br><br>  <span class=\"hljs-comment\">// &#x4FDD;&#x5B58;&#x5230;&#x914D;&#x7F6E;&#x6587;&#x4EF6;</span><br>  fs.writeFileSync(configDirPath + <span class=\"hljs-string\">&apos;config.json&apos;</span>, <span class=\"hljs-built_in\">JSON</span>.stringify(config), { <span class=\"hljs-attr\">flag</span>: <span class=\"hljs-string\">&apos;w+&apos;</span> })<br>  <span class=\"hljs-built_in\">console</span>.log(info(<span class=\"hljs-string\">`Config file save as <span class=\"hljs-subst\">${configDirPath}</span>config.json`</span>))<br>})<br><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"run&#x547D;&#x4EE4;&#x53C2;&#x6570;&#x5B9A;&#x4E49;\"><a href=\"#run&#x547D;&#x4EE4;&#x53C2;&#x6570;&#x5B9A;&#x4E49;\" class=\"headerlink\" title=\"run&#x547D;&#x4EE4;&#x53C2;&#x6570;&#x5B9A;&#x4E49;\"></a>run&#x547D;&#x4EE4;&#x53C2;&#x6570;&#x5B9A;&#x4E49;</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/run.js\">/bin/run.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">program<br>  .usage(<span class=\"hljs-string\">&apos;-u &lt;target url&gt; [options]&apos;</span>)  <span class=\"hljs-comment\">// &#x8F93;&#x51FA;&#xFF1A;&#x547D;&#x4EE4; + usage&#x5185;&#x5BB9;</span><br>  .requiredOption(<span class=\"hljs-string\">&apos;-u --url &lt;url&gt;&apos;</span>, <span class=\"hljs-string\">&apos;monitoring target&apos;</span>, validator.isUrl)<br>  <span class=\"hljs-comment\">// &#x5FC5;&#x987B;&#x53C2;&#x6570;&#xFF0C;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#x9A8C;&#x8BC1;&#x548C;&#x5904;&#x7406;&#x51FD;&#x6570;&#xFF0C;&#x8FD4;&#x56DE;&#x9A8C;&#x8BC1;&#x5904;&#x7406;&#x540E;&#x7684;&#x503C;&#xFF0C;&#x8BE6;&#x89C1;&#x53C2;&#x6570;&#x5904;&#x7406;</span><br>  .option(<span class=\"hljs-string\">&apos;-l, --log&apos;</span>, <span class=\"hljs-string\">&apos;log mode&apos;</span>, <span class=\"hljs-literal\">false</span>)<br>  <span class=\"hljs-comment\">// &#x6B64;&#x5904;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#x9ED8;&#x8BA4;&#x503C;&#xFF0C;&#x65E0;&#x8F93;&#x5165;&#x53D8;&#x91CF;&#xFF0C;&#x5373;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x65E0; &lt;any&gt; &#x7684;&#xFF0C;&#x68C0;&#x6D4B;&#x5230;&#x8BE5;&#x53C2;&#x6570;&#x5219;&#x5BF9;&#x5E94;&#x503C;&#x4E3A;true&#xFF0C;&#x5426;&#x5219;&#x4E3A;undefined&#xFF0C;&#x6240;&#x4EE5;&#x8BBE;&#x7F6E;&#x4E86;&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;false</span><br>  .option(<span class=\"hljs-string\">&apos;-i, --interval &lt;delay&gt;&apos;</span>, <span class=\"hljs-string\">&apos;the interval between initiating a web request in seconds&apos;</span>, validator.isInt, <span class=\"hljs-number\">60</span>)<br>  <span class=\"hljs-comment\">// &#x6B64;&#x5904;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#x9A8C;&#x8BC1;&#x51FD;&#x6570;&#xFF0C;&#x7B2C;&#x56DB;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#x9ED8;&#x8BA4;&#x503C;</span><br>  .option(<span class=\"hljs-string\">&apos;-D, --debug&apos;</span>, <span class=\"hljs-string\">&apos;debug mode&apos;</span>, <span class=\"hljs-literal\">false</span>)<br>  .option(<span class=\"hljs-string\">&apos;-d, --daemon&apos;</span>, <span class=\"hljs-string\">&apos;monitor whether to continue after the change of the web page is detected&apos;</span>, <span class=\"hljs-literal\">false</span>)<br>  .addOption(<span class=\"hljs-keyword\">new</span> Option(<span class=\"hljs-string\">&apos;-M, --mode &lt;operation mode&gt;&apos;</span>, <span class=\"hljs-string\">&apos;currently local only&apos;</span>).choices([<span class=\"hljs-string\">&apos;local&apos;</span>]).default(<span class=\"hljs-string\">&apos;local&apos;</span>))<br>  <span class=\"hljs-comment\">// &#x81EA;&#x5B9A;&#x4E49;&#x53C2;&#x6570;&#xFF0C;&#x4F7F;&#x7528;new Option&#x65B9;&#x6CD5;&#x521B;&#x5EFA;&#xFF0C;choices&#x8981;&#x6C42;&#x8F93;&#x5165;&#x503C;&#x5728;&#x679A;&#x4E3E;&#x8303;&#x56F4;&#x5185;&#xFF0C;default&#x8BBE;&#x7F6E;&#x9ED8;&#x8BA4;&#x503C;&#xFF0C;&#x5176;&#x4ED6;&#x65B9;&#x6CD5;commander.js&#x6587;&#x6863;&#x5E76;&#x65E0;&#x8BF4;&#x660E;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x67E5;&#x770B;Option&#x65B9;&#x6CD5;&#x5B9A;&#x4E49;&#x4EE3;&#x7801;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x63A5;&#x53E3;</span><br>  .addOption(<span class=\"hljs-keyword\">new</span> Option(<span class=\"hljs-string\">&apos;-m, --method &lt;request method&gt;&apos;</span>, <span class=\"hljs-string\">&apos;current get only&apos;</span>).choices([<span class=\"hljs-string\">&apos;get&apos;</span>]).default(<span class=\"hljs-string\">&apos;get&apos;</span>))<br>  .option(<span class=\"hljs-string\">&apos;-r, --retry &lt;retry time&gt;&apos;</span>, <span class=\"hljs-string\">&apos;retry times limit&apos;</span>, validator.isInt, <span class=\"hljs-number\">5</span>)<br>  .option(<span class=\"hljs-string\">&apos;-w, --wechat&apos;</span>, <span class=\"hljs-string\">&apos;enable Wechat push notification&apos;</span>)<br><br>program.parse(process.argv)<br><br><span class=\"hljs-keyword\">const</span> options = program.opts()\t<span class=\"hljs-comment\">// &#x89E3;&#x6790;&#x83B7;&#x53D6;&#x53C2;&#x6570;&#x5BF9;&#x8C61;</span><br><span class=\"hljs-keyword\">if</span> (options.debug) <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;options: &apos;</span>, options)  <span class=\"hljs-comment\">// &#x5982;&#x679C;&#x662F;&#x8C03;&#x8BD5;&#x6A21;&#x5F0F;&#x5219;&#x6253;&#x5370;&#x5168;&#x90E8;&#x53C2;&#x6570;</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"&#x5B9E;&#x73B0;&#x903B;&#x8F91;\"><a href=\"#&#x5B9E;&#x73B0;&#x903B;&#x8F91;\" class=\"headerlink\" title=\"&#x5B9E;&#x73B0;&#x903B;&#x8F91;\"></a>&#x5B9E;&#x73B0;&#x903B;&#x8F91;</h4><p>&#x83B7;&#x53D6;&#x7F51;&#x9875;&#x5185;&#x5BB9;&#xFF0C;&#x5E76;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;<br>&#x7531;&#x4E8E;&#x7F51;&#x9875;&#x6E90;&#x7801;&#x53EF;&#x80FD;&#x53D1;&#x751F;&#x52A8;&#x6001;&#x6539;&#x53D8;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x4F7F;&#x7528;cheerio&#x5BF9;&#x7F51;&#x9875;&#x5185;&#x5BB9;&#x8FDB;&#x884C;&#x89E3;&#x6790;&#xFF0C;&#x83B7;&#x53D6;&#x7F51;&#x9875;&#x7684;&#x663E;&#x793A;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#xFF0C;&#x540C;&#x65F6;&#x65B9;&#x4FBF;&#x540E;&#x7EED;&#x5BF9;&#x81EA;&#x5B9A;&#x4E49;&#x76D1;&#x6D4B;&#x5185;&#x5BB9;&#x7684;&#x5347;&#x7EA7;&#x3002;</p>\n<h4 id=\"&#x83B7;&#x53D6;&#x7F51;&#x9875;&#x5185;&#x5BB9;\"><a href=\"#&#x83B7;&#x53D6;&#x7F51;&#x9875;&#x5185;&#x5BB9;\" class=\"headerlink\" title=\"&#x83B7;&#x53D6;&#x7F51;&#x9875;&#x5185;&#x5BB9;\"></a>&#x83B7;&#x53D6;&#x7F51;&#x9875;&#x5185;&#x5BB9;</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/run.js\">/bin/run.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> getRes = <span class=\"hljs-keyword\">async</span> () =&gt; {<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {<br>    axios[options.method](options.url)<br>      .then(<span class=\"hljs-function\"><span class=\"hljs-params\">r</span> =&gt;</span> {<br>        <span class=\"hljs-keyword\">const</span> $ = cheerio.load(r.data)<br>        <span class=\"hljs-keyword\">if</span> (options.debug) <span class=\"hljs-built_in\">console</span>.log($.text())<br>        resolve($.text())<br>      }).catch(<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> {<br>        <span class=\"hljs-keyword\">if</span> (e.response) {<br>          <span class=\"hljs-comment\">// The request was made and the server responded with a status code</span><br>          <span class=\"hljs-comment\">// that falls out of the range of 2xx</span><br>          <span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&apos;Error! Request error. StatusCode:&apos;</span>, e.response.status))<br>          <span class=\"hljs-keyword\">if</span> (options.debug || options.log) {<br>            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;Response Data:&apos;</span>, e.response.data)<br>            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;Response Header:&apos;</span>, e.response.headers)<br>          }<br>        } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (e.request) {<br>          <span class=\"hljs-comment\">// The request was made but no response was received</span><br>          <span class=\"hljs-comment\">// `error.request` is an instance of XMLHttpRequest in the browser and an instance of</span><br>          <span class=\"hljs-comment\">// http.ClientRequest in node.js</span><br>          <span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&apos;The request was made but no response was received&apos;</span>))<br>          <span class=\"hljs-keyword\">if</span> (options.debug || options.log) <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;Request:&apos;</span>, e.request)<br>          <span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">console</span>.log(warning(<span class=\"hljs-string\">&apos;add \\&apos;-l\\&apos; flag for more info&apos;</span>))<br>        } <span class=\"hljs-keyword\">else</span> {<br>          <span class=\"hljs-comment\">// Something happened in setting up the request that triggered an Error</span><br>          <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;Error&apos;</span>, e.message)<br>        }<br>        <span class=\"hljs-keyword\">if</span> (options.debug) <span class=\"hljs-built_in\">console</span>.log(e.config)<br>        reject(e)<br>      })<br>  })<br>}<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"&#x4E3B;&#x51FD;&#x6570;\"><a href=\"#&#x4E3B;&#x51FD;&#x6570;\" class=\"headerlink\" title=\"&#x4E3B;&#x51FD;&#x6570;\"></a>&#x4E3B;&#x51FD;&#x6570;</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> main = <span class=\"hljs-keyword\">async</span> () =&gt; {<br>  <span class=\"hljs-comment\">// &#x5982;&#x679C;&#x914D;&#x7F6E;&#x4E86;&#x5FAE;&#x4FE1;&#x63A8;&#x9001;&#xFF0C;&#x8BFB;&#x53D6;&#x914D;&#x7F6E;&#x5E76;&#x6784;&#x5EFA;&#x901A;&#x77E5;&#x65B9;&#x6CD5;</span><br>  <span class=\"hljs-keyword\">if</span> (options.wechat) options.wechat = <span class=\"hljs-keyword\">await</span> notify.wechat()<br>  <span class=\"hljs-keyword\">if</span> (!options.wechat) <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">// &#x68C0;&#x67E5;&#x662F;&#x5426;&#x6784;&#x5EFA;&#x901A;&#x77E5;&#x65B9;&#x6CD5;&#x6210;&#x529F;</span><br><br>  <span class=\"hljs-keyword\">let</span> requestCount = <span class=\"hljs-number\">0</span>, retryCount = <span class=\"hljs-number\">0</span><br>  <span class=\"hljs-keyword\">let</span> origin = <span class=\"hljs-keyword\">await</span> getRes()  <span class=\"hljs-comment\">// &#x83B7;&#x53D6;&#x521D;&#x59CB;&#x9875;&#x9762;</span><br>    .then(<span class=\"hljs-function\"><span class=\"hljs-params\">r</span> =&gt;</span> { <span class=\"hljs-keyword\">return</span> r })<br>    .catch(<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> {<br>      <span class=\"hljs-built_in\">console</span>.log(e)<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span><br>    })<br><br>  <span class=\"hljs-built_in\">console</span>.log(origin)<br><br>  <span class=\"hljs-keyword\">if</span> (!origin) <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">code</span>: -<span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&apos;Failed to request a web page for the first time.&apos;</span> }<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;The request for the web page is successful. Start monitoring.&apos;</span>)<br>\t<br>  <span class=\"hljs-comment\">// &#x6784;&#x5EFA;&#x5B9A;&#x65F6;&#x5FAA;&#x73AF;</span><br>  <span class=\"hljs-keyword\">let</span> pro = <span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-keyword\">async</span> () =&gt; {<br>    <span class=\"hljs-comment\">// &#x83B7;&#x53D6;&#x65B0;&#x7684;&#x9875;&#x9762;&#x5185;&#x5BB9;</span><br>    <span class=\"hljs-keyword\">let</span> newWeb = <span class=\"hljs-keyword\">await</span> getRes().then(<span class=\"hljs-function\"><span class=\"hljs-params\">r</span> =&gt;</span> {<br>      requestCount++<br>      retryCount = <span class=\"hljs-number\">0</span><br>      <span class=\"hljs-keyword\">return</span> r<br>    }).catch(<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> {<br>      retryCount++<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span><br>    })<br><br>    <span class=\"hljs-comment\">// The web page has not changed and is in log mode</span><br>    <span class=\"hljs-keyword\">if</span> (newWeb &amp;&amp; newWeb == origin &amp;&amp; options.log) <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`Request <span class=\"hljs-subst\">${requestCount}</span> times. The web page remains unchanged.`</span>)<br>    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (newWeb &amp;&amp; newWeb != origin) {<br>      <span class=\"hljs-built_in\">console</span>.log(info(<span class=\"hljs-string\">&apos;The web page has changed!&apos;</span>))<br>      <span class=\"hljs-keyword\">if</span> (options.wechat) options.wechat()  <span class=\"hljs-comment\">// &#x8C03;&#x7528;&#x5FAE;&#x4FE1;&#x901A;&#x77E5;</span><br>      <span class=\"hljs-keyword\">if</span> (!options.daemon) {  <span class=\"hljs-comment\">// &#x975E;&#x5B88;&#x62A4;&#x6A21;&#x5F0F;&#x5219;&#x9000;&#x51FA;</span><br>        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;process exit&apos;</span>)<br>        <span class=\"hljs-built_in\">clearInterval</span>(pro)<br>      } <span class=\"hljs-keyword\">else</span> origin = newWeb<br>    }<br>    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (!newWeb &amp;&amp; retryCount &lt;= options.retry) <span class=\"hljs-built_in\">console</span>.log(warning(<span class=\"hljs-string\">`Request fail, retry for <span class=\"hljs-subst\">${retryCount}</span> times`</span>))<br>    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (!newWeb &amp;&amp; retryCount &gt; options.retry) {<br>      <span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&apos;The number of retries exceeds the limit! Process exit.&apos;</span>))<br>      <span class=\"hljs-built_in\">clearInterval</span>(pro)<br>    }<br>  }, <span class=\"hljs-number\">1000</span> * options.interval)<br>}<br><br>main()<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"&#x5176;&#x4ED6;\"><a href=\"#&#x5176;&#x4ED6;\" class=\"headerlink\" title=\"&#x5176;&#x4ED6;\"></a>&#x5176;&#x4ED6;</h3><h4 id=\"&#x5FAE;&#x4FE1;&#x901A;&#x77E5;\"><a href=\"#&#x5FAE;&#x4FE1;&#x901A;&#x77E5;\" class=\"headerlink\" title=\"&#x5FAE;&#x4FE1;&#x901A;&#x77E5;\"></a>&#x5FAE;&#x4FE1;&#x901A;&#x77E5;</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/plugins/notify.js\">/plugins/notify.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> wechat = <span class=\"hljs-keyword\">async</span> () =&gt; {<br>  <span class=\"hljs-keyword\">const</span> configDirPath = os.homedir() + <span class=\"hljs-string\">&apos;/.webmonitor/&apos;</span><br>  <span class=\"hljs-keyword\">let</span> config = {}<br>  <span class=\"hljs-keyword\">if</span> (fs.existsSync(configDirPath + <span class=\"hljs-string\">&apos;config.json&apos;</span>)) {<br>    <span class=\"hljs-keyword\">const</span> rawdata = fs.readFileSync(configDirPath + <span class=\"hljs-string\">&apos;config.json&apos;</span>)<br>    config = <span class=\"hljs-built_in\">JSON</span>.parse(rawdata)<br>  }<br><br>  <span class=\"hljs-keyword\">if</span> (!config.server_sckey) {<br>    <span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&apos;Error: server&#x9171; SCKEY no configured.&apos;</span>))<br>    <span class=\"hljs-built_in\">console</span>.log(info(<span class=\"hljs-string\">&apos;please run \\&apos;wmcli config\\&apos; to config SCKEY&apos;</span>))<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&apos;process exit.&apos;</span>)<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span><br>  }<br><br>  <span class=\"hljs-keyword\">const</span> promptList = [{<br>    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&apos;input&apos;</span>,<br>    <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&apos;&#x8BF7;&#x8F93;&#x5165;&#x901A;&#x77E5;&#x6D88;&#x606F;&#x6807;&#x9898;:&apos;</span>,<br>    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&apos;title&apos;</span><br>  }, {<br>    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&apos;input&apos;</span>,<br>    <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&apos;&#x8BF7;&#x8F93;&#x5165;&#x901A;&#x77E5;&#x6D88;&#x606F;&#x5185;&#x5BB9;:&apos;</span>,<br>    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&apos;content&apos;</span><br>  },]<br><br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">await</span> inquirer.prompt(promptList).then(<span class=\"hljs-function\"><span class=\"hljs-params\">answers</span> =&gt;</span> {<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{<br>      axios.get(<span class=\"hljs-string\">`https://sc.ftqq.com/<span class=\"hljs-subst\">${config.server_sckey}</span>.send`</span>, {<br>        <span class=\"hljs-attr\">params</span>: {<br>          <span class=\"hljs-attr\">text</span>: answers.title,<br>          <span class=\"hljs-attr\">desp</span>: answers.content<br>        }<br>      })<br>    }<br>  })<br>}<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"&#x53C2;&#x6570;&#x5904;&#x7406;&#x9A8C;&#x8BC1;&#x5668;\"><a href=\"#&#x53C2;&#x6570;&#x5904;&#x7406;&#x9A8C;&#x8BC1;&#x5668;\" class=\"headerlink\" title=\"&#x53C2;&#x6570;&#x5904;&#x7406;&#x9A8C;&#x8BC1;&#x5668;\"></a>&#x53C2;&#x6570;&#x5904;&#x7406;&#x9A8C;&#x8BC1;&#x5668;</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/plugins/validator.js\">/plugins/validator.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> { InvalidOptionArgumentError } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&apos;commander&apos;</span>)  <span class=\"hljs-comment\">// commander&#x81EA;&#x5E26;&#x7684;&#x5F02;&#x5E38;</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isUrl</span>(<span class=\"hljs-params\">url</span>) </span>{<br>  <span class=\"hljs-keyword\">const</span> r = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">RegExp</span>(<span class=\"hljs-string\">&apos;^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$&apos;</span>, <span class=\"hljs-string\">&apos;g&apos;</span>)<br>  <span class=\"hljs-keyword\">if</span> (!r.test(url)) <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> InvalidOptionArgumentError(<span class=\"hljs-string\">&apos;Not a legitimate URL.&apos;</span>)  <span class=\"hljs-comment\">// &#x629B;&#x51FA;&#x5F02;&#x5E38;</span><br>  <span class=\"hljs-keyword\">return</span> url<br>}<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isInt</span>(<span class=\"hljs-params\">value, dummyPrevious</span>) </span>{<br>  <span class=\"hljs-comment\">// parseInt takes a string and a radix</span><br>  <span class=\"hljs-keyword\">const</span> parsedValue = <span class=\"hljs-built_in\">parseInt</span>(value, <span class=\"hljs-number\">10</span>)<br>  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">isNaN</span>(parsedValue)) <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> InvalidOptionArgumentError(<span class=\"hljs-string\">&apos;Not a number.&apos;</span>)<br>  <span class=\"hljs-keyword\">return</span> parsedValue<br>}<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"&#x53D1;&#x5E03;\"><a href=\"#&#x53D1;&#x5E03;\" class=\"headerlink\" title=\"&#x53D1;&#x5E03;\"></a>&#x53D1;&#x5E03;</h2><ol>\n<li>&#x5230;<a href=\"https://www.npmjs.com/\">npm&#x5B98;&#x7F51;</a>&#x6CE8;&#x518C;&#x4E00;&#x4E2A;&#x8D26;&#x6237;</li>\n<li>&#x6267;&#x884C;<code>npm login</code>&#x5E76;&#x8F93;&#x5165;&#x6CE8;&#x518C;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x767B;&#x9646;</li>\n<li>&#x4FEE;&#x6539;<code>package.json</code>&#x6216;&#x91CD;&#x65B0;&#x6267;&#x884C;<code>yarn init</code>&#x6216;&#x8005;<code>npm init</code>&#x8865;&#x5168;&#x4FE1;&#x606F;</li>\n<li>&#x6267;&#x884C;<code>npm publish</code></li>\n</ol>\n","site":{"data":{"galleries":[{"name":"深圳日记","cover":"/images/galleries/shenzhen/IMG_0.jpeg","description":"不要沉沦","photos":["/images/galleries/shenzhen/IMG_0.jpeg","/images/galleries/shenzhen/IMG_1.JPG","/images/galleries/shenzhen/IMG_2.JPG","/images/galleries/shenzhen/IMG_3.jpeg","/images/galleries/shenzhen/IMG_4.jpeg","/images/galleries/shenzhen/IMG_5.jpeg","/images/galleries/shenzhen/IMG_6.jpeg","/images/galleries/shenzhen/IMG_7.PNG","/images/galleries/shenzhen/IMG_8.JPG","/images/galleries/shenzhen/IMG_9.jpeg","/images/galleries/shenzhen/IMG_10.jpeg","/images/galleries/shenzhen/IMG_11.jpeg","/images/galleries/shenzhen/IMG_12.JPG","/images/galleries/shenzhen/IMG_13.jpeg","/images/galleries/shenzhen/IMG_14.jpeg"]}]}},"excerpt":"","more":"<h1 id=\"WebMonitor-CLI-Node-Commander命令行工具实战\"><a href=\"#WebMonitor-CLI-Node-Commander命令行工具实战\" class=\"headerlink\" title=\"WebMonitor-CLI Node Commander命令行工具实战\"></a>WebMonitor-CLI Node Commander命令行工具实战</h1><p>开始之前，先放上<br>源码与使用说明：<a href=\"https://github.com/JasonLamv-t/WebMonitor\">JasonLamv-t/WebMonitor</a></p>\n<p>参考文档：<br>基础框架：<a href=\"https://github.com/tj/commander.js/blob/master/Readme_zh-CN.md\">commander.js中文文档</a><br>交互式命令行工具：<a href=\"https://www.npmjs.com/package/inquirer\">inquirer</a><br>控制台输出样式：<a href=\"https://www.npmjs.com/package/chalk\">chalk</a><br>node Jquery实现：<a href=\"https://github.com/cheeriojs/cheerio/wiki/Chinese-README\">cheerio中文文档</a></p>\n<h2 id=\"功能设计\"><a href=\"#功能设计\" class=\"headerlink\" title=\"功能设计\"></a>功能设计</h2><ul>\n<li>本地运行</li>\n<li><del>远程运行</del></li>\n<li><del>每日自动运行</del></li>\n<li><del>任务管理</del></li>\n<li>微信推送消息</li>\n<li><del>邮件提醒</del></li>\n<li><del>短信提醒</del></li>\n</ul>\n<h2 id=\"开发\"><a href=\"#开发\" class=\"headerlink\" title=\"开发\"></a>开发</h2><h3 id=\"项目的初始化与目录结构\"><a href=\"#项目的初始化与目录结构\" class=\"headerlink\" title=\"项目的初始化与目录结构\"></a>项目的初始化与目录结构</h3><p>项目使用了yarn作为包和依赖管理器，当然，你可以根据喜好执行<code>yarn init</code>或<code>npm init</code>来初始化项目<br>以下是本项目的结构，你自己的项目当然可以不同，有条理即可:</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">WebMonitor<br>├── README<span class=\"hljs-selector-class\">.md</span><br>├── bin\t\t\t\t\t\t\t\t<br>│   ├── app<span class=\"hljs-selector-class\">.js</span>        <span class=\"hljs-comment\">// 程序入口文件</span><br>│   ├── config<span class=\"hljs-selector-class\">.js</span>     <span class=\"hljs-comment\">// 配置命令子文件</span><br>│   └── run<span class=\"hljs-selector-class\">.js</span>        <span class=\"hljs-comment\">// 运行命令子文件</span><br>├── package<span class=\"hljs-selector-class\">.json</span><br>├── plugins<br>│   ├── notify<span class=\"hljs-selector-class\">.js</span>     <span class=\"hljs-comment\">// 通知处理器</span><br>│   ├── theme<span class=\"hljs-selector-class\">.js</span>      <span class=\"hljs-comment\">// 主题设置</span><br>│   └── validator<span class=\"hljs-selector-class\">.js</span>  <span class=\"hljs-comment\">// 数据验证器和处理器</span><br>├── test<span class=\"hljs-selector-class\">.html</span><br>├── yarn<span class=\"hljs-selector-class\">.lock</span>\t\t\t<br>└── node_modules<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"安装项目所需依赖\"><a href=\"#安装项目所需依赖\" class=\"headerlink\" title=\"安装项目所需依赖\"></a>安装项目所需依赖</h3><p>执行<code>yarn add commander inquirer chalk cheerio axios</code>，当然<code>npm</code>也行</p>\n<h3 id=\"程序入口\"><a href=\"#程序入口\" class=\"headerlink\" title=\"程序入口\"></a>程序入口</h3><h4 id=\"定义程序的根命令和入口\"><a href=\"#定义程序的根命令和入口\" class=\"headerlink\" title=\"定义程序的根命令和入口\"></a>定义程序的根命令和入口</h4><p>创建一个app.js文件或者index.js文件，在根目录或其他定义的目录均可，以下示例均以本项目为参考：<a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/app.js\">/bin/app.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-meta\">#! /usr/bin/env node</span><br><span class=\"hljs-comment\">// 指定脚本解析执行器，所有命令脚本文件都是必须的</span><br><br><span class=\"hljs-keyword\">const</span> &#123; Command &#125; = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;commander&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> program = <span class=\"hljs-keyword\">new</span> Command()<br><br>program<br>  .version(<span class=\"hljs-string\">&#x27;1.1.0&#x27;</span>)<br>  .command(<span class=\"hljs-string\">&#x27;run&#x27;</span>, <span class=\"hljs-string\">&#x27;run a monitor process immediately&#x27;</span>, &#123; <span class=\"hljs-attr\">executableFile</span>: <span class=\"hljs-string\">&#x27;run&#x27;</span> &#125;).alias(<span class=\"hljs-string\">&#x27;r&#x27;</span>)<br>  .command(<span class=\"hljs-string\">&#x27;config&#x27;</span>, <span class=\"hljs-string\">&#x27;config&#x27;</span>,&#123; <span class=\"hljs-attr\">executableFile</span>: <span class=\"hljs-string\">&#x27;config&#x27;</span> &#125;).alias(<span class=\"hljs-string\">&#x27;c&#x27;</span>)<br>  <span class=\"hljs-comment\">// .command(&#x27;子命令&#x27;, &#x27;命令描述&#x27;, &#123; executableFile: &#x27;子命令文件路径&#x27; &#125;).alias(&#x27;命令别称&#x27;)</span><br><br>program.parse(process.argv)  <span class=\"hljs-comment\">// 无论子命令还是根命令都需要执行program.parse方法，参数详见commander文档</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs crmsh\">$ <span class=\"hljs-keyword\">node</span> <span class=\"hljs-title\">bin</span>/app.js -V<br><span class=\"hljs-number\">1.1</span>.<span class=\"hljs-number\">0</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"连接到本地依赖\"><a href=\"#连接到本地依赖\" class=\"headerlink\" title=\"连接到本地依赖\"></a>连接到本地依赖</h4><p>package.json中添加以下项</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">...<br><span class=\"hljs-string\">&quot;bin&quot;</span>: &#123;<br>    <span class=\"hljs-attr\">&quot;webmonitor&quot;</span>: <span class=\"hljs-string\">&quot;./bin/app.js&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;wmcli&quot;</span>: <span class=\"hljs-string\">&quot;./bin/app.js&quot;</span><br>  &#125;,<br>...<br></code></pre></td></tr></table></figure>\n\n<p>执行<code>yarn link</code></p>\n<figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs subunit\">$ yarn link<br>yarn link v1.22.10<br><span class=\"hljs-keyword\">success </span>Registered &quot;webmonitor-cli&quot;.<br>info You can now run `yarn link &quot;webmonitor-cli&quot;` in the projects where you want to use this package and it will be used instead.<br>✨  Done in 0.05s.<br>$ webmonitor -V<br>1.1.0<br>$ wmcli --version<br>1.1.0<br></code></pre></td></tr></table></figure>\n\n<p>到这一步，就完成了一个根命令的入口定义并能在命令行中调用，这将方便我们后面的调试</p>\n<h3 id=\"特定输出主题定义\"><a href=\"#特定输出主题定义\" class=\"headerlink\" title=\"特定输出主题定义\"></a>特定输出主题定义</h3><p>创建一个主题文件/plugins/theme.js，用于定义一些特定输出的主题，你可以根据自己喜好修改</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> chalk = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;chalk&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> error = chalk.bgRedBright.white<br><span class=\"hljs-keyword\">const</span> warning = chalk.keyword(<span class=\"hljs-string\">&#x27;orange&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> info = chalk.yellowBright<br><br><span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&#x27;error test&#x27;</span>))<br><span class=\"hljs-built_in\">console</span>.log(warning(<span class=\"hljs-string\">&#x27;warning test&#x27;</span>))<br><span class=\"hljs-built_in\">console</span>.log(info(<span class=\"hljs-string\">&#x27;info test&#x27;</span>))<br><br><span class=\"hljs-built_in\">module</span>.exports = &#123;<br>  error, warning, info<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"子命令\"><a href=\"#子命令\" class=\"headerlink\" title=\"子命令\"></a>子命令</h3><h4 id=\"config命令\"><a href=\"#config命令\" class=\"headerlink\" title=\"config命令\"></a>config命令</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/config.js\">/bin/config.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-meta\">#! /usr/bin/env node</span><br><br><span class=\"hljs-keyword\">const</span> inquirer = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;inquirer&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> fs = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;fs&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> os = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;os&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> &#123; Command &#125; = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;commander&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> program = <span class=\"hljs-keyword\">new</span> Command()  <span class=\"hljs-comment\">// 同样适用new Command对象创建子命令实例</span><br><span class=\"hljs-keyword\">const</span> &#123; error, warning, info &#125; = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;../plugins/theme&#x27;</span>)<br><br>program<br><span class=\"hljs-comment\">// .option(&#x27;-p --path &lt;absolue path&gt;&#x27;, &#x27;config file path&#x27;)</span><br><br>program.parse(process.argv)  <span class=\"hljs-comment\">// 无论子命令还是根命令都需要执行program.parse方法，参数详见commander文档</span><br><span class=\"hljs-keyword\">const</span> options = program.opts()  <span class=\"hljs-comment\">// 通过执行program.opts方法获取全部参数对象</span><br><br><span class=\"hljs-comment\">// 定义提示列表，对应对象属性详见inquirer文档</span><br><span class=\"hljs-keyword\">const</span> promptList = [&#123;<br>  <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;input&#x27;</span>,  <span class=\"hljs-comment\">// 输入类型</span><br>  <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;请输入Server酱的SCKEY:&#x27;</span>,  <span class=\"hljs-comment\">// 提示消息</span><br>  <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;server_sckey&#x27;</span>  <span class=\"hljs-comment\">// 变量亩</span><br>&#125;]<br><br><span class=\"hljs-comment\">// 执行inquirer.prompt方法显示提示</span><br><span class=\"hljs-comment\">// 需要注意的是，一旦执行此方法会按顺序显示传入列表的所有提示并获取输入</span><br><span class=\"hljs-comment\">// 显然，这是一个异步操作，复杂的表单需要多次按照表单逻辑调用inquirer.prompt方法来实现</span><br>inquirer.prompt(promptList).then(<span class=\"hljs-function\"><span class=\"hljs-params\">answers</span> =&gt;</span> &#123;<br>  <span class=\"hljs-keyword\">const</span> configDirPath = os.homedir() + <span class=\"hljs-string\">&#x27;/.webmonitor/&#x27;</span>  <span class=\"hljs-comment\">// 获取用户目录绝对路径拼接配置文件夹路径</span><br>  <span class=\"hljs-keyword\">let</span> config = &#123;&#125;<br>  <span class=\"hljs-comment\">// 判断配置文件路径是否存在，不存在则创建路径</span><br>  <span class=\"hljs-keyword\">if</span> (fs.existsSync(configDirPath + <span class=\"hljs-string\">&#x27;config.json&#x27;</span>)) &#123;<br>    <span class=\"hljs-keyword\">const</span> rawdata = fs.readFileSync(configDirPath + <span class=\"hljs-string\">&#x27;config.json&#x27;</span>)<br>    config = <span class=\"hljs-built_in\">JSON</span>.parse(rawdata)<br>  &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (!fs.existsSync(configDirPath)) fs.mkdirSync(configDirPath)<br><br>  config.server_sckey = answers.server_sckey <span class=\"hljs-comment\">// 读入输入</span><br><br>  <span class=\"hljs-comment\">// 保存到配置文件</span><br>  fs.writeFileSync(configDirPath + <span class=\"hljs-string\">&#x27;config.json&#x27;</span>, <span class=\"hljs-built_in\">JSON</span>.stringify(config), &#123; <span class=\"hljs-attr\">flag</span>: <span class=\"hljs-string\">&#x27;w+&#x27;</span> &#125;)<br>  <span class=\"hljs-built_in\">console</span>.log(info(<span class=\"hljs-string\">`Config file save as <span class=\"hljs-subst\">$&#123;configDirPath&#125;</span>config.json`</span>))<br>&#125;)<br><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"run命令参数定义\"><a href=\"#run命令参数定义\" class=\"headerlink\" title=\"run命令参数定义\"></a>run命令参数定义</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/run.js\">/bin/run.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">program<br>  .usage(<span class=\"hljs-string\">&#x27;-u &lt;target url&gt; [options]&#x27;</span>)  <span class=\"hljs-comment\">// 输出：命令 + usage内容</span><br>  .requiredOption(<span class=\"hljs-string\">&#x27;-u --url &lt;url&gt;&#x27;</span>, <span class=\"hljs-string\">&#x27;monitoring target&#x27;</span>, validator.isUrl)<br>  <span class=\"hljs-comment\">// 必须参数，第三个参数为验证和处理函数，返回验证处理后的值，详见参数处理</span><br>  .option(<span class=\"hljs-string\">&#x27;-l, --log&#x27;</span>, <span class=\"hljs-string\">&#x27;log mode&#x27;</span>, <span class=\"hljs-literal\">false</span>)<br>  <span class=\"hljs-comment\">// 此处第三个参数为默认值，无输入变量，即第一个参数无 &lt;any&gt; 的，检测到该参数则对应值为true，否则为undefined，所以设置了默认值为false</span><br>  .option(<span class=\"hljs-string\">&#x27;-i, --interval &lt;delay&gt;&#x27;</span>, <span class=\"hljs-string\">&#x27;the interval between initiating a web request in seconds&#x27;</span>, validator.isInt, <span class=\"hljs-number\">60</span>)<br>  <span class=\"hljs-comment\">// 此处第三个参数为验证函数，第四个参数为默认值</span><br>  .option(<span class=\"hljs-string\">&#x27;-D, --debug&#x27;</span>, <span class=\"hljs-string\">&#x27;debug mode&#x27;</span>, <span class=\"hljs-literal\">false</span>)<br>  .option(<span class=\"hljs-string\">&#x27;-d, --daemon&#x27;</span>, <span class=\"hljs-string\">&#x27;monitor whether to continue after the change of the web page is detected&#x27;</span>, <span class=\"hljs-literal\">false</span>)<br>  .addOption(<span class=\"hljs-keyword\">new</span> Option(<span class=\"hljs-string\">&#x27;-M, --mode &lt;operation mode&gt;&#x27;</span>, <span class=\"hljs-string\">&#x27;currently local only&#x27;</span>).choices([<span class=\"hljs-string\">&#x27;local&#x27;</span>]).default(<span class=\"hljs-string\">&#x27;local&#x27;</span>))<br>  <span class=\"hljs-comment\">// 自定义参数，使用new Option方法创建，choices要求输入值在枚举范围内，default设置默认值，其他方法commander.js文档并无说明，但是可以通过查看Option方法定义代码找到对应接口</span><br>  .addOption(<span class=\"hljs-keyword\">new</span> Option(<span class=\"hljs-string\">&#x27;-m, --method &lt;request method&gt;&#x27;</span>, <span class=\"hljs-string\">&#x27;current get only&#x27;</span>).choices([<span class=\"hljs-string\">&#x27;get&#x27;</span>]).default(<span class=\"hljs-string\">&#x27;get&#x27;</span>))<br>  .option(<span class=\"hljs-string\">&#x27;-r, --retry &lt;retry time&gt;&#x27;</span>, <span class=\"hljs-string\">&#x27;retry times limit&#x27;</span>, validator.isInt, <span class=\"hljs-number\">5</span>)<br>  .option(<span class=\"hljs-string\">&#x27;-w, --wechat&#x27;</span>, <span class=\"hljs-string\">&#x27;enable Wechat push notification&#x27;</span>)<br><br>program.parse(process.argv)<br><br><span class=\"hljs-keyword\">const</span> options = program.opts()\t<span class=\"hljs-comment\">// 解析获取参数对象</span><br><span class=\"hljs-keyword\">if</span> (options.debug) <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;options: &#x27;</span>, options)  <span class=\"hljs-comment\">// 如果是调试模式则打印全部参数</span><br></code></pre></td></tr></table></figure>\n\n<h4 id=\"实现逻辑\"><a href=\"#实现逻辑\" class=\"headerlink\" title=\"实现逻辑\"></a>实现逻辑</h4><p>获取网页内容，并进行比较<br>由于网页源码可能发生动态改变，因此我们使用cheerio对网页内容进行解析，获取网页的显示进行比较，同时方便后续对自定义监测内容的升级。</p>\n<h4 id=\"获取网页内容\"><a href=\"#获取网页内容\" class=\"headerlink\" title=\"获取网页内容\"></a>获取网页内容</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/bin/run.js\">/bin/run.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> getRes = <span class=\"hljs-keyword\">async</span> () =&gt; &#123;<br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> &#123;<br>    axios[options.method](options.url)<br>      .then(<span class=\"hljs-function\"><span class=\"hljs-params\">r</span> =&gt;</span> &#123;<br>        <span class=\"hljs-keyword\">const</span> $ = cheerio.load(r.data)<br>        <span class=\"hljs-keyword\">if</span> (options.debug) <span class=\"hljs-built_in\">console</span>.log($.text())<br>        resolve($.text())<br>      &#125;).catch(<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;<br>        <span class=\"hljs-keyword\">if</span> (e.response) &#123;<br>          <span class=\"hljs-comment\">// The request was made and the server responded with a status code</span><br>          <span class=\"hljs-comment\">// that falls out of the range of 2xx</span><br>          <span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&#x27;Error! Request error. StatusCode:&#x27;</span>, e.response.status))<br>          <span class=\"hljs-keyword\">if</span> (options.debug || options.log) &#123;<br>            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;Response Data:&#x27;</span>, e.response.data)<br>            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;Response Header:&#x27;</span>, e.response.headers)<br>          &#125;<br>        &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (e.request) &#123;<br>          <span class=\"hljs-comment\">// The request was made but no response was received</span><br>          <span class=\"hljs-comment\">// `error.request` is an instance of XMLHttpRequest in the browser and an instance of</span><br>          <span class=\"hljs-comment\">// http.ClientRequest in node.js</span><br>          <span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&#x27;The request was made but no response was received&#x27;</span>))<br>          <span class=\"hljs-keyword\">if</span> (options.debug || options.log) <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;Request:&#x27;</span>, e.request)<br>          <span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">console</span>.log(warning(<span class=\"hljs-string\">&#x27;add \\&#x27;-l\\&#x27; flag for more info&#x27;</span>))<br>        &#125; <span class=\"hljs-keyword\">else</span> &#123;<br>          <span class=\"hljs-comment\">// Something happened in setting up the request that triggered an Error</span><br>          <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;Error&#x27;</span>, e.message)<br>        &#125;<br>        <span class=\"hljs-keyword\">if</span> (options.debug) <span class=\"hljs-built_in\">console</span>.log(e.config)<br>        reject(e)<br>      &#125;)<br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"主函数\"><a href=\"#主函数\" class=\"headerlink\" title=\"主函数\"></a>主函数</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> main = <span class=\"hljs-keyword\">async</span> () =&gt; &#123;<br>  <span class=\"hljs-comment\">// 如果配置了微信推送，读取配置并构建通知方法</span><br>  <span class=\"hljs-keyword\">if</span> (options.wechat) options.wechat = <span class=\"hljs-keyword\">await</span> notify.wechat()<br>  <span class=\"hljs-keyword\">if</span> (!options.wechat) <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span> <span class=\"hljs-comment\">// 检查是否构建通知方法成功</span><br><br>  <span class=\"hljs-keyword\">let</span> requestCount = <span class=\"hljs-number\">0</span>, retryCount = <span class=\"hljs-number\">0</span><br>  <span class=\"hljs-keyword\">let</span> origin = <span class=\"hljs-keyword\">await</span> getRes()  <span class=\"hljs-comment\">// 获取初始页面</span><br>    .then(<span class=\"hljs-function\"><span class=\"hljs-params\">r</span> =&gt;</span> &#123; <span class=\"hljs-keyword\">return</span> r &#125;)<br>    .catch(<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;<br>      <span class=\"hljs-built_in\">console</span>.log(e)<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span><br>    &#125;)<br><br>  <span class=\"hljs-built_in\">console</span>.log(origin)<br><br>  <span class=\"hljs-keyword\">if</span> (!origin) <span class=\"hljs-keyword\">return</span> &#123; <span class=\"hljs-attr\">code</span>: -<span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;Failed to request a web page for the first time.&#x27;</span> &#125;<br>  <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;The request for the web page is successful. Start monitoring.&#x27;</span>)<br>\t<br>  <span class=\"hljs-comment\">// 构建定时循环</span><br>  <span class=\"hljs-keyword\">let</span> pro = <span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-keyword\">async</span> () =&gt; &#123;<br>    <span class=\"hljs-comment\">// 获取新的页面内容</span><br>    <span class=\"hljs-keyword\">let</span> newWeb = <span class=\"hljs-keyword\">await</span> getRes().then(<span class=\"hljs-function\"><span class=\"hljs-params\">r</span> =&gt;</span> &#123;<br>      requestCount++<br>      retryCount = <span class=\"hljs-number\">0</span><br>      <span class=\"hljs-keyword\">return</span> r<br>    &#125;).catch(<span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> &#123;<br>      retryCount++<br>      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span><br>    &#125;)<br><br>    <span class=\"hljs-comment\">// The web page has not changed and is in log mode</span><br>    <span class=\"hljs-keyword\">if</span> (newWeb &amp;&amp; newWeb == origin &amp;&amp; options.log) <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`Request <span class=\"hljs-subst\">$&#123;requestCount&#125;</span> times. The web page remains unchanged.`</span>)<br>    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (newWeb &amp;&amp; newWeb != origin) &#123;<br>      <span class=\"hljs-built_in\">console</span>.log(info(<span class=\"hljs-string\">&#x27;The web page has changed!&#x27;</span>))<br>      <span class=\"hljs-keyword\">if</span> (options.wechat) options.wechat()  <span class=\"hljs-comment\">// 调用微信通知</span><br>      <span class=\"hljs-keyword\">if</span> (!options.daemon) &#123;  <span class=\"hljs-comment\">// 非守护模式则退出</span><br>        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;process exit&#x27;</span>)<br>        <span class=\"hljs-built_in\">clearInterval</span>(pro)<br>      &#125; <span class=\"hljs-keyword\">else</span> origin = newWeb<br>    &#125;<br>    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (!newWeb &amp;&amp; retryCount &lt;= options.retry) <span class=\"hljs-built_in\">console</span>.log(warning(<span class=\"hljs-string\">`Request fail, retry for <span class=\"hljs-subst\">$&#123;retryCount&#125;</span> times`</span>))<br>    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (!newWeb &amp;&amp; retryCount &gt; options.retry) &#123;<br>      <span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&#x27;The number of retries exceeds the limit! Process exit.&#x27;</span>))<br>      <span class=\"hljs-built_in\">clearInterval</span>(pro)<br>    &#125;<br>  &#125;, <span class=\"hljs-number\">1000</span> * options.interval)<br>&#125;<br><br>main()<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><h4 id=\"微信通知\"><a href=\"#微信通知\" class=\"headerlink\" title=\"微信通知\"></a>微信通知</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/plugins/notify.js\">/plugins/notify.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> wechat = <span class=\"hljs-keyword\">async</span> () =&gt; &#123;<br>  <span class=\"hljs-keyword\">const</span> configDirPath = os.homedir() + <span class=\"hljs-string\">&#x27;/.webmonitor/&#x27;</span><br>  <span class=\"hljs-keyword\">let</span> config = &#123;&#125;<br>  <span class=\"hljs-keyword\">if</span> (fs.existsSync(configDirPath + <span class=\"hljs-string\">&#x27;config.json&#x27;</span>)) &#123;<br>    <span class=\"hljs-keyword\">const</span> rawdata = fs.readFileSync(configDirPath + <span class=\"hljs-string\">&#x27;config.json&#x27;</span>)<br>    config = <span class=\"hljs-built_in\">JSON</span>.parse(rawdata)<br>  &#125;<br><br>  <span class=\"hljs-keyword\">if</span> (!config.server_sckey) &#123;<br>    <span class=\"hljs-built_in\">console</span>.log(error(<span class=\"hljs-string\">&#x27;Error: server酱 SCKEY no configured.&#x27;</span>))<br>    <span class=\"hljs-built_in\">console</span>.log(info(<span class=\"hljs-string\">&#x27;please run \\&#x27;wmcli config\\&#x27; to config SCKEY&#x27;</span>))<br>    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;process exit.&#x27;</span>)<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span><br>  &#125;<br><br>  <span class=\"hljs-keyword\">const</span> promptList = [&#123;<br>    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;input&#x27;</span>,<br>    <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;请输入通知消息标题:&#x27;</span>,<br>    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;title&#x27;</span><br>  &#125;, &#123;<br>    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;input&#x27;</span>,<br>    <span class=\"hljs-attr\">message</span>: <span class=\"hljs-string\">&#x27;请输入通知消息内容:&#x27;</span>,<br>    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&#x27;content&#x27;</span><br>  &#125;,]<br><br>  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">await</span> inquirer.prompt(promptList).then(<span class=\"hljs-function\"><span class=\"hljs-params\">answers</span> =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>&#123;<br>      axios.get(<span class=\"hljs-string\">`https://sc.ftqq.com/<span class=\"hljs-subst\">$&#123;config.server_sckey&#125;</span>.send`</span>, &#123;<br>        <span class=\"hljs-attr\">params</span>: &#123;<br>          <span class=\"hljs-attr\">text</span>: answers.title,<br>          <span class=\"hljs-attr\">desp</span>: answers.content<br>        &#125;<br>      &#125;)<br>    &#125;<br>  &#125;)<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h4 id=\"参数处理验证器\"><a href=\"#参数处理验证器\" class=\"headerlink\" title=\"参数处理验证器\"></a>参数处理验证器</h4><p><a href=\"https://github.com/JasonLamv-t/WebMonitor/blob/main/plugins/validator.js\">/plugins/validator.js</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">const</span> &#123; InvalidOptionArgumentError &#125; = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;commander&#x27;</span>)  <span class=\"hljs-comment\">// commander自带的异常</span><br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isUrl</span>(<span class=\"hljs-params\">url</span>) </span>&#123;<br>  <span class=\"hljs-keyword\">const</span> r = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">RegExp</span>(<span class=\"hljs-string\">&#x27;^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d&#123;1,2&#125;|2[0-4]\\\\d|25[0-5]))&#123;2&#125;(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]&#123;2,&#125;)))|localhost)(?::\\\\d&#123;2,5&#125;)?(?:(/|\\\\?|#)[^\\\\s]*)?$&#x27;</span>, <span class=\"hljs-string\">&#x27;g&#x27;</span>)<br>  <span class=\"hljs-keyword\">if</span> (!r.test(url)) <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> InvalidOptionArgumentError(<span class=\"hljs-string\">&#x27;Not a legitimate URL.&#x27;</span>)  <span class=\"hljs-comment\">// 抛出异常</span><br>  <span class=\"hljs-keyword\">return</span> url<br>&#125;<br><br><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isInt</span>(<span class=\"hljs-params\">value, dummyPrevious</span>) </span>&#123;<br>  <span class=\"hljs-comment\">// parseInt takes a string and a radix</span><br>  <span class=\"hljs-keyword\">const</span> parsedValue = <span class=\"hljs-built_in\">parseInt</span>(value, <span class=\"hljs-number\">10</span>)<br>  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">isNaN</span>(parsedValue)) <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> InvalidOptionArgumentError(<span class=\"hljs-string\">&#x27;Not a number.&#x27;</span>)<br>  <span class=\"hljs-keyword\">return</span> parsedValue<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"发布\"><a href=\"#发布\" class=\"headerlink\" title=\"发布\"></a>发布</h2><ol>\n<li>到<a href=\"https://www.npmjs.com/\">npm官网</a>注册一个账户</li>\n<li>执行<code>npm login</code>并输入注册信息进行登陆</li>\n<li>修改<code>package.json</code>或重新执行<code>yarn init</code>或者<code>npm init</code>补全信息</li>\n<li>执行<code>npm publish</code></li>\n</ol>\n"},{"title":"Docker 限制与性能测试","date":"2021-10-24T16:00:00.000Z","keywords":"Docker, Serverless, Serverless-Devs","_content":"# Docker 限制与性能测试\n\n## Benchmark and description\n\n宿主机使用htop及ctop查看进程及占用\n\n![image-20210902054450846](https://tva1.sinaimg.cn/large/008i3skNgy1gu1ujhfwgsj60q704z0te02.jpg)\n\n![image-20210902054532064](https://tva1.sinaimg.cn/large/008i3skNgy1gu1uk5tj9tj60q603474i02.jpg)\n\nDocker 限制：4Core/2G\n\n容器使用stress及hardinfo进行测试\n\n## E1-512MB\n\n### stress -c 1/2/3/4(approximate result)\n\n![image-20210902062258023](https://tva1.sinaimg.cn/large/008i3skNgy1gu1vn4bne5j60q902x74j02.jpg)\n\n![image-20210902062407650](https://tva1.sinaimg.cn/large/008i3skNgy1gu1vobcpt6j60qb050dgv02.jpg)\n\n### stress -c 1 --vm 1 --vm-bytes 500M --vm-keep\n\n![image-20210902062909238](https://tva1.sinaimg.cn/large/008i3skNgy1gu1vtk2ccpj60q7031mxg02.jpg)\n\n![image-20210902062938947](https://tva1.sinaimg.cn/large/008i3skNgy1gu1vu2n9rij60q804zwfh02.jpg)\n\n### hardinfo -m benchmark.so -a\n\n```bash\nCPU Blowfish\n------------\n\n-CPU Blowfish-\n<big><b>This Machine</b></big>\t3100 MHz\t24.643\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t26.1876862\t\nPowerPC 740/750 (280.00MHz)\t(null)\t172.816713\t\n\nCPU CryptoHash\n--------------\n\n-CPU CryptoHash-\n<big><b>This Machine</b></big>\t3100 MHz\t68.646\t\n\nCPU Fibonacci\n-------------\n\n-CPU Fibonacci-\n<big><b>This Machine</b></big>\t3100 MHz\t3.646\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t8.1375674\t\nPowerPC 740/750 (280.00MHz)\t(null)\t58.07682\t\n\nCPU N-Queens\n------------\n\n-CPU N-Queens-\n<big><b>This Machine</b></big>\t3100 MHz\t9.097\t\n\nFPU FFT\n-------\n\n-FPU FFT-\n<big><b>This Machine</b></big>\t3100 MHz\t2.284\t\n\nFPU Raytracing\n--------------\n\n-FPU Raytracing-\n<big><b>This Machine</b></big>\t3100 MHz\t10.704\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t40.8816714\t\nPowerPC 740/750 (280.00MHz)\t(null)\t161.312647\n```\n\n## E1-2048MB\n\n### stress -c 1\n\n![image-20210902064216456](https://tva1.sinaimg.cn/large/008i3skNgy1gu1w775nn6j60q50313yr02.jpg)\n\n![image-20210902064229313](/Users/linjiaxiang/Library/Application Support/typora-user-images/image-20210902064229313.png)\n\n### stress -c 2/3/4(approximate result)\n\n![image-20210902064306454](https://tva1.sinaimg.cn/large/008i3skNgy1gu1w82jja4j60q802xjrn02.jpg)\n\n![image-20210902064330554](https://tva1.sinaimg.cn/large/008i3skNgy1gu1w8hj6prj60qb050ab602.jpg)\n\n### stress -c 1 --vm 4 --vm-bytes 500M --vm-keep\n\n![image-20210902064622133](https://tva1.sinaimg.cn/large/008i3skNgy1gu1wbgqbnoj60q902vaac02.jpg)\n\n![image-20210902064637917](https://tva1.sinaimg.cn/large/008i3skNgy1gu1wbqkn7uj60q804zdh702.jpg)\n\nCpu usage 200%-300% on the host\n\n### hardinfo -m benchmark.so -a\n\n```bash\nCPU Blowfish\n------------\n\n-CPU Blowfish-\n<big><b>This Machine</b></big>\t3100 MHz\t6.055\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t26.1876862\t\nPowerPC 740/750 (280.00MHz)\t(null)\t172.816713\t\n\nCPU CryptoHash\n--------------\n\n-CPU CryptoHash-\n<big><b>This Machine</b></big>\t3100 MHz\t274.023\t\n\nCPU Fibonacci\n-------------\n\n-CPU Fibonacci-\n<big><b>This Machine</b></big>\t3100 MHz\t1.239\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t8.1375674\t\nPowerPC 740/750 (280.00MHz)\t(null)\t58.07682\t\n\nCPU N-Queens\n------------\n\n-CPU N-Queens-\n<big><b>This Machine</b></big>\t3100 MHz\t6.633\t\n\nFPU FFT\n-------\n\n-FPU FFT-\n<big><b>This Machine</b></big>\t3100 MHz\t0.692\t\n\nFPU Raytracing\n--------------\n\n-FPU Raytracing-\n<big><b>This Machine</b></big>\t3100 MHz\t6.301\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t40.8816714\t\nPowerPC 740/750 (280.00MHz)\t(null)\t161.312647\n```\n\n## E1-3072MB\n\n### stress -c 1\n\n![image-20210902054728161](https://tva1.sinaimg.cn/large/008i3skNgy1gu1um6k81hj60q803haac02.jpg)\n\n![image-20210902054802486](https://tva1.sinaimg.cn/large/008i3skNgy1gu1umv7d52j60qa051q4102.jpg)\n\n### stress -c 2/3/4(approximate result)\n\n![image-20210902054900735](https://tva1.sinaimg.cn/large/008i3skNgy1gu1uns0euwj60qc02zaaa02.jpg)\n\n![image-20210902054918690](https://tva1.sinaimg.cn/large/008i3skNgy1gu1uo39fbnj60qa053jsf02.jpg)\n\n### stress -c 1 --vm 4 --vm-bytes 500M --vm-keep\n\n![image-20210902060507293](https://tva1.sinaimg.cn/large/008i3skNgy1gu1v4jn7u9j60q402zwer02.jpg)\n\n![image-20210902060551944](https://tva1.sinaimg.cn/large/008i3skNgy1gu1v5bs66kj60q704wmyi02.jpg)\n\nCpu usage 300%-400% on the host\n\n### hardinfo -m benchmark.so -a\n\n```bash\nCPU Blowfish\n------------\n\n-CPU Blowfish-\n<big><b>This Machine</b></big>\t3100 MHz\t4.016\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t26.1876862\t\nPowerPC 740/750 (280.00MHz)\t(null)\t172.816713\t\n\nCPU CryptoHash\n--------------\n\n-CPU CryptoHash-\n<big><b>This Machine</b></big>\t3100 MHz\t369.231\t\n\nCPU Fibonacci\n-------------\n\n-CPU Fibonacci-\n<big><b>This Machine</b></big>\t3100 MHz\t1.305\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t8.1375674\t\nPowerPC 740/750 (280.00MHz)\t(null)\t58.07682\t\n\nCPU N-Queens\n------------\n\n-CPU N-Queens-\n<big><b>This Machine</b></big>\t3100 MHz\t4.748\t\n\nFPU FFT\n-------\n\n-FPU FFT-\n<big><b>This Machine</b></big>\t3100 MHz\t0.723\t\n\nFPU Raytracing\n--------------\n\n-FPU Raytracing-\n<big><b>This Machine</b></big>\t3100 MHz\t4.317\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t40.8816714\t\nPowerPC 740/750 (280.00MHz)\t(null)\t161.312647\n```\n\n## C1-2048MB\n\n### stress -c 1/2/3/4(approximate result)\n\n![image-20210902070439847](https://tva1.sinaimg.cn/large/008i3skNgy1gu1wuhu81zj60qb037aab02.jpg)\n\n![image-20210902070453132](https://tva1.sinaimg.cn/large/008i3skNgy1gu1wuq5appj60q704z75e02.jpg)\n\n### stress -c 1 --vm 4 --vm-bytes 500M --vm-keep\n\n![image-20210902070550389](https://tva1.sinaimg.cn/large/008i3skNgy1gu1wvq8rmdj60q90380t102.jpg)\n\n![image-20210902070604889](https://tva1.sinaimg.cn/large/008i3skNgy1gu1wvz4ndgj60q70533zs02.jpg)\n\nCpu usage 200%-300% on the host\n\n### hardinfo -m benchmark.so -a\n\n```bash\nCPU Blowfish\n------------\n\n-CPU Blowfish-\n<big><b>This Machine</b></big>\t3100 MHz\t8.323\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t26.1876862\t\nPowerPC 740/750 (280.00MHz)\t(null)\t172.816713\t\n\nCPU CryptoHash\n--------------\n\n-CPU CryptoHash-\n<big><b>This Machine</b></big>\t3100 MHz\t204.086\t\n\nCPU Fibonacci\n-------------\n\n-CPU Fibonacci-\n<big><b>This Machine</b></big>\t3100 MHz\t1.253\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t8.1375674\t\nPowerPC 740/750 (280.00MHz)\t(null)\t58.07682\t\n\nCPU N-Queens\n------------\n\n-CPU N-Queens-\n<big><b>This Machine</b></big>\t3100 MHz\t2.982\t\n\nFPU FFT\n-------\n\n-FPU FFT-\n<big><b>This Machine</b></big>\t3100 MHz\t0.718\t\n\nFPU Raytracing\n--------------\n\n-FPU Raytracing-\n<big><b>This Machine</b></big>\t3100 MHz\t3.430\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t40.8816714\t\nPowerPC 740/750 (280.00MHz)\t(null)\t161.312647\n```\n\n## Data analysis and conclusion\n\n|                              | E1-512M | E1-2048M  | E1-3072M  | C1-2048M  |\n| ---------------------------- | ------- | --------- | --------- | --------- |\n| CPU(only) maximum usage      | 32%/45% | 100%/110% | 200%/202% | 100%/105% |\n| CPU(with RAM) maximum usage  | 32%/45% | 136%/140% | 200%/400% | 80%/300%  |\n| CPU Blowfish(less is better) | 24.643  | 6.055     | 4.016     | 8.323     |\n\n通过对比宿主机CPU使用，发现当容器负载增加时，所有核心的负载都有所上升，0，2，4，6核心尤为显著，docker指定cpuset似乎失效。\n\n通过cpuperiod和cpuquota可以控制cpu性能和内存大小成正比，对应比例与[issue](https://github.com/devsapp/fc/issues/80)给出比例相同；当容器分配性能为1核时，尽管负载平均分配到了宿主机的所有可用核心，但是容器性能仍为宿主机1核。\n\n存在反复大量使用内存的进程时，宿主机的负载会超过存CPU负载极限，推测是docker在调配内存资源时需要额外占用CPU性能。\n\n","source":"_posts/Limitation and performance Test of docker Container.md","raw":"---\ntitle: Docker 限制与性能测试\ndate: 2021-10-25\ncategories:\n- 实践指南\ntags: [Docker, ServerlessDevs, Journal, Docker-Engine-API]\nkeywords: Docker, Serverless, Serverless-Devs \n---\n# Docker 限制与性能测试\n\n## Benchmark and description\n\n宿主机使用htop及ctop查看进程及占用\n\n![image-20210902054450846](https://tva1.sinaimg.cn/large/008i3skNgy1gu1ujhfwgsj60q704z0te02.jpg)\n\n![image-20210902054532064](https://tva1.sinaimg.cn/large/008i3skNgy1gu1uk5tj9tj60q603474i02.jpg)\n\nDocker 限制：4Core/2G\n\n容器使用stress及hardinfo进行测试\n\n## E1-512MB\n\n### stress -c 1/2/3/4(approximate result)\n\n![image-20210902062258023](https://tva1.sinaimg.cn/large/008i3skNgy1gu1vn4bne5j60q902x74j02.jpg)\n\n![image-20210902062407650](https://tva1.sinaimg.cn/large/008i3skNgy1gu1vobcpt6j60qb050dgv02.jpg)\n\n### stress -c 1 --vm 1 --vm-bytes 500M --vm-keep\n\n![image-20210902062909238](https://tva1.sinaimg.cn/large/008i3skNgy1gu1vtk2ccpj60q7031mxg02.jpg)\n\n![image-20210902062938947](https://tva1.sinaimg.cn/large/008i3skNgy1gu1vu2n9rij60q804zwfh02.jpg)\n\n### hardinfo -m benchmark.so -a\n\n```bash\nCPU Blowfish\n------------\n\n-CPU Blowfish-\n<big><b>This Machine</b></big>\t3100 MHz\t24.643\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t26.1876862\t\nPowerPC 740/750 (280.00MHz)\t(null)\t172.816713\t\n\nCPU CryptoHash\n--------------\n\n-CPU CryptoHash-\n<big><b>This Machine</b></big>\t3100 MHz\t68.646\t\n\nCPU Fibonacci\n-------------\n\n-CPU Fibonacci-\n<big><b>This Machine</b></big>\t3100 MHz\t3.646\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t8.1375674\t\nPowerPC 740/750 (280.00MHz)\t(null)\t58.07682\t\n\nCPU N-Queens\n------------\n\n-CPU N-Queens-\n<big><b>This Machine</b></big>\t3100 MHz\t9.097\t\n\nFPU FFT\n-------\n\n-FPU FFT-\n<big><b>This Machine</b></big>\t3100 MHz\t2.284\t\n\nFPU Raytracing\n--------------\n\n-FPU Raytracing-\n<big><b>This Machine</b></big>\t3100 MHz\t10.704\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t40.8816714\t\nPowerPC 740/750 (280.00MHz)\t(null)\t161.312647\n```\n\n## E1-2048MB\n\n### stress -c 1\n\n![image-20210902064216456](https://tva1.sinaimg.cn/large/008i3skNgy1gu1w775nn6j60q50313yr02.jpg)\n\n![image-20210902064229313](/Users/linjiaxiang/Library/Application Support/typora-user-images/image-20210902064229313.png)\n\n### stress -c 2/3/4(approximate result)\n\n![image-20210902064306454](https://tva1.sinaimg.cn/large/008i3skNgy1gu1w82jja4j60q802xjrn02.jpg)\n\n![image-20210902064330554](https://tva1.sinaimg.cn/large/008i3skNgy1gu1w8hj6prj60qb050ab602.jpg)\n\n### stress -c 1 --vm 4 --vm-bytes 500M --vm-keep\n\n![image-20210902064622133](https://tva1.sinaimg.cn/large/008i3skNgy1gu1wbgqbnoj60q902vaac02.jpg)\n\n![image-20210902064637917](https://tva1.sinaimg.cn/large/008i3skNgy1gu1wbqkn7uj60q804zdh702.jpg)\n\nCpu usage 200%-300% on the host\n\n### hardinfo -m benchmark.so -a\n\n```bash\nCPU Blowfish\n------------\n\n-CPU Blowfish-\n<big><b>This Machine</b></big>\t3100 MHz\t6.055\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t26.1876862\t\nPowerPC 740/750 (280.00MHz)\t(null)\t172.816713\t\n\nCPU CryptoHash\n--------------\n\n-CPU CryptoHash-\n<big><b>This Machine</b></big>\t3100 MHz\t274.023\t\n\nCPU Fibonacci\n-------------\n\n-CPU Fibonacci-\n<big><b>This Machine</b></big>\t3100 MHz\t1.239\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t8.1375674\t\nPowerPC 740/750 (280.00MHz)\t(null)\t58.07682\t\n\nCPU N-Queens\n------------\n\n-CPU N-Queens-\n<big><b>This Machine</b></big>\t3100 MHz\t6.633\t\n\nFPU FFT\n-------\n\n-FPU FFT-\n<big><b>This Machine</b></big>\t3100 MHz\t0.692\t\n\nFPU Raytracing\n--------------\n\n-FPU Raytracing-\n<big><b>This Machine</b></big>\t3100 MHz\t6.301\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t40.8816714\t\nPowerPC 740/750 (280.00MHz)\t(null)\t161.312647\n```\n\n## E1-3072MB\n\n### stress -c 1\n\n![image-20210902054728161](https://tva1.sinaimg.cn/large/008i3skNgy1gu1um6k81hj60q803haac02.jpg)\n\n![image-20210902054802486](https://tva1.sinaimg.cn/large/008i3skNgy1gu1umv7d52j60qa051q4102.jpg)\n\n### stress -c 2/3/4(approximate result)\n\n![image-20210902054900735](https://tva1.sinaimg.cn/large/008i3skNgy1gu1uns0euwj60qc02zaaa02.jpg)\n\n![image-20210902054918690](https://tva1.sinaimg.cn/large/008i3skNgy1gu1uo39fbnj60qa053jsf02.jpg)\n\n### stress -c 1 --vm 4 --vm-bytes 500M --vm-keep\n\n![image-20210902060507293](https://tva1.sinaimg.cn/large/008i3skNgy1gu1v4jn7u9j60q402zwer02.jpg)\n\n![image-20210902060551944](https://tva1.sinaimg.cn/large/008i3skNgy1gu1v5bs66kj60q704wmyi02.jpg)\n\nCpu usage 300%-400% on the host\n\n### hardinfo -m benchmark.so -a\n\n```bash\nCPU Blowfish\n------------\n\n-CPU Blowfish-\n<big><b>This Machine</b></big>\t3100 MHz\t4.016\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t26.1876862\t\nPowerPC 740/750 (280.00MHz)\t(null)\t172.816713\t\n\nCPU CryptoHash\n--------------\n\n-CPU CryptoHash-\n<big><b>This Machine</b></big>\t3100 MHz\t369.231\t\n\nCPU Fibonacci\n-------------\n\n-CPU Fibonacci-\n<big><b>This Machine</b></big>\t3100 MHz\t1.305\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t8.1375674\t\nPowerPC 740/750 (280.00MHz)\t(null)\t58.07682\t\n\nCPU N-Queens\n------------\n\n-CPU N-Queens-\n<big><b>This Machine</b></big>\t3100 MHz\t4.748\t\n\nFPU FFT\n-------\n\n-FPU FFT-\n<big><b>This Machine</b></big>\t3100 MHz\t0.723\t\n\nFPU Raytracing\n--------------\n\n-FPU Raytracing-\n<big><b>This Machine</b></big>\t3100 MHz\t4.317\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t40.8816714\t\nPowerPC 740/750 (280.00MHz)\t(null)\t161.312647\n```\n\n## C1-2048MB\n\n### stress -c 1/2/3/4(approximate result)\n\n![image-20210902070439847](https://tva1.sinaimg.cn/large/008i3skNgy1gu1wuhu81zj60qb037aab02.jpg)\n\n![image-20210902070453132](https://tva1.sinaimg.cn/large/008i3skNgy1gu1wuq5appj60q704z75e02.jpg)\n\n### stress -c 1 --vm 4 --vm-bytes 500M --vm-keep\n\n![image-20210902070550389](https://tva1.sinaimg.cn/large/008i3skNgy1gu1wvq8rmdj60q90380t102.jpg)\n\n![image-20210902070604889](https://tva1.sinaimg.cn/large/008i3skNgy1gu1wvz4ndgj60q70533zs02.jpg)\n\nCpu usage 200%-300% on the host\n\n### hardinfo -m benchmark.so -a\n\n```bash\nCPU Blowfish\n------------\n\n-CPU Blowfish-\n<big><b>This Machine</b></big>\t3100 MHz\t8.323\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t26.1876862\t\nPowerPC 740/750 (280.00MHz)\t(null)\t172.816713\t\n\nCPU CryptoHash\n--------------\n\n-CPU CryptoHash-\n<big><b>This Machine</b></big>\t3100 MHz\t204.086\t\n\nCPU Fibonacci\n-------------\n\n-CPU Fibonacci-\n<big><b>This Machine</b></big>\t3100 MHz\t1.253\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t8.1375674\t\nPowerPC 740/750 (280.00MHz)\t(null)\t58.07682\t\n\nCPU N-Queens\n------------\n\n-CPU N-Queens-\n<big><b>This Machine</b></big>\t3100 MHz\t2.982\t\n\nFPU FFT\n-------\n\n-FPU FFT-\n<big><b>This Machine</b></big>\t3100 MHz\t0.718\t\n\nFPU Raytracing\n--------------\n\n-FPU Raytracing-\n<big><b>This Machine</b></big>\t3100 MHz\t3.430\t\nIntel(R) Celeron(R) M processor         1.50GHz\t(null)\t40.8816714\t\nPowerPC 740/750 (280.00MHz)\t(null)\t161.312647\n```\n\n## Data analysis and conclusion\n\n|                              | E1-512M | E1-2048M  | E1-3072M  | C1-2048M  |\n| ---------------------------- | ------- | --------- | --------- | --------- |\n| CPU(only) maximum usage      | 32%/45% | 100%/110% | 200%/202% | 100%/105% |\n| CPU(with RAM) maximum usage  | 32%/45% | 136%/140% | 200%/400% | 80%/300%  |\n| CPU Blowfish(less is better) | 24.643  | 6.055     | 4.016     | 8.323     |\n\n通过对比宿主机CPU使用，发现当容器负载增加时，所有核心的负载都有所上升，0，2，4，6核心尤为显著，docker指定cpuset似乎失效。\n\n通过cpuperiod和cpuquota可以控制cpu性能和内存大小成正比，对应比例与[issue](https://github.com/devsapp/fc/issues/80)给出比例相同；当容器分配性能为1核时，尽管负载平均分配到了宿主机的所有可用核心，但是容器性能仍为宿主机1核。\n\n存在反复大量使用内存的进程时，宿主机的负载会超过存CPU负载极限，推测是docker在调配内存资源时需要额外占用CPU性能。\n\n","slug":"Limitation and performance Test of docker Container","published":1,"updated":"2021-10-25T17:12:45.684Z","_id":"ckv6x1b7c0000y94a35er8mrl","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Docker-&#x9650;&#x5236;&#x4E0E;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;\"><a href=\"#Docker-&#x9650;&#x5236;&#x4E0E;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;\" class=\"headerlink\" title=\"Docker &#x9650;&#x5236;&#x4E0E;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;\"></a>Docker &#x9650;&#x5236;&#x4E0E;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;</h1><h2 id=\"Benchmark-and-description\"><a href=\"#Benchmark-and-description\" class=\"headerlink\" title=\"Benchmark and description\"></a>Benchmark and description</h2><p>&#x5BBF;&#x4E3B;&#x673A;&#x4F7F;&#x7528;htop&#x53CA;ctop&#x67E5;&#x770B;&#x8FDB;&#x7A0B;&#x53CA;&#x5360;&#x7528;</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1ujhfwgsj60q704z0te02.jpg\"><span class=\"image-caption\">image-20210902054450846</span></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1uk5tj9tj60q603474i02.jpg\"><span class=\"image-caption\">image-20210902054532064</span></p>\n<p>Docker &#x9650;&#x5236;&#xFF1A;4Core/2G</p>\n<p>&#x5BB9;&#x5668;&#x4F7F;&#x7528;stress&#x53CA;hardinfo&#x8FDB;&#x884C;&#x6D4B;&#x8BD5;</p>\n<h2 id=\"E1-512MB\"><a href=\"#E1-512MB\" class=\"headerlink\" title=\"E1-512MB\"></a>E1-512MB</h2><h3 id=\"stress-c-1-2-3-4-approximate-result\"><a href=\"#stress-c-1-2-3-4-approximate-result\" class=\"headerlink\" title=\"stress -c 1/2/3/4(approximate result)\"></a>stress -c 1/2/3/4(approximate result)</h3><p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1vn4bne5j60q902x74j02.jpg\"><span class=\"image-caption\">image-20210902062258023</span></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1vobcpt6j60qb050dgv02.jpg\"><span class=\"image-caption\">image-20210902062407650</span></p>\n<h3 id=\"stress-c-1-&#x2013;vm-1-&#x2013;vm-bytes-500M-&#x2013;vm-keep\"><a href=\"#stress-c-1-&#x2013;vm-1-&#x2013;vm-bytes-500M-&#x2013;vm-keep\" class=\"headerlink\" title=\"stress -c 1 &#x2013;vm 1 &#x2013;vm-bytes 500M &#x2013;vm-keep\"></a>stress -c 1 &#x2013;vm 1 &#x2013;vm-bytes 500M &#x2013;vm-keep</h3><p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1vtk2ccpj60q7031mxg02.jpg\"><span class=\"image-caption\">image-20210902062909238</span></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1vu2n9rij60q804zwfh02.jpg\"><span class=\"image-caption\">image-20210902062938947</span></p>\n<h3 id=\"hardinfo-m-benchmark-so-a\"><a href=\"#hardinfo-m-benchmark-so-a\" class=\"headerlink\" title=\"hardinfo -m benchmark.so -a\"></a>hardinfo -m benchmark.so -a</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">CPU Blowfish<br>------------<br><br>-CPU Blowfish-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t24.643\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t26.1876862\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t172.816713\t<br><br>CPU CryptoHash<br>--------------<br><br>-CPU CryptoHash-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t68.646\t<br><br>CPU Fibonacci<br>-------------<br><br>-CPU Fibonacci-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t3.646\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t8.1375674\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t58.07682\t<br><br>CPU N-Queens<br>------------<br><br>-CPU N-Queens-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t9.097\t<br><br>FPU FFT<br>-------<br><br>-FPU FFT-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t2.284\t<br><br>FPU Raytracing<br>--------------<br><br>-FPU Raytracing-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t10.704\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t40.8816714\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t161.312647<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"E1-2048MB\"><a href=\"#E1-2048MB\" class=\"headerlink\" title=\"E1-2048MB\"></a>E1-2048MB</h2><h3 id=\"stress-c-1\"><a href=\"#stress-c-1\" class=\"headerlink\" title=\"stress -c 1\"></a>stress -c 1</h3><p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1w775nn6j60q50313yr02.jpg\"><span class=\"image-caption\">image-20210902064216456</span></p>\n<p>![image-20210902064229313](/Users/linjiaxiang/Library/Application Support/typora-user-images/image-20210902064229313.png)</p>\n<h3 id=\"stress-c-2-3-4-approximate-result\"><a href=\"#stress-c-2-3-4-approximate-result\" class=\"headerlink\" title=\"stress -c 2/3/4(approximate result)\"></a>stress -c 2/3/4(approximate result)</h3><p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1w82jja4j60q802xjrn02.jpg\"><span class=\"image-caption\">image-20210902064306454</span></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1w8hj6prj60qb050ab602.jpg\"><span class=\"image-caption\">image-20210902064330554</span></p>\n<h3 id=\"stress-c-1-&#x2013;vm-4-&#x2013;vm-bytes-500M-&#x2013;vm-keep\"><a href=\"#stress-c-1-&#x2013;vm-4-&#x2013;vm-bytes-500M-&#x2013;vm-keep\" class=\"headerlink\" title=\"stress -c 1 &#x2013;vm 4 &#x2013;vm-bytes 500M &#x2013;vm-keep\"></a>stress -c 1 &#x2013;vm 4 &#x2013;vm-bytes 500M &#x2013;vm-keep</h3><p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1wbgqbnoj60q902vaac02.jpg\"><span class=\"image-caption\">image-20210902064622133</span></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1wbqkn7uj60q804zdh702.jpg\"><span class=\"image-caption\">image-20210902064637917</span></p>\n<p>Cpu usage 200%-300% on the host</p>\n<h3 id=\"hardinfo-m-benchmark-so-a-1\"><a href=\"#hardinfo-m-benchmark-so-a-1\" class=\"headerlink\" title=\"hardinfo -m benchmark.so -a\"></a>hardinfo -m benchmark.so -a</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">CPU Blowfish<br>------------<br><br>-CPU Blowfish-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t6.055\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t26.1876862\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t172.816713\t<br><br>CPU CryptoHash<br>--------------<br><br>-CPU CryptoHash-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t274.023\t<br><br>CPU Fibonacci<br>-------------<br><br>-CPU Fibonacci-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t1.239\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t8.1375674\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t58.07682\t<br><br>CPU N-Queens<br>------------<br><br>-CPU N-Queens-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t6.633\t<br><br>FPU FFT<br>-------<br><br>-FPU FFT-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t0.692\t<br><br>FPU Raytracing<br>--------------<br><br>-FPU Raytracing-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t6.301\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t40.8816714\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t161.312647<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"E1-3072MB\"><a href=\"#E1-3072MB\" class=\"headerlink\" title=\"E1-3072MB\"></a>E1-3072MB</h2><h3 id=\"stress-c-1-1\"><a href=\"#stress-c-1-1\" class=\"headerlink\" title=\"stress -c 1\"></a>stress -c 1</h3><p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1um6k81hj60q803haac02.jpg\"><span class=\"image-caption\">image-20210902054728161</span></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1umv7d52j60qa051q4102.jpg\"><span class=\"image-caption\">image-20210902054802486</span></p>\n<h3 id=\"stress-c-2-3-4-approximate-result-1\"><a href=\"#stress-c-2-3-4-approximate-result-1\" class=\"headerlink\" title=\"stress -c 2/3/4(approximate result)\"></a>stress -c 2/3/4(approximate result)</h3><p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1uns0euwj60qc02zaaa02.jpg\"><span class=\"image-caption\">image-20210902054900735</span></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1uo39fbnj60qa053jsf02.jpg\"><span class=\"image-caption\">image-20210902054918690</span></p>\n<h3 id=\"stress-c-1-&#x2013;vm-4-&#x2013;vm-bytes-500M-&#x2013;vm-keep-1\"><a href=\"#stress-c-1-&#x2013;vm-4-&#x2013;vm-bytes-500M-&#x2013;vm-keep-1\" class=\"headerlink\" title=\"stress -c 1 &#x2013;vm 4 &#x2013;vm-bytes 500M &#x2013;vm-keep\"></a>stress -c 1 &#x2013;vm 4 &#x2013;vm-bytes 500M &#x2013;vm-keep</h3><p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1v4jn7u9j60q402zwer02.jpg\"><span class=\"image-caption\">image-20210902060507293</span></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1v5bs66kj60q704wmyi02.jpg\"><span class=\"image-caption\">image-20210902060551944</span></p>\n<p>Cpu usage 300%-400% on the host</p>\n<h3 id=\"hardinfo-m-benchmark-so-a-2\"><a href=\"#hardinfo-m-benchmark-so-a-2\" class=\"headerlink\" title=\"hardinfo -m benchmark.so -a\"></a>hardinfo -m benchmark.so -a</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">CPU Blowfish<br>------------<br><br>-CPU Blowfish-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t4.016\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t26.1876862\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t172.816713\t<br><br>CPU CryptoHash<br>--------------<br><br>-CPU CryptoHash-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t369.231\t<br><br>CPU Fibonacci<br>-------------<br><br>-CPU Fibonacci-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t1.305\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t8.1375674\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t58.07682\t<br><br>CPU N-Queens<br>------------<br><br>-CPU N-Queens-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t4.748\t<br><br>FPU FFT<br>-------<br><br>-FPU FFT-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t0.723\t<br><br>FPU Raytracing<br>--------------<br><br>-FPU Raytracing-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t4.317\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t40.8816714\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t161.312647<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"C1-2048MB\"><a href=\"#C1-2048MB\" class=\"headerlink\" title=\"C1-2048MB\"></a>C1-2048MB</h2><h3 id=\"stress-c-1-2-3-4-approximate-result-1\"><a href=\"#stress-c-1-2-3-4-approximate-result-1\" class=\"headerlink\" title=\"stress -c 1/2/3/4(approximate result)\"></a>stress -c 1/2/3/4(approximate result)</h3><p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1wuhu81zj60qb037aab02.jpg\"><span class=\"image-caption\">image-20210902070439847</span></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1wuq5appj60q704z75e02.jpg\"><span class=\"image-caption\">image-20210902070453132</span></p>\n<h3 id=\"stress-c-1-&#x2013;vm-4-&#x2013;vm-bytes-500M-&#x2013;vm-keep-2\"><a href=\"#stress-c-1-&#x2013;vm-4-&#x2013;vm-bytes-500M-&#x2013;vm-keep-2\" class=\"headerlink\" title=\"stress -c 1 &#x2013;vm 4 &#x2013;vm-bytes 500M &#x2013;vm-keep\"></a>stress -c 1 &#x2013;vm 4 &#x2013;vm-bytes 500M &#x2013;vm-keep</h3><p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1wvq8rmdj60q90380t102.jpg\"><span class=\"image-caption\">image-20210902070550389</span></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1wvz4ndgj60q70533zs02.jpg\"><span class=\"image-caption\">image-20210902070604889</span></p>\n<p>Cpu usage 200%-300% on the host</p>\n<h3 id=\"hardinfo-m-benchmark-so-a-3\"><a href=\"#hardinfo-m-benchmark-so-a-3\" class=\"headerlink\" title=\"hardinfo -m benchmark.so -a\"></a>hardinfo -m benchmark.so -a</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">CPU Blowfish<br>------------<br><br>-CPU Blowfish-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t8.323\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t26.1876862\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t172.816713\t<br><br>CPU CryptoHash<br>--------------<br><br>-CPU CryptoHash-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t204.086\t<br><br>CPU Fibonacci<br>-------------<br><br>-CPU Fibonacci-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t1.253\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t8.1375674\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t58.07682\t<br><br>CPU N-Queens<br>------------<br><br>-CPU N-Queens-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t2.982\t<br><br>FPU FFT<br>-------<br><br>-FPU FFT-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t0.718\t<br><br>FPU Raytracing<br>--------------<br><br>-FPU Raytracing-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t3.430\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t40.8816714\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t161.312647<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Data-analysis-and-conclusion\"><a href=\"#Data-analysis-and-conclusion\" class=\"headerlink\" title=\"Data analysis and conclusion\"></a>Data analysis and conclusion</h2><table>\n<thead>\n<tr>\n<th></th>\n<th>E1-512M</th>\n<th>E1-2048M</th>\n<th>E1-3072M</th>\n<th>C1-2048M</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>CPU(only) maximum usage</td>\n<td>32%/45%</td>\n<td>100%/110%</td>\n<td>200%/202%</td>\n<td>100%/105%</td>\n</tr>\n<tr>\n<td>CPU(with RAM) maximum usage</td>\n<td>32%/45%</td>\n<td>136%/140%</td>\n<td>200%/400%</td>\n<td>80%/300%</td>\n</tr>\n<tr>\n<td>CPU Blowfish(less is better)</td>\n<td>24.643</td>\n<td>6.055</td>\n<td>4.016</td>\n<td>8.323</td>\n</tr>\n</tbody></table>\n<p>&#x901A;&#x8FC7;&#x5BF9;&#x6BD4;&#x5BBF;&#x4E3B;&#x673A;CPU&#x4F7F;&#x7528;&#xFF0C;&#x53D1;&#x73B0;&#x5F53;&#x5BB9;&#x5668;&#x8D1F;&#x8F7D;&#x589E;&#x52A0;&#x65F6;&#xFF0C;&#x6240;&#x6709;&#x6838;&#x5FC3;&#x7684;&#x8D1F;&#x8F7D;&#x90FD;&#x6709;&#x6240;&#x4E0A;&#x5347;&#xFF0C;0&#xFF0C;2&#xFF0C;4&#xFF0C;6&#x6838;&#x5FC3;&#x5C24;&#x4E3A;&#x663E;&#x8457;&#xFF0C;docker&#x6307;&#x5B9A;cpuset&#x4F3C;&#x4E4E;&#x5931;&#x6548;&#x3002;</p>\n<p>&#x901A;&#x8FC7;cpuperiod&#x548C;cpuquota&#x53EF;&#x4EE5;&#x63A7;&#x5236;cpu&#x6027;&#x80FD;&#x548C;&#x5185;&#x5B58;&#x5927;&#x5C0F;&#x6210;&#x6B63;&#x6BD4;&#xFF0C;&#x5BF9;&#x5E94;&#x6BD4;&#x4F8B;&#x4E0E;<a href=\"https://github.com/devsapp/fc/issues/80\">issue</a>&#x7ED9;&#x51FA;&#x6BD4;&#x4F8B;&#x76F8;&#x540C;&#xFF1B;&#x5F53;&#x5BB9;&#x5668;&#x5206;&#x914D;&#x6027;&#x80FD;&#x4E3A;1&#x6838;&#x65F6;&#xFF0C;&#x5C3D;&#x7BA1;&#x8D1F;&#x8F7D;&#x5E73;&#x5747;&#x5206;&#x914D;&#x5230;&#x4E86;&#x5BBF;&#x4E3B;&#x673A;&#x7684;&#x6240;&#x6709;&#x53EF;&#x7528;&#x6838;&#x5FC3;&#xFF0C;&#x4F46;&#x662F;&#x5BB9;&#x5668;&#x6027;&#x80FD;&#x4ECD;&#x4E3A;&#x5BBF;&#x4E3B;&#x673A;1&#x6838;&#x3002;</p>\n<p>&#x5B58;&#x5728;&#x53CD;&#x590D;&#x5927;&#x91CF;&#x4F7F;&#x7528;&#x5185;&#x5B58;&#x7684;&#x8FDB;&#x7A0B;&#x65F6;&#xFF0C;&#x5BBF;&#x4E3B;&#x673A;&#x7684;&#x8D1F;&#x8F7D;&#x4F1A;&#x8D85;&#x8FC7;&#x5B58;CPU&#x8D1F;&#x8F7D;&#x6781;&#x9650;&#xFF0C;&#x63A8;&#x6D4B;&#x662F;docker&#x5728;&#x8C03;&#x914D;&#x5185;&#x5B58;&#x8D44;&#x6E90;&#x65F6;&#x9700;&#x8981;&#x989D;&#x5916;&#x5360;&#x7528;CPU&#x6027;&#x80FD;&#x3002;</p>\n","site":{"data":{"galleries":[{"name":"深圳日记","cover":"/images/galleries/shenzhen/IMG_0.jpeg","description":"不要沉沦","photos":["/images/galleries/shenzhen/IMG_0.jpeg","/images/galleries/shenzhen/IMG_1.JPG","/images/galleries/shenzhen/IMG_2.JPG","/images/galleries/shenzhen/IMG_3.jpeg","/images/galleries/shenzhen/IMG_4.jpeg","/images/galleries/shenzhen/IMG_5.jpeg","/images/galleries/shenzhen/IMG_6.jpeg","/images/galleries/shenzhen/IMG_7.PNG","/images/galleries/shenzhen/IMG_8.JPG","/images/galleries/shenzhen/IMG_9.jpeg","/images/galleries/shenzhen/IMG_10.jpeg","/images/galleries/shenzhen/IMG_11.jpeg","/images/galleries/shenzhen/IMG_12.JPG","/images/galleries/shenzhen/IMG_13.jpeg","/images/galleries/shenzhen/IMG_14.jpeg"]}]}},"excerpt":"","more":"<h1 id=\"Docker-限制与性能测试\"><a href=\"#Docker-限制与性能测试\" class=\"headerlink\" title=\"Docker 限制与性能测试\"></a>Docker 限制与性能测试</h1><h2 id=\"Benchmark-and-description\"><a href=\"#Benchmark-and-description\" class=\"headerlink\" title=\"Benchmark and description\"></a>Benchmark and description</h2><p>宿主机使用htop及ctop查看进程及占用</p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1ujhfwgsj60q704z0te02.jpg\"  ><span class=\"image-caption\">image-20210902054450846</span></p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1uk5tj9tj60q603474i02.jpg\"  ><span class=\"image-caption\">image-20210902054532064</span></p>\n<p>Docker 限制：4Core/2G</p>\n<p>容器使用stress及hardinfo进行测试</p>\n<h2 id=\"E1-512MB\"><a href=\"#E1-512MB\" class=\"headerlink\" title=\"E1-512MB\"></a>E1-512MB</h2><h3 id=\"stress-c-1-2-3-4-approximate-result\"><a href=\"#stress-c-1-2-3-4-approximate-result\" class=\"headerlink\" title=\"stress -c 1/2/3/4(approximate result)\"></a>stress -c 1/2/3/4(approximate result)</h3><p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1vn4bne5j60q902x74j02.jpg\"  ><span class=\"image-caption\">image-20210902062258023</span></p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1vobcpt6j60qb050dgv02.jpg\"  ><span class=\"image-caption\">image-20210902062407650</span></p>\n<h3 id=\"stress-c-1-–vm-1-–vm-bytes-500M-–vm-keep\"><a href=\"#stress-c-1-–vm-1-–vm-bytes-500M-–vm-keep\" class=\"headerlink\" title=\"stress -c 1 –vm 1 –vm-bytes 500M –vm-keep\"></a>stress -c 1 –vm 1 –vm-bytes 500M –vm-keep</h3><p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1vtk2ccpj60q7031mxg02.jpg\"  ><span class=\"image-caption\">image-20210902062909238</span></p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1vu2n9rij60q804zwfh02.jpg\"  ><span class=\"image-caption\">image-20210902062938947</span></p>\n<h3 id=\"hardinfo-m-benchmark-so-a\"><a href=\"#hardinfo-m-benchmark-so-a\" class=\"headerlink\" title=\"hardinfo -m benchmark.so -a\"></a>hardinfo -m benchmark.so -a</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">CPU Blowfish<br>------------<br><br>-CPU Blowfish-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t24.643\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t26.1876862\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t172.816713\t<br><br>CPU CryptoHash<br>--------------<br><br>-CPU CryptoHash-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t68.646\t<br><br>CPU Fibonacci<br>-------------<br><br>-CPU Fibonacci-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t3.646\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t8.1375674\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t58.07682\t<br><br>CPU N-Queens<br>------------<br><br>-CPU N-Queens-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t9.097\t<br><br>FPU FFT<br>-------<br><br>-FPU FFT-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t2.284\t<br><br>FPU Raytracing<br>--------------<br><br>-FPU Raytracing-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t10.704\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t40.8816714\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t161.312647<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"E1-2048MB\"><a href=\"#E1-2048MB\" class=\"headerlink\" title=\"E1-2048MB\"></a>E1-2048MB</h2><h3 id=\"stress-c-1\"><a href=\"#stress-c-1\" class=\"headerlink\" title=\"stress -c 1\"></a>stress -c 1</h3><p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1w775nn6j60q50313yr02.jpg\"  ><span class=\"image-caption\">image-20210902064216456</span></p>\n<p>![image-20210902064229313](/Users/linjiaxiang/Library/Application Support/typora-user-images/image-20210902064229313.png)</p>\n<h3 id=\"stress-c-2-3-4-approximate-result\"><a href=\"#stress-c-2-3-4-approximate-result\" class=\"headerlink\" title=\"stress -c 2/3/4(approximate result)\"></a>stress -c 2/3/4(approximate result)</h3><p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1w82jja4j60q802xjrn02.jpg\"  ><span class=\"image-caption\">image-20210902064306454</span></p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1w8hj6prj60qb050ab602.jpg\"  ><span class=\"image-caption\">image-20210902064330554</span></p>\n<h3 id=\"stress-c-1-–vm-4-–vm-bytes-500M-–vm-keep\"><a href=\"#stress-c-1-–vm-4-–vm-bytes-500M-–vm-keep\" class=\"headerlink\" title=\"stress -c 1 –vm 4 –vm-bytes 500M –vm-keep\"></a>stress -c 1 –vm 4 –vm-bytes 500M –vm-keep</h3><p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1wbgqbnoj60q902vaac02.jpg\"  ><span class=\"image-caption\">image-20210902064622133</span></p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1wbqkn7uj60q804zdh702.jpg\"  ><span class=\"image-caption\">image-20210902064637917</span></p>\n<p>Cpu usage 200%-300% on the host</p>\n<h3 id=\"hardinfo-m-benchmark-so-a-1\"><a href=\"#hardinfo-m-benchmark-so-a-1\" class=\"headerlink\" title=\"hardinfo -m benchmark.so -a\"></a>hardinfo -m benchmark.so -a</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">CPU Blowfish<br>------------<br><br>-CPU Blowfish-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t6.055\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t26.1876862\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t172.816713\t<br><br>CPU CryptoHash<br>--------------<br><br>-CPU CryptoHash-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t274.023\t<br><br>CPU Fibonacci<br>-------------<br><br>-CPU Fibonacci-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t1.239\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t8.1375674\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t58.07682\t<br><br>CPU N-Queens<br>------------<br><br>-CPU N-Queens-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t6.633\t<br><br>FPU FFT<br>-------<br><br>-FPU FFT-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t0.692\t<br><br>FPU Raytracing<br>--------------<br><br>-FPU Raytracing-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t6.301\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t40.8816714\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t161.312647<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"E1-3072MB\"><a href=\"#E1-3072MB\" class=\"headerlink\" title=\"E1-3072MB\"></a>E1-3072MB</h2><h3 id=\"stress-c-1-1\"><a href=\"#stress-c-1-1\" class=\"headerlink\" title=\"stress -c 1\"></a>stress -c 1</h3><p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1um6k81hj60q803haac02.jpg\"  ><span class=\"image-caption\">image-20210902054728161</span></p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1umv7d52j60qa051q4102.jpg\"  ><span class=\"image-caption\">image-20210902054802486</span></p>\n<h3 id=\"stress-c-2-3-4-approximate-result-1\"><a href=\"#stress-c-2-3-4-approximate-result-1\" class=\"headerlink\" title=\"stress -c 2/3/4(approximate result)\"></a>stress -c 2/3/4(approximate result)</h3><p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1uns0euwj60qc02zaaa02.jpg\"  ><span class=\"image-caption\">image-20210902054900735</span></p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1uo39fbnj60qa053jsf02.jpg\"  ><span class=\"image-caption\">image-20210902054918690</span></p>\n<h3 id=\"stress-c-1-–vm-4-–vm-bytes-500M-–vm-keep-1\"><a href=\"#stress-c-1-–vm-4-–vm-bytes-500M-–vm-keep-1\" class=\"headerlink\" title=\"stress -c 1 –vm 4 –vm-bytes 500M –vm-keep\"></a>stress -c 1 –vm 4 –vm-bytes 500M –vm-keep</h3><p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1v4jn7u9j60q402zwer02.jpg\"  ><span class=\"image-caption\">image-20210902060507293</span></p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1v5bs66kj60q704wmyi02.jpg\"  ><span class=\"image-caption\">image-20210902060551944</span></p>\n<p>Cpu usage 300%-400% on the host</p>\n<h3 id=\"hardinfo-m-benchmark-so-a-2\"><a href=\"#hardinfo-m-benchmark-so-a-2\" class=\"headerlink\" title=\"hardinfo -m benchmark.so -a\"></a>hardinfo -m benchmark.so -a</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">CPU Blowfish<br>------------<br><br>-CPU Blowfish-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t4.016\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t26.1876862\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t172.816713\t<br><br>CPU CryptoHash<br>--------------<br><br>-CPU CryptoHash-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t369.231\t<br><br>CPU Fibonacci<br>-------------<br><br>-CPU Fibonacci-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t1.305\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t8.1375674\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t58.07682\t<br><br>CPU N-Queens<br>------------<br><br>-CPU N-Queens-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t4.748\t<br><br>FPU FFT<br>-------<br><br>-FPU FFT-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t0.723\t<br><br>FPU Raytracing<br>--------------<br><br>-FPU Raytracing-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t4.317\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t40.8816714\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t161.312647<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"C1-2048MB\"><a href=\"#C1-2048MB\" class=\"headerlink\" title=\"C1-2048MB\"></a>C1-2048MB</h2><h3 id=\"stress-c-1-2-3-4-approximate-result-1\"><a href=\"#stress-c-1-2-3-4-approximate-result-1\" class=\"headerlink\" title=\"stress -c 1/2/3/4(approximate result)\"></a>stress -c 1/2/3/4(approximate result)</h3><p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1wuhu81zj60qb037aab02.jpg\"  ><span class=\"image-caption\">image-20210902070439847</span></p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1wuq5appj60q704z75e02.jpg\"  ><span class=\"image-caption\">image-20210902070453132</span></p>\n<h3 id=\"stress-c-1-–vm-4-–vm-bytes-500M-–vm-keep-2\"><a href=\"#stress-c-1-–vm-4-–vm-bytes-500M-–vm-keep-2\" class=\"headerlink\" title=\"stress -c 1 –vm 4 –vm-bytes 500M –vm-keep\"></a>stress -c 1 –vm 4 –vm-bytes 500M –vm-keep</h3><p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1wvq8rmdj60q90380t102.jpg\"  ><span class=\"image-caption\">image-20210902070550389</span></p>\n<p><img  src=\"https://tva1.sinaimg.cn/large/008i3skNgy1gu1wvz4ndgj60q70533zs02.jpg\"  ><span class=\"image-caption\">image-20210902070604889</span></p>\n<p>Cpu usage 200%-300% on the host</p>\n<h3 id=\"hardinfo-m-benchmark-so-a-3\"><a href=\"#hardinfo-m-benchmark-so-a-3\" class=\"headerlink\" title=\"hardinfo -m benchmark.so -a\"></a>hardinfo -m benchmark.so -a</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">CPU Blowfish<br>------------<br><br>-CPU Blowfish-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t8.323\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t26.1876862\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t172.816713\t<br><br>CPU CryptoHash<br>--------------<br><br>-CPU CryptoHash-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t204.086\t<br><br>CPU Fibonacci<br>-------------<br><br>-CPU Fibonacci-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t1.253\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t8.1375674\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t58.07682\t<br><br>CPU N-Queens<br>------------<br><br>-CPU N-Queens-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t2.982\t<br><br>FPU FFT<br>-------<br><br>-FPU FFT-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t0.718\t<br><br>FPU Raytracing<br>--------------<br><br>-FPU Raytracing-<br>&lt;big&gt;&lt;b&gt;This Machine&lt;/b&gt;&lt;/big&gt;\t3100 MHz\t3.430\t<br>Intel(R) Celeron(R) M processor         1.50GHz\t(null)\t40.8816714\t<br>PowerPC 740/750 (280.00MHz)\t(null)\t161.312647<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"Data-analysis-and-conclusion\"><a href=\"#Data-analysis-and-conclusion\" class=\"headerlink\" title=\"Data analysis and conclusion\"></a>Data analysis and conclusion</h2><table>\n<thead>\n<tr>\n<th></th>\n<th>E1-512M</th>\n<th>E1-2048M</th>\n<th>E1-3072M</th>\n<th>C1-2048M</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>CPU(only) maximum usage</td>\n<td>32%/45%</td>\n<td>100%/110%</td>\n<td>200%/202%</td>\n<td>100%/105%</td>\n</tr>\n<tr>\n<td>CPU(with RAM) maximum usage</td>\n<td>32%/45%</td>\n<td>136%/140%</td>\n<td>200%/400%</td>\n<td>80%/300%</td>\n</tr>\n<tr>\n<td>CPU Blowfish(less is better)</td>\n<td>24.643</td>\n<td>6.055</td>\n<td>4.016</td>\n<td>8.323</td>\n</tr>\n</tbody></table>\n<p>通过对比宿主机CPU使用，发现当容器负载增加时，所有核心的负载都有所上升，0，2，4，6核心尤为显著，docker指定cpuset似乎失效。</p>\n<p>通过cpuperiod和cpuquota可以控制cpu性能和内存大小成正比，对应比例与<a href=\"https://github.com/devsapp/fc/issues/80\">issue</a>给出比例相同；当容器分配性能为1核时，尽管负载平均分配到了宿主机的所有可用核心，但是容器性能仍为宿主机1核。</p>\n<p>存在反复大量使用内存的进程时，宿主机的负载会超过存CPU负载极限，推测是docker在调配内存资源时需要额外占用CPU性能。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckv2ro26800012r4a9lzg0ypx","category_id":"ckv2ro26d00042r4admrl7yt1","_id":"ckv2ro26j000d2r4a9bet5722"},{"post_id":"ckv2ro26c00032r4a54ukfm4u","category_id":"ckv2ro26i000b2r4a9g52dce8","_id":"ckv2ro26k000h2r4aek536755"},{"post_id":"ckv2ro26f00062r4a9bg506dw","category_id":"ckv2ro26i000b2r4a9g52dce8","_id":"ckv2ro26l000k2r4a79514gy7"},{"post_id":"ckv2ro26h00092r4a3qv5d5ew","category_id":"ckv2ro26k000g2r4a40npf4o7","_id":"ckv2ro26m000o2r4ae7640ew3"},{"post_id":"ckv6x1b7c0000y94a35er8mrl","category_id":"ckv2ro26i000b2r4a9g52dce8","_id":"ckv6x1b7i0002y94af2ez7ir7"}],"PostTag":[{"post_id":"ckv2ro26c00032r4a54ukfm4u","tag_id":"ckv2ro26g00072r4a5q64dvci","_id":"ckv2ro26l000j2r4aelhy9gmi"},{"post_id":"ckv2ro26c00032r4a54ukfm4u","tag_id":"ckv2ro26i000c2r4a5tfd4jw6","_id":"ckv2ro26l000l2r4ahmwz1c7m"},{"post_id":"ckv2ro26c00032r4a54ukfm4u","tag_id":"ckv2ro26k000f2r4ahfqrblf8","_id":"ckv2ro26l000n2r4a6lf05wiz"},{"post_id":"ckv2ro26f00062r4a9bg506dw","tag_id":"ckv2ro26g00072r4a5q64dvci","_id":"ckv2ro26n000r2r4a1qa27pe4"},{"post_id":"ckv2ro26f00062r4a9bg506dw","tag_id":"ckv2ro26i000c2r4a5tfd4jw6","_id":"ckv2ro26n000s2r4a448uhceg"},{"post_id":"ckv2ro26f00062r4a9bg506dw","tag_id":"ckv2ro26k000f2r4ahfqrblf8","_id":"ckv2ro26n000t2r4ae1pa051z"},{"post_id":"ckv2ro26h00092r4a3qv5d5ew","tag_id":"ckv2ro26g00072r4a5q64dvci","_id":"ckv2ro26n000u2r4adu3f51s8"},{"post_id":"ckv6x1b7c0000y94a35er8mrl","tag_id":"ckv6x1b7g0001y94a6m7a2m9l","_id":"ckv6x1b7j0004y94a1jjqdm1g"},{"post_id":"ckv6x1b7c0000y94a35er8mrl","tag_id":"ckv2ro26i000c2r4a5tfd4jw6","_id":"ckv6x1b7j0005y94acbxc75kx"},{"post_id":"ckv6x1b7c0000y94a35er8mrl","tag_id":"ckv2ro26k000f2r4ahfqrblf8","_id":"ckv6x1b7j0006y94abunu4er2"},{"post_id":"ckv6x1b7c0000y94a35er8mrl","tag_id":"ckv6x1b7i0003y94a9jz4dmde","_id":"ckv6x1b7j0007y94a86d413b3"}],"Tag":[{"name":"Node","_id":"ckv2ro26g00072r4a5q64dvci"},{"name":"ServerlessDevs","_id":"ckv2ro26i000c2r4a5tfd4jw6"},{"name":"Journal","_id":"ckv2ro26k000f2r4ahfqrblf8"},{"name":"Docker","_id":"ckv6x1b7g0001y94a6m7a2m9l"},{"name":"Docker-Engine-API","_id":"ckv6x1b7i0003y94a9jz4dmde"}]}}